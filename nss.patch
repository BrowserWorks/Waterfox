commit 86e39653f3a624481b7c8ad95391ff054f6a60e8
Author: Alex Kontos <alex@waterfoxproject.org>
Date:   Fri Sep 29 01:52:33 2017 +0100

    Bug 1377618 - Update Firefox 56 to NSS_3_32_1_RTM.

diff --git b/old-configure.in a/old-configure.in
index d0c3f530a739..ab686efa2757 100644
--- b/old-configure.in
+++ a/old-configure.in
@@ -2022,7 +2022,7 @@ MOZ_ARG_WITH_BOOL(system-nss,
     _USE_SYSTEM_NSS=1 )
 
 if test -n "$_USE_SYSTEM_NSS"; then
-    AM_PATH_NSS(3.32.1, [MOZ_SYSTEM_NSS=1], [AC_MSG_ERROR([you don't have NSS installed or your version is too old])])
+    AM_PATH_NSS(3.32, [MOZ_SYSTEM_NSS=1], [AC_MSG_ERROR([you don't have NSS installed or your version is too old])])
 fi
 
 if test -n "$MOZ_SYSTEM_NSS"; then
diff --git b/security/nss/TAG-INFO a/security/nss/TAG-INFO
index 2ff04f990001..6c2d2b7cca1a 100644
--- b/security/nss/TAG-INFO
+++ a/security/nss/TAG-INFO
@@ -1 +1 @@
-NSS_3_32_1_RTM
+NSS_3_32_RTM
diff --git b/security/nss/coreconf/coreconf.dep a/security/nss/coreconf/coreconf.dep
index 590d1bfaeee3..5182f75552c8 100644
--- b/security/nss/coreconf/coreconf.dep
+++ a/security/nss/coreconf/coreconf.dep
@@ -10,4 +10,3 @@
  */
 
 #error "Do not include this header file."
-
diff --git b/security/nss/lib/nss/nss.h a/security/nss/lib/nss/nss.h
index 8238faca7ea6..61c50054e270 100644
--- b/security/nss/lib/nss/nss.h
+++ a/security/nss/lib/nss/nss.h
@@ -22,10 +22,10 @@
  * The format of the version string should be
  *     "<major version>.<minor version>[.<patch level>[.<build number>]][ <ECC>][ <Beta>]"
  */
-#define NSS_VERSION "3.32.1" _NSS_CUSTOMIZED
+#define NSS_VERSION "3.32" _NSS_CUSTOMIZED
 #define NSS_VMAJOR 3
 #define NSS_VMINOR 32
-#define NSS_VPATCH 1
+#define NSS_VPATCH 0
 #define NSS_VBUILD 0
 #define NSS_BETA PR_FALSE
 
diff --git b/security/nss/lib/softoken/softkver.h a/security/nss/lib/softoken/softkver.h
index 43baf64d6421..3680e0073987 100644
--- b/security/nss/lib/softoken/softkver.h
+++ a/security/nss/lib/softoken/softkver.h
@@ -21,7 +21,7 @@
  * The format of the version string should be
  *     "<major version>.<minor version>[.<patch level>[.<build number>]][ <ECC>][ <Beta>]"
  */
-#define SOFTOKEN_VERSION "3.32.1" SOFTOKEN_ECC_STRING
+#define SOFTOKEN_VERSION "3.32" SOFTOKEN_ECC_STRING " Beta"
 #define SOFTOKEN_VMAJOR 3
 #define SOFTOKEN_VMINOR 32
 #define SOFTOKEN_VPATCH 1
diff --git b/security/nss/lib/ssl/ssl3con.c a/security/nss/lib/ssl/ssl3con.c
index 5cbe2bd0941b..686ac55140e2 100644
--- b/security/nss/lib/ssl/ssl3con.c
+++ a/security/nss/lib/ssl/ssl3con.c
@@ -9752,12 +9752,13 @@ ssl3_HandleCertificateVerify(sslSocket *ss, PRUint8 *b, PRUint32 length,
 
         hashAlg = ssl_SignatureSchemeToHashType(sigScheme);
 
-        /* Read from the message buffer, but we need to use only up to the end
-         * of the previous handshake message. The length of the transcript up to
-         * that point is saved in |hashes->u.transcriptLen|. */
-        rv = ssl3_ComputeHandshakeHash(ss->ssl3.hs.messages.buf,
-                                       hashes->u.transcriptLen,
-                                       hashAlg, &localHashes);
+        if (hashes->u.pointer_to_hash_input.data) {
+            rv = ssl3_ComputeHandshakeHash(hashes->u.pointer_to_hash_input.data,
+                                           hashes->u.pointer_to_hash_input.len,
+                                           hashAlg, &localHashes);
+        } else {
+            rv = SECFailure;
+        }
 
         if (rv == SECSuccess) {
             hashesForVerify = &localHashes;
@@ -11657,15 +11658,15 @@ ssl3_HandleHandshakeMessage(sslSocket *ss, PRUint8 *b, PRUint32 length,
                  * additional handshake messages will have been added to the
                  * buffer, e.g. the certificate_verify message itself.)
                  *
-                 * Therefore, we use SSL3Hashes.u.transcriptLen to save how much
-                 * data there is and read directly from ss->ssl3.hs.messages
-                 * when calculating the hashes.
+                 * Therefore, we use SSL3Hashes.u.pointer_to_hash_input
+                 * to signal the current state of the buffer.
                  *
                  * ssl3_HandleCertificateVerify will detect
                  *     hashType == handshake_hash_record
                  * and use that information to calculate the hash.
                  */
-                hashes.u.transcriptLen = ss->ssl3.hs.messages.len;
+                hashes.u.pointer_to_hash_input.data = ss->ssl3.hs.messages.buf;
+                hashes.u.pointer_to_hash_input.len = ss->ssl3.hs.messages.len;
                 hashesPtr = &hashes;
             } else {
                 computeHashes = PR_TRUE;
diff --git b/security/nss/lib/ssl/ssl3prot.h a/security/nss/lib/ssl/ssl3prot.h
index ac31cf2630ca..dede24438d1b 100644
--- b/security/nss/lib/ssl/ssl3prot.h
+++ a/security/nss/lib/ssl/ssl3prot.h
@@ -235,7 +235,7 @@ typedef struct {
     union {
         PRUint8 raw[64];
         SSL3HashesIndividually s;
-        unsigned int transcriptLen;
+        SECItem pointer_to_hash_input;
     } u;
 } SSL3Hashes;
 
diff --git b/security/nss/lib/util/nssutil.h a/security/nss/lib/util/nssutil.h
index e8cb52aed91d..5022ebcb1b3d 100644
--- b/security/nss/lib/util/nssutil.h
+++ a/security/nss/lib/util/nssutil.h
@@ -19,7 +19,7 @@
  * The format of the version string should be
  *     "<major version>.<minor version>[.<patch level>[.<build number>]][ <Beta>]"
  */
-#define NSSUTIL_VERSION "3.32.1"
+#define NSSUTIL_VERSION "3.32"
 #define NSSUTIL_VMAJOR 3
 #define NSSUTIL_VMINOR 32
 #define NSSUTIL_VPATCH 1
