[sandboxed_FileSystemDirectoryHandle-getFile.tentative.https.any.worker.html]
  [getFile(create=false) rejects for non-existing files]
    expected: FAIL

  [getFile(create=false) returns existing files]
    expected: FAIL

  [getFile(create=true) creates an empty file for non-existing files]
    expected: FAIL

  [getFile(create=true) returns existing files without erasing]
    expected: FAIL

  [getFile() with "." name]
    expected: FAIL

  [getFile(create=false) with a path separator when the file exists.]
    expected: FAIL

  [getFile(create=true) with a path separator]
    expected: FAIL

  [getFile(create=true) when a directory already exists with the same name]
    expected: FAIL

  [getFile(create=false) when a directory already exists with the same name]
    expected: FAIL

  [getFile() with empty name]
    expected: FAIL

  [getFile() with ".." name]
    expected: FAIL


[sandboxed_FileSystemDirectoryHandle-getFile.tentative.https.any.html]
  [getFile(create=false) rejects for non-existing files]
    expected: FAIL

  [getFile(create=false) returns existing files]
    expected: FAIL

  [getFile(create=true) creates an empty file for non-existing files]
    expected: FAIL

  [getFile(create=true) returns existing files without erasing]
    expected: FAIL

  [getFile() with "." name]
    expected: FAIL

  [getFile(create=false) with a path separator when the file exists.]
    expected: FAIL

  [getFile(create=true) with a path separator]
    expected: FAIL

  [getFile(create=true) when a directory already exists with the same name]
    expected: FAIL

  [getFile(create=false) when a directory already exists with the same name]
    expected: FAIL

  [getFile() with empty name]
    expected: FAIL

  [getFile() with ".." name]
    expected: FAIL

