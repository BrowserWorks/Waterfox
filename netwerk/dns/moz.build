# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

with Files('**'):
    BUG_COMPONENT = ('Core', 'Networking: DNS')

DIRS += [
    'mdns',
    'tests'
]

XPIDL_SOURCES += [
    'nsIDNSByTypeRecord.idl',
    'nsIDNSListener.idl',
    'nsIDNSRecord.idl',
    'nsIDNSService.idl',
    'nsIEffectiveTLDService.idl',
    'nsIIDNService.idl',
    'nsINativeDNSResolverOverride.idl',
    'nsPIDNSService.idl',
]

XPIDL_MODULE = 'necko_dns'

EXTRA_JS_MODULES['netwerk-dns'] += [
    'PublicSuffixList.jsm',
]

XPCSHELL_TESTS_MANIFESTS += ['tests/unit/xpcshell.ini']

EXPORTS += [
    'nsEffectiveTLDService.h',
]

EXPORTS.mozilla.net += [
    'ChildDNSService.h',
    'DNS.h',
    'DNSByTypeRecord.h',
    'DNSListenerProxy.h',
    'DNSRequestBase.h',
    'DNSRequestChild.h',
    'DNSRequestParent.h',
    'HTTPSSVC.h',
    'IDNBlocklistUtils.h',
    'TRRService.h',
    'TRRServiceBase.h',
    'TRRServiceChild.h',
    'TRRServiceParent.h',
]

SOURCES += [
    "GetAddrInfo.cpp", # Undefines UNICODE
    'nsEffectiveTLDService.cpp', # Excluded from UNIFIED_SOURCES due to special build flags.
    'nsHostResolver.cpp', # Redefines LOG
]

UNIFIED_SOURCES += [
    'ChildDNSService.cpp',
    'DNS.cpp',
    'DNSListenerProxy.cpp',
    'DNSRequestChild.cpp',
    'DNSRequestParent.cpp',
    'HTTPSSVC.cpp',
    'IDNBlocklistUtils.cpp',
    'nsDNSService2.cpp',
    'nsIDNService.cpp',
    'punycode.c',
    'TRR.cpp',
    'TRRService.cpp',
    'TRRServiceBase.cpp',
    'TRRServiceChild.cpp',
    'TRRServiceParent.cpp',
]

IPDL_SOURCES = [
    'PDNSRequest.ipdl',
    'PDNSRequestParams.ipdlh',
    'PTRRService.ipdl',
]

include('/ipc/chromium/chromium-config.mozbuild')

FINAL_LIBRARY = 'xul'

GeneratedFile('etld_data.inc', script='prepare_tlds.py',
              inputs=['effective_tld_names.dat'])

# need to include etld_data.inc
LOCAL_INCLUDES += [
    '/netwerk/base',
    '/netwerk/protocol/http',
]

USE_LIBS += ['icu']

if CONFIG['CC_TYPE'] in ('clang', 'gcc'):
    CXXFLAGS += ['-Wno-error=shadow']
