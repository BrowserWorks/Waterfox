# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

TEST_DIRS += ['tests']

XPIDL_SOURCES += [
    'nsIUrlClassifierDBService.idl',
    'nsIUrlClassifierHashCompleter.idl',
    'nsIUrlClassifierPrefixSet.idl',
    'nsIUrlClassifierStreamUpdater.idl',
    'nsIUrlClassifierUtils.idl',
    'nsIUrlListManager.idl',
]

XPIDL_MODULE = 'url-classifier'

# Disable RTTI in google protocol buffer
DEFINES['GOOGLE_PROTOBUF_NO_RTTI'] = True

UNIFIED_SOURCES += [
    'ChunkSet.cpp',
    'Classifier.cpp',
    'LookupCache.cpp',
    'LookupCacheV4.cpp',
    'nsCheckSummedOutputStream.cpp',
    'nsUrlClassifierDBService.cpp',
    'nsUrlClassifierProxies.cpp',
    'nsUrlClassifierUtils.cpp',
    'protobuf/safebrowsing.pb.cc',
    'ProtocolParser.cpp',
    'RiceDeltaDecoder.cpp',
]

# define conflicting LOG() macros
SOURCES += [
    'nsUrlClassifierPrefixSet.cpp',
    'nsUrlClassifierStreamUpdater.cpp',
    'VariableLengthPrefixSet.cpp',
]

# contains variables that conflict with LookupCache.cpp
SOURCES += [
    'HashStore.cpp',
]

EXTRA_COMPONENTS += [
    'nsURLClassifier.manifest',
    'nsUrlClassifierHashCompleter.js',
]

# Same as JS components that are run through the pre-processor.
EXTRA_PP_COMPONENTS += [
    'nsUrlClassifierLib.js',
    'nsUrlClassifierListManager.js',
]

EXTRA_JS_MODULES += [
    'SafeBrowsing.jsm',
]

EXPORTS += [
    'Entries.h',
    'LookupCache.h',
    'LookupCacheV4.h',
    'nsUrlClassifierPrefixSet.h',
    'protobuf/safebrowsing.pb.h',
    'VariableLengthPrefixSet.h',
]

FINAL_LIBRARY = 'xul'

LOCAL_INCLUDES += [
    '../build',
    '/ipc/chromium/src',
]

CXXFLAGS += CONFIG['SQLITE_CFLAGS']

if CONFIG['GNU_CXX']:
    CXXFLAGS += ['-Wno-error=shadow']

if CONFIG['NIGHTLY_BUILD'] or CONFIG['MOZ_DEBUG']:
    DEFINES['MOZ_SAFEBROWSING_DUMP_FAILED_UPDATES'] = True
