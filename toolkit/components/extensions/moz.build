# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


with Files('**'):
    BUG_COMPONENT = ('WebExtensions', 'General')

EXTRA_JS_MODULES += [
    'ConduitsChild.jsm',
    'ConduitsParent.jsm',
    'Extension.jsm',
    'ExtensionActions.jsm',
    'ExtensionActivityLog.jsm',
    'ExtensionChild.jsm',
    'ExtensionChildDevToolsUtils.jsm',
    'ExtensionCommon.jsm',
    'ExtensionContent.jsm',
    'ExtensionPageChild.jsm',
    'ExtensionParent.jsm',
    'ExtensionPermissions.jsm',
    'ExtensionPreferencesManager.jsm',
    'ExtensionProcessScript.jsm',
    'extensionProcessScriptLoader.js',
    'ExtensionSettingsStore.jsm',
    'ExtensionShortcuts.jsm',
    'ExtensionStorage.jsm',
    'ExtensionStorageIDB.jsm',
    'ExtensionStorageSync.jsm',
    'ExtensionStorageSyncKinto.jsm',
    'ExtensionTelemetry.jsm',
    'ExtensionUtils.jsm',
    'FindContent.jsm',
    'MatchURLFilters.jsm',
    'MessageChannel.jsm',
    'MessageManagerProxy.jsm',
    'NativeManifests.jsm',
    'NativeMessaging.jsm',
    'onExtensionBrowser.js',
    'PerformanceCounters.jsm',
    'ProxyChannelFilter.jsm',
    'Schemas.jsm',
    'WebNavigation.jsm',
    'WebNavigationContent.js',
    'WebNavigationFrames.jsm',
]

if CONFIG['MOZ_WIDGET_TOOLKIT'] != "android":
    EXTRA_JS_MODULES += [
        'profiler_get_symbols.js',
        'ProfilerGetSymbols-worker.js',
        'ProfilerGetSymbols.jsm',
    ]

EXTRA_COMPONENTS += [
    'extensions-toolkit.manifest',
]

TESTING_JS_MODULES += [
    'ExtensionTestCommon.jsm',
    'ExtensionXPCShellUtils.jsm',
]

DIRS += [
    'schemas',
    'storage',
    'webrequest',
]

XPIDL_SOURCES += [
    'mozIExtensionProcessScript.idl',
]

XPIDL_MODULE = 'webextensions'

EXPORTS.mozilla = [
    'ExtensionPolicyService.h',
]

EXPORTS.mozilla.extensions = [
    'DocumentObserver.h',
    'MatchGlob.h',
    'MatchPattern.h',
    'WebExtensionContentScript.h',
    'WebExtensionPolicy.h',
]

UNIFIED_SOURCES += [
    'ExtensionPolicyService.cpp',
    'MatchPattern.cpp',
    'WebExtensionPolicy.cpp',
]

FINAL_LIBRARY = 'xul'


JAR_MANIFESTS += ['jar.mn']

BROWSER_CHROME_MANIFESTS += [
    'test/browser/browser.ini',
]

MOCHITEST_MANIFESTS += [
    'test/mochitest/mochitest-remote.ini',
    'test/mochitest/mochitest.ini'
]
MOCHITEST_CHROME_MANIFESTS += ['test/mochitest/chrome.ini']
XPCSHELL_TESTS_MANIFESTS += [
    'test/xpcshell/native_messaging.ini',
    'test/xpcshell/xpcshell-e10s.ini',
    'test/xpcshell/xpcshell-remote.ini',
    'test/xpcshell/xpcshell.ini',
]

SPHINX_TREES['webextensions'] = 'docs'

with Files('docs/**'):
    SCHEDULES.exclusive = ['docs']

include('/ipc/chromium/chromium-config.mozbuild')
