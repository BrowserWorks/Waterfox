# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DIRS += [
    'components',
    'content',
    'forgetaboutsite',
    'identity',
    'locales',
    'modules',
    'mozapps/downloads',
    'mozapps/extensions',
    'mozapps/handling',
    'mozapps/preferences',
    'pluginproblem',
    'profile',
    'themes',
]

if CONFIG['MOZ_UPDATER'] and CONFIG['MOZ_WIDGET_TOOLKIT'] != 'android':
    DIRS += ['mozapps/update']

if CONFIG['MOZ_MAINTENANCE_SERVICE'] or CONFIG['MOZ_UPDATER'] and CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':
# Including mozapps/update/common-standalone allows the maintenance service
# to be built so the maintenance service can be used for things other than
# updating applications.
    DIRS += [
        'mozapps/update/common-standalone',
    ]

if CONFIG['MOZ_MAINTENANCE_SERVICE']:
    DIRS += [
        'components/maintenanceservice'
    ]

DIRS += ['xre']

if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk2', 'gtk3'):
    DIRS += ['system/unixproxy']
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'cocoa':
    DIRS += ['system/osxproxy']
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':
    DIRS += ['system/windowsproxy']
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'android':
    DIRS += ['system/androidproxy']

if CONFIG['MOZ_CRASHREPORTER']:
    DIRS += ['crashreporter']

TEST_HARNESS_FILES.testing.mochitest.browser.toolkit.crashreporter.test.browser += [
    'crashreporter/test/browser/crashreport.sjs',
]

with Files('mozapps/installer/windows/*'):
    BUG_COMPONENT = ('Toolkit', 'NSIS Installer')

with Files('pluginproblem/*'):
    BUG_COMPONENT = ('Core', 'Plug-ins')

with Files('mozapps/preferences/*'):
    BUG_COMPONENT = ('Toolkit', 'Preferences')
