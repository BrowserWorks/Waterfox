name: ‚öôÔ∏é Custom Workflow

on:
  workflow_dispatch:
    inputs:
      engines:
        description: 'Engines'
        required: true
        default: 'bing@search.waterfox.net'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  WFX_RELEASE: 1

jobs:
  windows-x64:
    name: ü™ü Windows X64
    runs-on: [buildjet-16vcpu-ubuntu-2004]
    concurrency:
      group: ${{ github.head_ref }}-windows-x64
      cancel-in-progress: true
    env:
      MOZCONFIG: ".mozconfig-x86_64-pc-windows-msvc"
      SHELL: /bin/sh
      WINEDEBUG: -all
      ARCH: x86_64-pc-mingw32
    steps:
      - name: üì§ Checkout
        uses: actions/checkout@v3

      - name: üß∞ Cache
        uses: actions/cache@v2
        id: cache-win-x64
        with:
          path: |
            ~/win-cross
            ~/.cache/sccache
            ~/.mozbuild
          key: win-${{ hashFiles('**/browser/config/version_display.txt') }}
          restore-keys: |
            win-

      - name: üíø Setup extra build dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libpython3-dev m4 nodejs unzip uuid zip libasound2-dev libcurl4-openssl-dev libdbus-1-dev libdbus-glib-1-dev libdrm-dev libgtk-3-dev libpulse-dev libx11-xcb-dev libxt-dev xvfb upx nsis jq yasm nasm
          aria2c https://www.7-zip.org/a/7z2107-linux-x64.tar.xz
          tar xf 7z2107-linux-x64.tar.xz
          sudo mv 7zz /usr/local/bin/7z

      - name: üíø Setup rust
        run: |
          rustup target add x86_64-pc-windows-msvc
          cargo install cbindgen

      - name: üíø Setup jsign
        run: |
          aria2c https://github.com/ebourg/jsign/releases/download/4.0/jsign_4.0_all.deb
          sudo apt install -y ./jsign_4.0_all.deb

      - name: ‚è¨ Setup win-cross
        run: |
          aws s3 cp s3://waterfox/prep/win-cross.tar.xz win-cross.tar.xz
          tar -xvf win-cross.tar.xz -C $HOME/
        if: steps.cache-win-x64.outputs.cache-hit != 'true'

      - name: üç∑ WINE environment
        run: |
          Xvfb :2 -screen 0 1024x768x16 &
          export DISPLAY=:2

      - name: üèó Build
        run: |
          ./mach create-mach-environment
          ./mach build

      - name: üì¶ Package
        run: |
          ./mach package
          ./mach package-multi-locale --locales ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW

      - name: ‚úçÔ∏è Sign
        run: |
          VERSION_DISPLAY=`cat browser/config/version_display.txt`
          source obj-${{ env.ARCH }}/_virtualenvs/common/bin/activate
          # Handle full installer signing.
          az login --service-principal --username ${{ secrets.AZURE_USER_ID }} --password ${{ secrets.AZURE_USER_PWD }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          jsign --storetype AZUREKEYVAULT --keystore ${{ secrets.AZURE_VAULT_ID }} --alias ${{ secrets.AZURE_CRT }} --tsaurl "http://rfc3161timestamp.globalsign.com/advanced" --tsmode RFC3161 --alg SHA-512 --storepass "$(az account get-access-token --resource "https://vault.azure.net" --tenant ${{ secrets.AZURE_TENANT_ID }} | jq -r .accessToken)" obj-${{ env.ARCH }}/browser/installer/windows/instgen/setup.exe
          find obj-${{ env.ARCH }}/dist/waterfox -type f -name "*.exe" -exec jsign --storetype AZUREKEYVAULT --keystore ${{ secrets.AZURE_VAULT_ID }} --alias ${{ secrets.AZURE_CRT }} --tsaurl "http://rfc3161timestamp.globalsign.com/advanced" --tsmode RFC3161 --alg SHA-512 --storepass "$(az account get-access-token --resource "https://vault.azure.net" --tenant ${{ secrets.AZURE_TENANT_ID }} | jq -r .accessToken)" {} \;
          find obj-${{ env.ARCH }}/dist/waterfox -type f -name "*.dll" -exec jsign --storetype AZUREKEYVAULT --keystore ${{ secrets.AZURE_VAULT_ID }} --alias ${{ secrets.AZURE_CRT }} --tsaurl "http://rfc3161timestamp.globalsign.com/advanced" --tsmode RFC3161 --alg SHA-512 --storepass "$(az account get-access-token --resource "https://vault.azure.net" --tenant ${{ secrets.AZURE_TENANT_ID }} | jq -r .accessToken)" {} \;
          # Add distribution.ini
          mkdir obj-${{ env.ARCH }}/dist/waterfox/distribution
          cp build/distribution/distrubition.ini obj-${{ env.ARCH }}/dist/waterfox/distribution
          sed -i "s/ENGINE_LIST/${{ github.event.inputs.engines }}/g" obj-${{ env.ARCH }}/dist/waterfox/distribution/distribution.ini
          # Repackage installer
          python -m mozbuild.action.make_zip obj-${{ env.ARCH }}/dist/waterfox obj-${{ env.ARCH }}/dist/waterfox.zip
          ./mach repackage installer -o "obj-${{ env.ARCH }}/dist/install/sea/Waterfox $VERSION_DISPLAY Setup.exe" --package-name obj-${{ env.ARCH }}/dist/waterfox --package obj-${{ env.ARCH }}/dist/waterfox.zip --tag browser/installer/windows/app.tag --setupexe obj-${{ env.ARCH }}/browser/installer/windows/instgen/setup.exe --sfx-stub other-licenses/7zstub/firefox/7zSD.Win32.sfx --use-upx
          jsign --storetype AZUREKEYVAULT --keystore ${{ secrets.AZURE_VAULT_ID }} --alias ${{ secrets.AZURE_CRT }} --tsaurl "http://rfc3161timestamp.globalsign.com/advanced" --tsmode RFC3161 --alg SHA-512 --storepass "$(az account get-access-token --resource "https://vault.azure.net" --tenant ${{ secrets.AZURE_TENANT_ID }} | jq -r .accessToken)" "obj-${{ env.ARCH }}/dist/install/sea/Waterfox $VERSION_DISPLAY Setup.exe"
          jsign -s $HOME/win-cross/dummy.pfx --storepass=password --storetype=PKCS12 "obj-${{ env.ARCH }}/dist/install/sea/Waterfox $VERSION_DISPLAY Setup.exe"
          # Handle stub installer signing.
          jsign --storetype AZUREKEYVAULT --keystore ${{ secrets.AZURE_VAULT_ID }} --alias ${{ secrets.AZURE_CRT }} --tsaurl "http://rfc3161timestamp.globalsign.com/advanced" --tsmode RFC3161 --alg SHA-512 --storepass "$(az account get-access-token --resource "https://vault.azure.net" --tenant ${{ secrets.AZURE_TENANT_ID }} | jq -r .accessToken)" obj-${{ env.ARCH }}/browser/installer/windows/instgen/setup-stub.exe
          ./mach repackage installer -o "obj-${{ env.ARCH }}/dist/install/sea/Install Waterfox.exe" --tag browser/installer/windows/stub.tag --setupexe obj-${{ env.ARCH }}/browser/installer/windows/instgen/setup-stub.exe --sfx-stub other-licenses/7zstub/firefox/7zSD.Win32.sfx --use-upx
          jsign --storetype AZUREKEYVAULT --keystore ${{ secrets.AZURE_VAULT_ID }} --alias ${{ secrets.AZURE_CRT }} --tsaurl "http://rfc3161timestamp.globalsign.com/advanced" --tsmode RFC3161 --alg SHA-512 --storepass "$(az account get-access-token --resource "https://vault.azure.net" --tenant ${{ secrets.AZURE_TENANT_ID }} | jq -r .accessToken)" "obj-${{ env.ARCH }}/dist/install/sea/Install Waterfox.exe"
          jsign -s $HOME/win-cross/dummy.pfx --storepass=password --storetype=PKCS12 "obj-${{ env.ARCH }}/dist/install/sea/Install Waterfox.exe"
          az logout
          deactivate

      - name: üÜô Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Waterfox Windows Artifact ${{ github.run_id }}
          path: |
            ./obj-${{ env.ARCH }}/dist/install/sea/*.exe

      - name: üîë Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
          if_key_exists: fail

      - name: ‚ôªÔ∏è Stage files
        run: |
          VERSION_DISPLAY=`cat browser/config/version_display.txt`
          rsync -rtvz --chmod=D2755,F644 --delete-before --progress {./obj-${{ env.ARCH }}/dist/install/sea/Waterfox\ $VERSION_DISPLAY\ Setup.exe,./obj-${{ env.ARCH }}/dist/install/sea/Install\ Waterfox.exe} kontos@rsync.keycdn.com:waterfox/staging/x86_64/Windows_NT/distribution

  macos-x64:
    name: üçé macOS X64
    runs-on: [buildjet-16vcpu-ubuntu-2004]
    concurrency:
      group: ${{ github.head_ref }}-macos-x64
      cancel-in-progress: true
    env:
      shell: bash
      MOZCONFIG: ".mozconfig-x86_64-apple-darwin"
      ARCH: x86_64-apple-darwin
    steps:
      - name: üì§ Checkout
        uses: actions/checkout@v3

      - name: üß∞ Cache restoration
        uses: actions/cache@v2
        id: cache-macos-x64
        with:
          path: |
            ~/macos-cross
            ~/.cache/sccache
          key: macos-x64-${{ hashFiles('**/browser/config/version_display.txt') }}
          restore-keys: |
            macos-x64-

      - name: üíø Build dependencies installation
        run: |
          rustup target add ${{ env.ARCH }}
          cargo install cbindgen
          sudo apt update
          sudo apt install nasm yasm
          aria2c https://www.7-zip.org/a/7z2107-linux-x64.tar.xz
          tar xf 7z2107-linux-x64.tar.xz
          sudo mv 7zz /usr/local/bin/7z

      - name: ‚è¨ Setup macos-cross
        run: |
          aws s3 cp s3://waterfox/prep/macos-cross.tar.xz macos-cross.tar.xz
          tar -xvf macos-cross.tar.xz -C $HOME/
        if: steps.cache-macos-x64.outputs.cache-hit != 'true'

      - name: üèó Build
        run: |
          ./mach create-mach-environment
          ./mach build

      - name: üì¶ Package
        run: |
          ./mach package
          ./mach package-multi-locale --locales ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW

      - name: üÜô Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: macOS X64 Build Artifacts ${{ github.run_id }}
          path: |
            ./obj-${{ env.ARCH }}/dist/waterfox/*.app
            ./obj-${{ env.ARCH }}/dist/host/bin/mar

  macos-arm64:
    name: üçé macOS ARM64
    runs-on: [buildjet-16vcpu-ubuntu-2004]
    concurrency:
      group: ${{ github.head_ref }}-macos-arm64
      cancel-in-progress: true
    env:
      shell: bash
      MOZCONFIG: ".mozconfig-aarch64-apple-darwin"
      ARCH: aarch64-apple-darwin
    steps:
      - name: üì§ Checkout
        uses: actions/checkout@v3

      - name: üß∞ Cache restoration
        uses: actions/cache@v2
        id: cache-macos-arm64
        with:
          path: |
            ~/macos-cross
            ~/.cache/sccache
          key: macos-arm64-${{ hashFiles('**/browser/config/version_display.txt') }}
          restore-keys: |
            macos-arm64-

      - name: üíø Build dependencies installation
        run: |
          rustup target add ${{ env.ARCH }}
          cargo install cbindgen
          aria2c https://www.7-zip.org/a/7z2107-linux-x64.tar.xz
          tar xf 7z2107-linux-x64.tar.xz
          sudo mv 7zz /usr/local/bin/7z

      - name: ‚è¨ Setup macos-cross
        run: |
          aws s3 cp s3://waterfox/prep/macos-cross.tar.xz macos-cross.tar.xz
          tar -xvf macos-cross.tar.xz -C $HOME/
        if: steps.cache-macos-x64.outputs.cache-hit != 'true'

      - name: üèó Build
        run: |
          ./mach create-mach-environment
          ./mach build

      - name: üì¶ Package
        run: |
          ./mach package
          ./mach package-multi-locale --locales ar cs da de el en-GB en-US es-ES es-MX fr hu id it ja ko lt nl nn-NO pl pt-BR pt-PT ru sv-SE th vi zh-CN zh-TW

      - name: üÜô Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: macOS ARM64 Build Artifacts ${{ github.run_id }}
          path: |
            ./obj-${{ env.ARCH }}/dist/waterfox/*.app
            ./obj-${{ env.ARCH }}/dist/host/bin/mar

  macos-x64-finish:
    name: üçé macOS X64 Package and Sign
    needs: [macos-x64]
    runs-on: [macos-latest]
    env:
      ARCH: x86_64-apple-darwin
    steps:
      - name: üì§ Checkout
        uses: actions/checkout@v3

      - name: ‚è¨ Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: macOS X64 Build Artifacts ${{ github.run_id }}
          path: ./obj-${{ env.ARCH }}/dist/

      - name: üíø Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: üíø Setup rsync
        run: |
          brew update
          brew install rsync
          export PATH="/usr/local/bin:$PATH"
          rsync --version

      - name: üíø Setup keychain
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_CRT }}
          p12-password: ${{ secrets.MACOS_PWD }}

      - name: Add distribution
        run: |
          mkdir obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app/Contents/Resources/distribution
          cp build/distribution/distrubition.ini obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app/Contents/Resources/distribution
          sed -i '' -e "s/ENGINE_LIST/${{ github.event.inputs.engines }}/g" obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app/Contents/Resources/distribution/distribution.ini

      - name: ‚úçÔ∏è Sign .app
        run: |
          aria2c https://hg.mozilla.org/releases/mozilla-esr60/raw-file/tip/security/mac/hardenedruntime/codesign.bash
          aria2c https://hg.mozilla.org/releases/mozilla-esr60/raw-file/tip/security/mac/hardenedruntime/production.entitlements.xml
          chmod +x ./codesign.bash
          ./codesign.bash -a ./obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app -i "${{ secrets.MACOS_ID }}" -e ./production.entitlements.xml
          sudo chmod -R 755 ./obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app

      - name: üì¶ Create and sign DMG
        run: |
          VERSION_DISPLAY=`cat browser/config/version_display.txt`
          chmod +x ./browser/branding/waterfox/create-dmg
          ./browser/branding/waterfox/create-dmg \
          --volname "Waterfox Setup" \
          --volicon "browser/branding/waterfox/disk.icns" \
          --background "browser/branding/waterfox/background.png" \
          --window-pos 200 120 \
          --window-size 520 380 \
          --no-internet-enable \
          --icon-size 128 \
          --icon "Waterfox.app" 100 178 \
          --hide-extension "Waterfox.app" \
          --hdiutil-quiet \
          --format UDBZ \
          --eula "browser/branding/waterfox/license.txt" \
          --app-drop-link 400 178 \
          "obj-${{ env.ARCH }}/dist/waterfox/Waterfox ${VERSION_DISPLAY} Setup.dmg" \
          "obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app"
          codesign -s "${{ secrets.MACOS_ID }}" -fv "obj-${{ env.ARCH }}/dist/waterfox/Waterfox ${VERSION_DISPLAY} Setup.dmg"
          xcrun altool --notarize-app -f "obj-${{ env.ARCH }}/dist/waterfox/Waterfox ${VERSION_DISPLAY} Setup.dmg" --primary-bundle-id 'net.waterfox.waterfox' -u ${{ secrets.MACOS_DEV_ID }} -p ${{ secrets.MACOS_DEV_PWD }}

      - name: üÜô Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Waterfox macOS Artifacts ${{ github.run_id }}
          path: |
            ./obj-${{ env.ARCH }}/dist/waterfox/*.dmg

      - name: üîë Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
          if_key_exists: fail

      - name: ‚ôªÔ∏è Stage files
        run: |
          VERSION_DISPLAY=`cat browser/config/version_display.txt`
          rsync -rtvz --chmod=D2755,F644 --delete-before --progress {obj-${{ env.ARCH }}/dist/waterfox/Waterfox\ ${VERSION_DISPLAY}\ Setup.dmg} kontos@rsync.keycdn.com:waterfox/staging/x86_64/Darwin/distribution

  macos-arm64-finish:
    name: üçé macOS ARM64 Package and Sign
    needs: [macos-arm64]
    runs-on: [macos-latest]
    env:
      ARCH: aarch64-apple-darwin
    steps:
      - name: üì§ Checkout
        uses: actions/checkout@v3

      - name: ‚è¨ Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: macOS ARM64 Build Artifacts ${{ github.run_id }}
          path: ./obj-${{ env.ARCH }}/dist/

      - name: üíø Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: üíø Setup rsync
        run: |
          brew update
          brew install rsync
          export PATH="/usr/local/bin:$PATH"
          rsync --version

      - name: üíø Setup keychain
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_CRT }}
          p12-password: ${{ secrets.MACOS_PWD }}

      - name: Add distribution
        run: |
          mkdir obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app/Contents/Resources/distribution
          cp build/distribution/distrubition.ini obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app/Contents/Resources/distribution
          sed -i '' -e "s/ENGINE_LIST/${{ github.event.inputs.engines }}/g" obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app/Contents/Resources/distribution/distribution.ini

      - name: ‚úçÔ∏è Sign .app
        run: |
          aria2c https://hg.mozilla.org/releases/mozilla-esr60/raw-file/tip/security/mac/hardenedruntime/codesign.bash
          aria2c https://hg.mozilla.org/releases/mozilla-esr60/raw-file/tip/security/mac/hardenedruntime/production.entitlements.xml
          chmod +x ./codesign.bash
          ./codesign.bash -a ./obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app -i "${{ secrets.MACOS_ID }}" -e ./production.entitlements.xml
          sudo chmod -R 755 ./obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app

      - name: üì¶ Create and sign DMG
        run: |
          VERSION_DISPLAY=`cat browser/config/version_display.txt`
          chmod +x ./browser/branding/waterfox/create-dmg
          ./browser/branding/waterfox/create-dmg \
          --volname "Waterfox Setup" \
          --volicon "browser/branding/waterfox/disk.icns" \
          --background "browser/branding/waterfox/background.png" \
          --window-pos 200 120 \
          --window-size 520 380 \
          --no-internet-enable \
          --icon-size 128 \
          --icon "Waterfox.app" 100 178 \
          --hide-extension "Waterfox.app" \
          --hdiutil-quiet \
          --format UDBZ \
          --eula "browser/branding/waterfox/license.txt" \
          --app-drop-link 400 178 \
          "obj-${{ env.ARCH }}/dist/waterfox/Waterfox ${VERSION_DISPLAY} ARM Setup.dmg" \
          "obj-${{ env.ARCH }}/dist/waterfox/Waterfox.app"
          codesign -s "${{ secrets.MACOS_ID }}" -fv "obj-${{ env.ARCH }}/dist/waterfox/Waterfox ${VERSION_DISPLAY} ARM Setup.dmg"
          xcrun altool --notarize-app -f "obj-${{ env.ARCH }}/dist/waterfox/Waterfox ${VERSION_DISPLAY} ARM Setup.dmg" --primary-bundle-id 'net.waterfox.waterfox' -u ${{ secrets.MACOS_DEV_ID }} -p ${{ secrets.MACOS_DEV_PWD }}

      - name: üÜô Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Waterfox macOS Artifacts ${{ github.run_id }}
          path: |
            ./obj-${{ env.ARCH }}/dist/waterfox/*.dmg

      - name: üîë Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
          if_key_exists: fail

      - name: ‚ôªÔ∏è Stage files
        run: |
          VERSION_DISPLAY=`cat browser/config/version_display.txt`
          rsync -rtvz --chmod=D2755,F644 --delete-before --progress {obj-${{ env.ARCH }}/dist/waterfox/Waterfox\ ${VERSION_DISPLAY}\ ARM\ Setup.dmg,} kontos@rsync.keycdn.com:waterfox/staging/aarch64/Darwin/distribution
