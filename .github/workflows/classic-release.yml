name: Build Classic for Release

on:
  push:
    tags:
      - '*-classic'

jobs:
    build-windows:
        name: ðŸªŸ Build for Windows
        runs-on: [self-hosted, windows, x64]
        strategy:
            fail-fast: false
        env:
            ENABLE_ARTIFACTS_MODE: "true"
            MOZCONFIG: "./.mozconfig"
            MOZ_NOSPAM: 1
            JSIGN_PATH: /c/mozilla-build/bin/jsign-4.0.jar
            JAVA_PATH: /c/PROGRA~2/COMMON~1/Oracle/Java/javapath/java.exe
            AZURE_VAULT_ID: ${{ secrets.AZURE_VAULT_ID }}
            AZURE_CRT: ${{ secrets.AZURE_CRT }}
            AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            AZURE_USER_ID: ${{ secrets.AZURE_USER_ID }}
            AZURE_USER_PWD: ${{ secrets.AZURE_USER_PWD }}
        steps:
          - name: Checkout branch
            uses: actions/checkout@v2
          - name: Define cache
            uses: actions/cache@v2
            with:
              path: |
                $LOCALAPPDATA/ccache
              key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}

          - name: Mach build
            run: |
              $pattern = '[\\]'
              $env:BUILD_DIR = $env:GITHUB_WORKSPACE
              $env:BUILD_DIR = $env:BUILD_DIR -replace $pattern, '/'
              Write-Output $env:BUILD_DIR
              c:\\mozilla-build\\start-shell.bat "$env:BUILD_DIR/build/github-actions/build.sh"

          - name: Mach build installer
            run: |
              $pattern = '[\\]'
              $env:BUILD_DIR = $env:GITHUB_WORKSPACE
              $env:BUILD_DIR = $env:BUILD_DIR -replace $pattern, '/'
              Write-Output $env:BUILD_DIR
              c:\\mozilla-build\\start-shell.bat "$env:BUILD_DIR/build/github-actions/package.sh"

          - name: Sign
            run: |
              $pattern = '[\\]'
              $env:BUILD_DIR = $env:GITHUB_WORKSPACE
              $env:BUILD_DIR = $env:BUILD_DIR -replace $pattern, '/'
              Write-Output $env:BUILD_DIR
              c:\\mozilla-build\\start-shell.bat "$env:BUILD_DIR/build/github-actions/sign.sh"

          - name: Upload artifact
            uses: actions/upload-artifact@v2
            with:
              name: Artifact Classic Windows ${{ github.run_id }}
              path: ./objdir-*/dist/install/sea/*.exe

    build:
        strategy:
            fail-fast: false
            matrix:
                os: [macos-10.15, ubuntu-18.04]
                name: ["Build for MacOS", "Build for Linux"]

        env:
            ENABLE_ARTIFACTS_MODE: "true"
            MOZCONFIG: "./.mozconfig-ga"
            SHELL: "/bin/bash"
        name: ${{ matrix.name }}
        runs-on: ${{ matrix.os }}
        steps:
          - name: Set up Xcode version
            uses: maxim-lobanov/setup-xcode@v1
            with:
              xcode-version: '11.2.1'
            if: startsWith(matrix.os, 'macos')

          - name: Checkout branch
            uses: actions/checkout@v2

          - name: Cache for macOS
            uses: actions/cache@v2
            with:
              path: |
                ~/Library/Caches/ccache
              key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}
            if: startsWith(matrix.os, 'macos')

          - name: Cache for Linux
            uses: actions/cache@v2
            with:
              path: |
                ~/.ccache
              key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}
            if: startsWith(matrix.os, 'ubuntu')

          - name: Cleanup useless paths
            run: |
              sudo rm -rf /usr/share/dotnet
              sudo rm -rf /opt/ghc
              sudo rm -rf /usr/local/share/boost
              sudo rm -rf "$AGENT_TOOLSDIRECTORY"
            if: startsWith(matrix.os, 'ubuntu')

          - name: Brew dependencies
            run: |
              brew update
              brew install autoconf@2.13 ccache make nasm yasm
            if: startsWith(matrix.os, 'macos')

          - name: Apt-get dependencies
            run: |
              sudo apt-get update
              sudo apt-get install autoconf2.13 ccache libasound2-dev \
              libdbus-glib-1-dev libdrm-dev libfreetype6-dev libgconf2-dev \
              libglib2.0-dev libgtk2.0-dev libgtk-3-dev libpangocairo-1.0-0 \
              libpulse-dev libx11-xcb-dev libxkbcommon-dev nasm-mozilla \
              python2.7 python3 yasm
            if: startsWith(matrix.os, 'ubuntu')

          - name: Get SDK
            run: |
              wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.12.sdk.tar.xz
              tar -xvf MacOSX10.12.sdk.tar.xz
            if: startsWith(matrix.os, 'macos')

          - name: Mach build
            run: |
              ./mach build

          - name: Mach package
            run: |
              ./mach package
            if: env.ENABLE_ARTIFACTS_MODE == 'true'

          - name: Upload macOS artifact
            uses: actions/upload-artifact@v2
            with:
              name: Artifact Classic macOS ${{ github.run_id }}
              path: ./objdir-*/dist/*.dmg
            if: startsWith(matrix.os, 'macos') && env.ENABLE_ARTIFACTS_MODE == 'true'

          - name: Upload Linux artifact
            uses: actions/upload-artifact@v2
            with:
              name: Artifact Classic Linux ${{ github.run_id }}
              path: ./objdir-*/dist/*.tar.bz2
            if: startsWith(matrix.os, 'ubuntu') && env.ENABLE_ARTIFACTS_MODE == 'true'
