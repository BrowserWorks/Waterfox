name: Build Classic for Testing

on:
  pull_request:
    branches:
      - classic
  workflow_dispatch: null

env:
  ENABLE_ARTIFACTS_MODE: "true"
  SHELL: "/bin/bash"

jobs:
  build-linux:
    runs-on: ubuntu-18.04
    container:
      image: ghcr.io/waterfoxco/waterfox_docker_img:latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Cache for Linux
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}
      - name: Build
        run: |
          ./mach build
      - name: Package
        run: |
          ./mach package
          mkdir ./dist/
          mv ./objdir-*/dist/waterfox*.tar.bz2 ./dist/
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: Artifact_Classic_Linux_${{ github.run_id }}
          path: ./dist/waterfox*.tar.bz2
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
  build-mac:
    runs-on: macos-10.15
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Set up Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "11.2.1"
      - name: Install depends
        run: |
          brew update
          brew install autoconf@2.13 ccache make nasm yasm
      - name: Get SDK
        run: |
          wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.12.sdk.tar.xz
          tar -xvf MacOSX10.12.sdk.tar.xz -C ../
      - name: Cache for macOS
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/ccache
          key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}
      - name: Build
        run: |
          ./mach build
      - name: Package
        run: |
          ./mach package
          mkdir ./dist/
          mv ./objdir-*/dist/waterfox*.dmg ./dist/
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v2
        with:
          name: Artifact_Classic_macOS_${{ github.run_id }}
          path: ./dist/waterfox*.dmg
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
  build-windows:
    runs-on: windows-2016
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Set build directory
        run: |
          $pattern = '[\\]'
          $BUILD_DIR = $env:GITHUB_WORKSPACE -replace $pattern, '/'
          echo "G_WORKSPACE=${BUILD_DIR}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Install depends
        run: |
          iwr -useb get.scoop.sh | iex
          scoop install sccache llvm nasm --global
          mkdir -p ~\\scoop\\buckets\\my-bucket
          Copy-Item -Path $env:GITHUB_WORKSPACE\\build\\github-actions\\mozilla-build.json -Destination ~\scoop\buckets\my-bucket
          scoop install my-bucket/mozilla-build --global
      - name: Set system PATH variable
        shell: bash
        run: sed -i 's/SET PATH=.*/&;C:\\Rust\\.cargo\\bin;C:\\ProgramData\\scoop\\shims/g' /c/ProgramData/scoop/apps/mozilla-build/current/start-shell.bat
      - name: Cache for Windows
        uses: actions/cache@v2
        with:
          path: |
            ~/AppData/Local/Mozilla/sccache/cache
          key: ${{ runner.os }}-${{ hashFiles('**/browser/config/version_display.txt') }}
      - name: Build
        run: C:\\ProgramData\\scoop\\apps\\mozilla-build\\current\\start-shell.bat "$Env:G_WORKSPACE/build/github-actions/build.sh"
      - name: Package
        run: C:\\ProgramData\\scoop\\apps\\mozilla-build\\current\\start-shell.bat "$Env:G_WORKSPACE/build/github-actions/packageZip.sh"
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Artifact_Classic_Windows_${{ github.run_id }}
          path: ./dist/waterfox*.zip
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
  checksum:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows, create-appimage]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./dist
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
      - name: Generate checksum file
        run: |
          cd ./dist/
          mv ./Artifact_Classic_*_${{ github.run_id }}/waterfox*.* ./
          checksumFile=$(basename waterfox*.zip | sed 's/.win64.zip//g' | sed 's/$/.sha256/g')
          sha256sum waterfox*.tar.bz2 | tee -a "$checksumFile"
          sha256sum waterfox*.dmg | tee -a "$checksumFile"
          sha256sum waterfox*.zip | tee -a "$checksumFile"
          sha256sum waterfox*.AppImage | tee -a "$checksumFile"
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Artifact_Classic_Checksum_${{ github.run_id }}
          path: ./dist/*.sha256
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
  create-appimage:
    env:
      UPDATE_INFO: "zsync|https://cdn.waterfox.net/releases/linux64/appimage/waterfox-classic-latest-x86_64.AppImage.zsync"
    runs-on: ubuntu-latest
    needs: [build-linux]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./dist
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
      - name: Create AppImage
        run: |
          sudo apt-get update
          sudo apt-get install appstream
          ./build/github-actions/appimage/create_appimage.sh
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Artifact_Classic_AppImage_${{ github.run_id }}
          path: |
            ./dist/waterfox-classic-*-x86_64.AppImage
            ./dist/waterfox-classic-*-x86_64.AppImage.zsync
        if: env.ENABLE_ARTIFACTS_MODE == 'true'
