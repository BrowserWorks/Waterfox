/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */


#include "nsICollection.idl"

/*
 * This entire interface is deprecated and should not be used.
 * See nsIArray and nsIMutableArray for the new implementations.
 *
 * http://groups.google.com/groups?q=nsisupportsarray+group:netscape.public.mozilla.xpcom&hl=en&lr=&ie=UTF-8&oe=UTF-8&selm=3D779491.3050506%40netscape.com&rnum=2
 * http://groups.google.com/groups?q=nsisupportsarray+group:netscape.public.mozilla.xpcom&hl=en&lr=&ie=UTF-8&oe=UTF-8&selm=al8412%245ab2%40ripley.netscape.com&rnum=8
 */

%{C++

class nsIBidirectionalEnumerator;
class nsISupportsArray;
 
#define NS_SUPPORTSARRAY_CID                         \
{ /* bda17d50-0d6b-11d3-9331-00104ba0fd40 */         \
    0xbda17d50,                                      \
    0x0d6b,                                          \
    0x11d3,                                          \
    {0x93, 0x31, 0x00, 0x10, 0x4b, 0xa0, 0xfd, 0x40} \
}
#define NS_SUPPORTSARRAY_CONTRACTID "@mozilla.org/supports-array;1"
 
%}

[deprecated, scriptable, uuid(241addc8-3608-4e73-8083-2fd6fa09eba2)]
interface nsISupportsArray : nsICollection {

  [notxpcom] long IndexOf([const] in nsISupports aPossibleElement);
  
  // xpcom-compatible versions
  long GetIndexOf(in nsISupports aPossibleElement);
  
  [notxpcom] boolean InsertElementAt(in nsISupports aElement,
                                     in unsigned long aIndex);
  [notxpcom] boolean ReplaceElementAt(in nsISupports aElement,
                                      in unsigned long aIndex);

  [notxpcom] boolean RemoveElementAt(in unsigned long aIndex);
  
  // xpcom-compatible versions
  void DeleteElementAt(in unsigned long aIndex);
  
  nsISupportsArray clone();
};

%{C++

// Construct and return a default implementation of nsISupportsArray:
extern MOZ_MUST_USE nsresult
NS_NewISupportsArray(nsISupportsArray** aInstancePtrResult);

%}
