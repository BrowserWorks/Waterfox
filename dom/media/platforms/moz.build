# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

EXPORTS += [
    'agnostic/AgnosticDecoderModule.h',
    'agnostic/DummyMediaDataDecoder.h',
    'agnostic/OpusDecoder.h',
    'agnostic/TheoraDecoder.h',
    'agnostic/VorbisDecoder.h',
    'agnostic/VPXDecoder.h',
    'MediaTelemetryConstants.h',
    'PDMFactory.h',
    'PlatformDecoderModule.h',
    'ReorderQueue.h',
    'SimpleMap.h',
    'wrappers/H264Converter.h',
    'wrappers/MediaDataDecoderProxy.h'

]

UNIFIED_SOURCES += [
    'agnostic/AgnosticDecoderModule.cpp',
    'agnostic/BlankDecoderModule.cpp',
    'agnostic/DummyMediaDataDecoder.cpp',
    'agnostic/NullDecoderModule.cpp',
    'agnostic/OpusDecoder.cpp',
    'agnostic/TheoraDecoder.cpp',
    'agnostic/VorbisDecoder.cpp',
    'agnostic/VPXDecoder.cpp',
    'agnostic/WAVDecoder.cpp',
    'PDMFactory.cpp',
    'wrappers/H264Converter.cpp',
    'wrappers/MediaDataDecoderProxy.cpp'
]

DIRS += [
    'agnostic/eme',
    'agnostic/gmp',
    'omx'
]

if CONFIG['MOZ_WMF']:
    DIRS += [ 'wmf' ];

if CONFIG['MOZ_FFVPX'] or CONFIG['MOZ_FFMPEG']:
    # common code to either FFmpeg or FFVPX
    UNIFIED_SOURCES += [
        'ffmpeg/FFmpegLibWrapper.cpp',
    ]

if CONFIG['MOZ_FFVPX']:
    DIRS += [
        'ffmpeg/ffvpx',
    ]

if CONFIG['MOZ_FFMPEG']:
    DIRS += [
        'ffmpeg',
    ]

if CONFIG['MOZ_AV1']:
    EXPORTS += [
        'agnostic/AOMDecoder.h',
    ]
    UNIFIED_SOURCES += [
        'agnostic/AOMDecoder.cpp',
    ]

if CONFIG['MOZ_APPLEMEDIA']:
  EXPORTS += [
      'apple/AppleDecoderModule.h',
  ]
  UNIFIED_SOURCES += [
      'apple/AppleATDecoder.cpp',
      'apple/AppleCMLinker.cpp',
      'apple/AppleDecoderModule.cpp',
      'apple/AppleVTDecoder.cpp',
      'apple/AppleVTLinker.cpp',
  ]
  OS_LIBS += [
      '-framework AudioToolbox',
  ]

include('/ipc/chromium/chromium-config.mozbuild')

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'android':
    EXPORTS += [
        'android/AndroidDecoderModule.h',
        'android/JavaCallbacksSupport.h',
    ]
    UNIFIED_SOURCES += [
        'android/AndroidDecoderModule.cpp',
        'android/RemoteDataDecoder.cpp',
    ]

FINAL_LIBRARY = 'xul'

if CONFIG['GNU_CXX']:
    CXXFLAGS += ['-Wno-error=shadow']
