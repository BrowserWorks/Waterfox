# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# This picks up *hapticfeedback* which is graveyard
with Files("**"):
    BUG_COMPONENT = ("Core", "DOM")

with Files("*OSFile*"):
    BUG_COMPONENT = ("Toolkit", "OS.File")

with Files("*ocationProvider*"):
    BUG_COMPONENT = ("Core", "Geolocation")

with Files("windows/*LocationProvider*"):
    BUG_COMPONENT = ("Core", "Geolocation")

with Files("mac/*LocationProvider*"):
    BUG_COMPONENT = ("Core", "Geolocation")

with Files("linux/*LocationProvider*"):
    BUG_COMPONENT = ("Core", "Geolocation")

with Files("android/*LocationProvider*"):
    BUG_COMPONENT = ("Core", "Geolocation")

with Files("tests/chrome.ini"):
    BUG_COMPONENT = ("Toolkit", "OS.File")

with Files("tests/*constants*"):
    BUG_COMPONENT = ("Toolkit", "OS.File")

with Files("tests/mochitest.ini"):
    BUG_COMPONENT = ("Core", "DOM: Device Interfaces")

with Files("tests/*1197901*"):
    BUG_COMPONENT = ("Core", "DOM: Device Interfaces")

toolkit = CONFIG['MOZ_WIDGET_TOOLKIT']

if toolkit == 'windows':
    DIRS += ['windows']
elif toolkit == 'cocoa':
    DIRS += ['mac']
elif toolkit == 'android':
    DIRS += ['android']
elif toolkit in ('gtk2', 'gtk3'):
    DIRS += ['linux']

XPIDL_SOURCES += [
    'nsIOSFileConstantsService.idl',
]

XPIDL_MODULE = 'dom_system'

EXPORTS += [
    'nsDeviceSensors.h',
]

EXPORTS.mozilla += [
    'OSFileConstants.h',
]

UNIFIED_SOURCES += [
    'nsDeviceSensors.cpp',
    'OSFileConstants.cpp',
]

EXTRA_COMPONENTS += [
    'NetworkGeolocationProvider.js',
    'NetworkGeolocationProvider.manifest',
]

include('/ipc/chromium/chromium-config.mozbuild')

FINAL_LIBRARY = 'xul'
# We fire the nsDOMDeviceAcceleration
LOCAL_INCLUDES += [
    '/dom/base',
    '/dom/bindings',
    '/js/xpconnect/loader',
    '/xpcom/base',
]

DEFINES['DLL_PREFIX'] = '"%s"' % CONFIG['DLL_PREFIX']
DEFINES['DLL_SUFFIX'] = '"%s"' % CONFIG['DLL_SUFFIX']

MOCHITEST_CHROME_MANIFESTS += ['tests/chrome.ini']
MOCHITEST_MANIFESTS += ['tests/mochitest.ini']
