<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                 type="text/css"?>
<window title="WMode Tests"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
  <script type="application/javascript" src="plugin-utils.js"></script>
  <script type="application/javascript">
    setTestPluginEnabledState(SpecialPowers.Ci.nsIPluginTag.STATE_ENABLED);
  </script>
<body xmlns="http://www.w3.org/1999/xhtml" onload="runTests()">
<embed id="plugin2" type="application/x-test" width="400" height="400" wmode="window"></embed>
<embed id="plugin1" type="application/x-test" width="400" height="400"></embed>
</body>
<script class="testbody" type="application/javascript">
<![CDATA[
SimpleTest.waitForExplicitFinish();

async function runTests() {
  var p1 = document.getElementById("plugin1");
  await SimpleTest.promiseWaitForCondition(() => p1.hasWidget !== undefined,
                                           "Waited too long for plugin to activate");
  is(p1.hasWidget(), false, "Plugin should be windowless by default");

  var p2 = document.getElementById("plugin2");
  await SimpleTest.promiseWaitForCondition(() => p2.hasWidget !== undefined,
                                           "Waited too long for plugin to activate");
  if (navigator.platform.includes("Mac")) {
    is(p2.hasWidget(), false, "Mac does not support windowed plugins");
  } else if (navigator.platform.includes("Win")) {
    is(p2.hasWidget(), true, "Windows supports windowed plugins");
  } else if (navigator.platform.includes("Linux")) {
    is(p2.hasWidget(), false, "Linux does not support windowed plugins");
  }

  SimpleTest.finish();
}
]]>
</script>
</window>
