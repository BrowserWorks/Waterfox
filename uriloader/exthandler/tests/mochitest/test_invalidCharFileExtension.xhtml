<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Test for Handling of unsafe bidi chars</title>
  <script src="/tests/SimpleTest/SimpleTest.js"></script>
  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
</head>
<body>
<p id="display"></p>
<iframe id="test"></iframe>
<script type="text/javascript">
var tests = [
  ["test.png:large", "test.png large.png"],
  ["test.png/large", "test.png_large.png"],
  [":test.png::large:", "test.png large.png"],
];

add_task(async function() {
  let url = SimpleTest.getTestFileURL("HelperAppLauncherDialog_chromeScript.js");
  let chromeScript = SpecialPowers.loadChromeScript(url);

  for (let [name, expected] of tests) {
    let promiseName = new Promise(function(resolve) {
      chromeScript.addMessageListener("suggestedFileName",
                                      function listener(data) {
        chromeScript.removeMessageListener("suggestedFileName", listener);
        resolve(data);
      });
    });
    document.getElementById("test").src =
      "invalidCharFileExtension.sjs?name=" + encodeURIComponent(name);
    is((await promiseName), expected, "got the expected sanitized name");
  }

  let promise = new Promise(function(resolve) {
    chromeScript.addMessageListener("unregistered", function listener() {
      chromeScript.removeMessageListener("unregistered", listener);
      resolve();
    });
  });
  chromeScript.sendAsyncMessage("unregister");
  await promise;

  chromeScript.destroy();
});
</script>
</body>
</html>
