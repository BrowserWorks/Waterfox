/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: sw=2 ts=8 et :
 */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include LayersSurfaces;
include LayersMessages;
include protocol PTexture;

using mozilla::wr::LayoutSize from "mozilla/webrender/webrender_ffi.h";
using mozilla::wr::ImageRendering from "mozilla/webrender/webrender_ffi.h";
using mozilla::wr::MixBlendMode from "mozilla/webrender/webrender_ffi.h";
using mozilla::wr::MaybeImageMask from "mozilla/webrender/WebRenderTypes.h";
using mozilla::wr::ExternalImageId from "mozilla/webrender/WebRenderTypes.h";
using mozilla::wr::ImageKey from "mozilla/webrender/WebRenderTypes.h";
using mozilla::wr::PipelineId from "mozilla/webrender/WebRenderTypes.h";
using mozilla::gfx::MaybeIntSize from "mozilla/gfx/Point.h";
using mozilla::LayerPoint from "Units.h";
using mozilla::layers::MaybeLayerRect from "mozilla/layers/LayersTypes.h";
using class mozilla::gfx::Matrix4x4 from "mozilla/gfx/Matrix.h";
using struct mozilla::void_t from "ipc/IPCMessageUtils.h";

namespace mozilla {
namespace layers {

union OptionalTransform {
  Matrix4x4;
  void_t;
};

union OptionalOpacity {
  float;
  void_t;
};

struct OpAddExternalImage {
  ExternalImageId externalImageId;
  ImageKey key;
};

struct OpAddCompositorAnimations {
  CompositorAnimations data;
  OptionalTransform transform;
  OptionalOpacity opacity;
};

struct OpUpdateAsyncImagePipeline {
  PipelineId pipelineId;
  LayerRect scBounds;
  Matrix4x4 scTransform;
  MaybeIntSize scaleToSize;
  ImageRendering filter;
  MixBlendMode mixBlendMode;
};

union WebRenderParentCommand {
  OpAddExternalImage;
  OpUpdateAsyncImagePipeline;
  CompositableOperation;
  OpAddCompositorAnimations;
};

} // namespace
} // namespace
