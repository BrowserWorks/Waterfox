/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* We can remove the outline since we do add our own focus style on nodes */
.tree:focus {
  outline: none;
}

.tree.inline {
  display: inline-block;
}

.tree.nowrap {
  white-space: nowrap;
}

.tree.noselect {
  user-select: none;
}

.tree .tree-node {
  display: flex;
}

.tree .tree-node:not(.focused):hover {
  background-color: var(--theme-selection-background-hover);
}

.tree-indent {
  display: inline-block;
  width: 12px;
  margin-inline-start: 3px;
  border-inline-start: 1px solid #a2d1ff;
  flex-shrink: 0;
}

.tree-node[data-expandable="false"] .tree-last-indent {
  /* The 13px value is taken from the total width and margins of the arrow
  element of expandables nodes (10px width + 3px margins). That way the
  node's text are indented the same for both expandable and non-expandable
  nodes */
  margin-inline-end: 13px;
}

/* For non expandable root nodes, we don't have .tree-indent elements, so we declare
   the margin on the start of the node */
.tree-node[data-expandable="false"][aria-level="1"] {
  padding-inline-start: 15px;
}

.tree .tree-node[data-expandable="true"] {
  cursor: default;
}

.tree-node button.arrow {
  mask: url("resource://devtools/client/debugger/images/arrow.svg") no-repeat center;
  mask-size: 10px;
  vertical-align: -1px;
  width: 10px;
  height: 10px;
  border: 0;
  padding: 0;
  margin-inline-end: 4px;
  transform-origin: center center;
  transition: transform 125ms var(--animation-curve);
  background-color: var(--theme-icon-dimmed-color);
}

.tree-node button.arrow:not(.expanded) {
  transform: rotate(-90deg);
}

html[dir="rtl"] .tree-node button.arrow:not(.expanded) {
  transform: rotate(90deg);
}

.tree .tree-node.focused {
  color: var(--theme-selection-color);
  background-color: var(--theme-selection-background);
}

/* Invert text selection color in selected rows */
.tree .tree-node.focused ::selection {
  color: var(--theme-selection-background);
  background-color: var(--theme-selection-color);
}

.tree-node.focused button.arrow {
  background-color: currentColor;
}
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

.theme-dark,
.theme-light {
  --number-color: var(--theme-highlight-green);
  --string-color: var(--theme-highlight-red);
  --null-color: var(--theme-comment);
  --object-color: var(--theme-highlight-blue);
  --caption-color: var(--theme-highlight-blue);
  --location-color: var(--theme-comment);
  --source-link-color: var(--theme-highlight-blue);
  --node-color: var(--theme-highlight-purple);
  --reference-color: var(--theme-highlight-blue);
  --comment-node-color: var(--theme-comment);
}

/******************************************************************************/

.inline {
  display: inline;
  white-space: normal;
}

.objectBox-object {
  font-weight: bold;
  color: var(--object-color);
  white-space: pre-wrap;
}

.objectBox-string,
.objectBox-symbol,
.objectBox-text,
.objectBox-textNode,
.objectBox-table {
  white-space: pre-wrap;
}

.objectBox-number,
.objectBox-styleRule,
.objectBox-element,
.objectBox-textNode,
.objectBox-array > .length {
  color: var(--number-color);
}

.objectBox-textNode,
.objectBox-string,
.objectBox-symbol {
  color: var(--string-color);
}

.objectBox-empty-string {
  font-style: italic;
}

.objectBox-string a,
.objectBox-string a:visited {
  color: currentColor;
  text-decoration: none;
  font-style: italic;
  cursor: pointer;
}

.objectBox-string a:hover {
  text-decoration: underline;
}

.objectBox-function,
.objectBox-profile {
  color: var(--object-color);
}

.objectBox-stackTrace.reps-custom-format,
.objectBox-stackTrace.reps-custom-format > .objectBox-string {
  color: var(--error-color);
}

.objectBox-stackTrace-grid {
  display: inline-grid;
  grid-template-columns: auto auto;
  margin-top: 3px;
}

.objectBox-stackTrace-fn {
  color: var(--console-output-color);
  padding-inline-start: 17px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-inline-end: 5px;
}

.objectBox-stackTrace-location {
  color: var(--frame-link-source, currentColor);
  direction: rtl;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: end;
}

.objectBox-stackTrace-location:hover {
  text-decoration: underline;
}

.objectBox-stackTrace-location {
  cursor: pointer;
}

.objectBox-Location,
.location {
  color: var(--location-color);
}

.objectBox-null,
.objectBox-undefined,
.objectBox-hint,
.objectBox-nan,
.logRowHint {
  color: var(--null-color);
}

.objectBox-sourceLink {
  position: absolute;
  right: 4px;
  top: 2px;
  padding-left: 8px;
  font-weight: bold;
  color: var(--source-link-color);
}

.objectBox-failure {
  color: var(--string-color);
  border-width: 1px;
  border-style: solid;
  border-radius: 2px;
  font-size: 0.8em;
  padding: 0 2px;
}

.objectBox-accessible.clickable,
.objectBox-node.clickable {
  cursor: pointer;
}

/******************************************************************************/

.objectBox-event,
.objectBox-eventLog,
.objectBox-regexp,
.objectBox-object {
  color: var(--object-color);
  white-space: pre-wrap;
}

.objectBox .Date {
  color: var(--string-color);
  white-space: pre-wrap;
}

/******************************************************************************/

.objectBox.theme-comment {
  color: var(--comment-node-color);
}

.accessible-role,
.tag-name {
  color: var(--object-color);
}

.attrName {
  color: var(--string-color);
}

.attrEqual,
.objectEqual {
  color: var(--comment-node-color);
}

.attrValue,
.attrValue.objectBox-string {
  color: var(--node-color);
}

.angleBracket {
  color: var(--theme-body-color);
}

/******************************************************************************/
/* Length bubble for arraylikes and maplikes */

.objectLengthBubble {
  color: var(--null-color);
}

/******************************************************************************/

.objectLeftBrace,
.objectRightBrace,
.arrayLeftBracket,
.arrayRightBracket {
  color: var(--object-color);
}

/******************************************************************************/
/* Cycle reference */

.objectBox-Reference {
  font-weight: bold;
  color: var(--reference-color);
}

[class*="objectBox"] > .objectTitle {
  color: var(--object-color);
}

.caption {
  color: var(--caption-color);
}

/******************************************************************************/
/* Themes */

.theme-dark .objectBox-null,
.theme-dark .objectBox-undefined,
.theme-light .objectBox-null,
.theme-light .objectBox-undefined {
  font-style: normal;
}

.theme-dark .objectBox-object,
.theme-light .objectBox-object {
  font-weight: normal;
  white-space: pre-wrap;
}

.theme-dark .caption,
.theme-light .caption {
  font-weight: normal;
}

/******************************************************************************/
/* Open DOMNode in inspector or Accessible in accessibility inspector button */

button.open-accessibility-inspector,
button.open-inspector {
  mask: url("resource://devtools/client/shared/components/reps/images/open-inspector.svg")
    no-repeat;
  display: inline-block;
  vertical-align: top;
  height: 15px;
  width: 15px;
  margin: 0 4px;
  padding: 0;
  border: none;
  background-color: var(--theme-icon-color);
  cursor: pointer;
}

.objectBox-accessible:hover .open-accessibility-inspector,
.objectBox-node:hover .open-inspector,
.objectBox-textNode:hover .open-inspector,
.open-accessibility-inspector:hover,
.open-inspector:hover {
  background-color: var(--theme-icon-checked-color);
}

/******************************************************************************/
/* Jump to definition button */

button.jump-definition {
  display: inline-block;
  height: 16px;
  margin-left: 0.25em;
  vertical-align: middle;
  background: 0% 50%
    url("resource://devtools/client/shared/components/reps/images/jump-definition.svg")
    no-repeat;
  border-color: transparent;
  stroke: var(--theme-icon-color);
  -moz-context-properties: stroke;
  cursor: pointer;
}

.jump-definition:hover {
  stroke: var(--theme-icon-checked-color);
}

.tree-node.focused .jump-definition {
  stroke: currentColor;
}

/******************************************************************************/
/* Invoke getter button */

button.invoke-getter {
  mask: url(resource://devtools/client/shared/components/reps/images/input.svg)
    no-repeat;
  display: inline-block;
  background-color: var(--theme-icon-color);
  height: 10px;
  vertical-align: middle;
  border: none;
}

.invoke-getter:hover {
  background-color: var(--theme-icon-checked-color);
}

/******************************************************************************/
/* "moreâ€¦" ellipsis */
.more-ellipsis {
  color: var(--comment-node-color);
}

/* function parameters */
.objectBox-function .param {
  color: var(--theme-highlight-red);
}
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

.tree.object-inspector .node.object-node {
  display: inline-block;
}

.tree.object-inspector .object-label,
.tree.object-inspector .object-label * {
  color: var(--theme-highlight-blue);
}

.tree.object-inspector .node .unavailable {
  color: var(--theme-comment);
}

.tree.object-inspector .lessen,
.tree.object-inspector .lessen *,
.tree.object-inspector .lessen .object-label,
.tree.object-inspector .lessen .object-label * {
  color: var(--theme-comment);
}

.tree.object-inspector .block .object-label,
.tree.object-inspector .block .object-label * {
  color: var(--theme-body-color);
}

.tree.object-inspector .block .object-label::before {
  content: "\2632";
  font-size: 1.1em;
  display: inline;
  padding-inline-end: 2px;
  line-height: 14px;
}

.object-inspector .object-delimiter {
  color: var(--theme-comment);
  white-space: pre-wrap;
}

.object-inspector .tree-node .arrow {
  display: inline-block;
  vertical-align: middle;
  margin-inline-start: -1px;
}

/* Focused styles */
.tree.object-inspector .tree-node.focused * {
  color: inherit;
}

.tree-node.focused button.open-inspector,
.tree-node.focused button.invoke-getter {
  background-color: currentColor;
}

button.remove-set-watchpoint {
  mask: url("resource://devtools/client/debugger/images/webconsole-logpoint.svg")
    no-repeat;
  display: inline-block;
  vertical-align: top;
  height: 13px;
  width: 15px;
  margin: 0 4px 0px 20px;
  padding: 0;
  border: none;
  background-color: var(--breakpoint-fill);
  cursor: pointer;
}

button.remove-get-watchpoint {
  mask: url("resource://devtools/client/debugger/images/webconsole-logpoint.svg")
    no-repeat;
  display: inline-block;
  vertical-align: top;
  height: 13px;
  width: 15px;
  margin: 0 4px 0px 20px;
  padding: 0;
  border: none;
  background-color: var(--purple-60);
  cursor: pointer;
}

button.remove-getorset-watchpoint {
  mask: url("resource://devtools/client/debugger/images/webconsole-logpoint.svg")
    no-repeat;
  display: inline-block;
  vertical-align: top;
  height: 13px;
  width: 15px;
  margin: 0 4px 0px 20px;
  padding: 0;
  border: none;
  background-color: var(--yellow-60);
  cursor: pointer;
}

.theme-dark button.remove-set-watchpoint:hover,
.theme-light button.remove-set-watchpoint:hover {
  background-color: var(--breakpoint-fill);
}
.theme-dark button.remove-get-watchpoint:hover,
.theme-light button.remove-get-watchpoint:hover {
  background-color: var(--purple-60);
}

.theme-dark button.remove-getorset-watchpoint:hover,
.theme-light button.remove-getorset-watchpoint:hover {
  background-color: var(--yellow-60);
}
