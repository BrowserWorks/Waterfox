# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# LOCALIZATION NOTE:
# Strings here are used to create events and tasks with start and end times
# based on email content.
# None of the strings are displayed in the user interface.
#
# You don't have to fill all from.*, until.*, *.prefix and *.suffix patterns.
# It's ok to leave some empty.
# Please consider declensions and gender if your language has them.
# Don't just translate directly. The number of variants doesn't have to be
# the same as in en-US. All of 0, 1, 2, etc is allowed in patterns except alphabet
# pattern. You can and should add language specific variants.
#
# There are two different ways to find a start time text in email:
# 1) it matches a from.* pattern and does not have end.prefix or end.suffix next to it
# 2) it matches until.* pattern and has start.prefix or start.suffix next to it
# Similar inverse logic applies to end times.
# These rules enable using prefix and suffix values with only start.* or only until.*
# patterns localized for some languages and thus not having to repeat the same
# values in both.
#
# Patterns are partially space-insensitive.
# "deadline is" pattern will find both "deadlineis" and "deadline  is"
# but "deadlineis" won't find "deadline is" or "deadline  is".
# Therefore you should include all spaces that are valid within a pattern.

# LOCALIZATION NOTE (start.prefix):
# datetimes with these in front are extracted as start times
# can be a list of values, separate variants by |
start.prefix =

# LOCALIZATION NOTE (start.suffix):
# datetimes followed by these are extracted as start times
start.suffix = pada | sehingga | hingga | - | hgga | hgga | dan

# LOCALIZATION NOTE (end.prefix):
# datetimes with these in front are extracted as end times
end.prefix = pada | hingga | ke | - | hgga | hgga | dan | tamat: | tamat |berakhir | tamat tempoh pada | tamat tempoh:

# LOCALIZATION NOTE (end.suffix):
# datetimes followed by these are extracted as end times
# can be a list of values, separate variants by |
end.suffix =

# LOCALIZATION NOTE (no.datetime.prefix):
# datetimes with these in front won't be used
# specify full words here
no.datetime.prefix = minggu lepas | dihantar | e-mel | e-mel | bukannya | > | malangnya | dalam | tidak

# LOCALIZATION NOTE (no.datetime.suffix):
# datetimes followed by these won't be used
no.datetime.suffix = tingkat | tkt | : | e-mel | e-mel | > | % | rm | ringgit | RM

# LOCALIZATION NOTE (from.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (from.today):
# must not be empty!
from.today = hari ini

from.tomorrow = esok
# LOCALIZATION NOTE (until.*):
# can be a list of values, separate variants by |
until.tomorrow =

# LOCALIZATION NOTE (from.ordinal.date):
# #1 = matches numbers 1-31 and number.x
# should not have "#1" as this would match any single number in email to a time
from.ordinal.date = #1 | #1 | #1 | #1

# LOCALIZATION NOTE (until.ordinal.date):
# #1 = matches numbers 1-31 and number.x
until.ordinal.date =

from.noon = tengahari
until.noon =

# LOCALIZATION NOTE (from.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should not have "#1" as this would match any single number in email to a time
from.hour = pada #1 | sekitar #1 | #1 - | #1 hingga

# LOCALIZATION NOTE (until.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour = - #1 | hingga #1 | sehingga #1 | pada #1

# LOCALIZATION NOTE (from.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.am = #1 am | #1 a.m

# LOCALIZATION NOTE (until.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.am =

# LOCALIZATION NOTE (from.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.pm = #1 pm | #1 p.m | #1 p

# LOCALIZATION NOTE (until.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.pm =

# LOCALIZATION NOTE (from.half.hour.before):
# denotes times 30 minutes before next full hour
from.half.hour.before = setengah jam sebelum #1

# LOCALIZATION NOTE (until.half.hour.before):
# denotes times 30 minutes before next full hour
until.half.hour.before =

# LOCALIZATION NOTE (from.half.hour.after):
# denotes times 30 minutes after last full hour
from.half.hour.after = setengah jam selepas #1

# LOCALIZATION NOTE (until.half.hour.after):
# denotes times 30 minutes after last full hour
until.half.hour.after =

# LOCALIZATION NOTE (from.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes = #1:#2 | pada #1#2

# LOCALIZATION NOTE (until.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes =

# LOCALIZATION NOTE (from.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.am = #1:#2 am | #1:#2 a.m

# LOCALIZATION NOTE (until.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.am =

# LOCALIZATION NOTE (from.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.pm = #1:#2 pm | #1:#2 p.m | #1:#2 p

# LOCALIZATION NOTE (until.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.pm =

# LOCALIZATION NOTE (from.monthname.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches monthname
from.monthname.day = #1 #2 | #1 #2

# LOCALIZATION NOTE (until.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
until.monthname.day =

# LOCALIZATION NOTE (from.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
from.month.day = #1/#2

# LOCALIZATION NOTE (until.month.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches numbers 1-12
until.month.day =

# LOCALIZATION NOTE (from.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
from.year.month.day = #1#2#3 | #1/#2/#3 | #3-#2-#1

# LOCALIZATION NOTE (until.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
until.year.month.day =

# LOCALIZATION NOTE (from.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
from.year.monthname.day = #1 #2 #3

# LOCALIZATION NOTE (until.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
until.year.monthname.day =

# LOCALIZATION NOTE (duration.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (duration.minutes):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.minutes = #1 minit | #1 min | #1 min

# LOCALIZATION NOTE (duration.hours):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.hours = #1 jam | #1 jam

# LOCALIZATION NOTE (duration.days):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.days = #1 hari

# LOCALIZATION NOTE (month.*):
# can be a list of values, separate variants by |
month.1 = januari | jan | jan.
month.2 = februari | feb | feb.
month.3 = mac | mac | mac.
month.4 = april | apr | apr.
month.5 = mei
month.6 = jun | jun | jun.
month.7 = julai | jul | jul.
month.8 = ogos | ogo | ogo.
month.9 = september | sep | sep. | sept.
month.10 = oktober | okt | okt.
month.11 = november | nov | nov.
month.12 = disember | dis | dis.

# LOCALIZATION NOTE (from.weekday.*):
# used to derive start date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (from.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
from.weekday.0 = ahad | ahad
from.weekday.1 = isnin | isnin
from.weekday.2 = selasa | selasa
from.weekday.3 = rabu | rabu
from.weekday.4 = khamis | khamis
from.weekday.5 = jumaat | jumaat
from.weekday.6 = sabtu | sabtu

# LOCALIZATION NOTE (until.weekday.*):
# used to derive end date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (until.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
until.weekday.0 =
until.weekday.1 =
until.weekday.2 =
until.weekday.3 =
until.weekday.4 =
until.weekday.5 =
until.weekday.6 =

# LOCALIZATION NOTE (number.*):
# used within other patterns to understand dates where day of month isn't written with digits
# can be a list of values, separate variants by |
number.0 = kosong
number.1 = satu | pertama
number.2 = dua | kedua
number.3 = tiga | ketiga
number.4 = empat | keempat
number.5 = lima | kelima
number.6 = enam | keenam
number.7 = tujuh | ketujuh
number.8 = lapan | kelapan
number.9 = sembilan | kesembilan
number.10 = sepuluh | kesepuluh
number.11 = sebelas | kesebelas
number.12 = dua belas | kedua belas
number.13 = tiga belas | ketiga belas
number.14 = empat belas | keempat belas
number.15 = lima belas | kelima belas
number.16 = enam belas | keenam belas
number.17 = tujuh belas | ketujuh belas
number.18 = lapan belas | kelapan belas
number.19 = sembilan belas | kesembilan belas
number.20 = dua puluh | kedua puluh
number.21 = dua puluh satu | kedua puluh satu
number.22 = dua puluh dua | kedua puluh dua
number.23 = dua puluh tiga | kedua puluh tiga
number.24 = dua puluh empat| kedua puluh empat
number.25 = dua puluh lima | kedua puluh lima
number.26 = dua puluh enam | kedua puluh enam
number.27 = dua puluh tujuh | kedua puluh tujuh
number.28 = dua puluh lapan| kedua puluh lapan
number.29 = dua puluh sembilan | kedua puluh sembilan
number.30 = tiga puluh | ketiga puluh
number.31 = tiga puluh satu | ketiga puluh satu

# LOCALIZATION NOTE (alphabet):
# list all lower and uppercase letters if your language has an alphabet
# otherwise leave it empty
alphabet = abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
