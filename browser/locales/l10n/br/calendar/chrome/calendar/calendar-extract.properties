# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# LOCALIZATION NOTE:
# Strings here are used to create events and tasks with start and end times
# based on email content.
# None of the strings are displayed in the user interface.
#
# You don't have to fill all from.*, until.*, *.prefix and *.suffix patterns.
# It's ok to leave some empty.
# Please consider declensions and gender if your language has them.
# Don't just translate directly. The number of variants doesn't have to be
# the same as in en-US. All of 0, 1, 2, etc is allowed in patterns except alphabet
# pattern. You can and should add language specific variants.
#
# There are two different ways to find a start time text in email:
# 1) it matches a from.* pattern and does not have end.prefix or end.suffix next to it
# 2) it matches until.* pattern and has start.prefix or start.suffix next to it
# Similar inverse logic applies to end times.
# These rules enable using prefix and suffix values with only start.* or only until.*
# patterns localized for some languages and thus not having to repeat the same
# values in both.
#
# Patterns are partially space-insensitive.
# "deadline is" pattern will find both "deadlineis" and "deadline  is"
# but "deadlineis" won't find "deadline is" or "deadline  is".
# Therefore you should include all spaces that are valid within a pattern.

# LOCALIZATION NOTE (start.prefix):
# datetimes with these in front are extracted as start times
# can be a list of values, separate variants by |
start.prefix =

# LOCALIZATION NOTE (start.suffix):
# datetimes followed by these are extracted as start times
start.suffix = eus an | betek an | da | - | betek | betek | hag an | ha

# LOCALIZATION NOTE (end.prefix):
# datetimes with these in front are extracted as end times
end.prefix = eus an | betek an | da | - | betek an | betek | hag an | ha | evit an | evit | deiziad-fin:

# LOCALIZATION NOTE (end.suffix):
# datetimes followed by these are extracted as end times
# can be a list of values, separate variants by |
end.suffix =

# LOCALIZATION NOTE (no.datetime.prefix):
# datetimes with these in front won't be used
# specify full words here
no.datetime.prefix = sizhun baseet | kaset | postel an | postel an | e-plas | > | siwazh | en | ket an

# LOCALIZATION NOTE (no.datetime.suffix):
# datetimes followed by these won't be used
no.datetime.suffix = estaj | stj | : | postel | postel | > | % | euroioù | dollarioù | $

# LOCALIZATION NOTE (from.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (from.today):
# must not be empty!
from.today = hiziv

from.tomorrow = warc'hoazh
# LOCALIZATION NOTE (until.*):
# can be a list of values, separate variants by |
until.tomorrow =

# LOCALIZATION NOTE (from.ordinal.date):
# #1 = matches numbers 1-31 and number.x
# should not have "#1" as this would match any single number in email to a time
from.ordinal.date = #1añ | #1eil | #1de | #1re

# LOCALIZATION NOTE (until.ordinal.date):
# #1 = matches numbers 1-31 and number.x
until.ordinal.date =

from.noon = kreisteiz
until.noon =

# LOCALIZATION NOTE (from.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should not have "#1" as this would match any single number in email to a time
from.hour = da #1 | tro-dro #1 | #1 - | da #1

# LOCALIZATION NOTE (until.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour = - #1 | da #1 | da #1 | betek #1

# LOCALIZATION NOTE (from.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.am = #1 am | #1 a.m | #1 mintin | #1 beure

# LOCALIZATION NOTE (until.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.am =

# LOCALIZATION NOTE (from.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.pm = #1 gm | #1 g.m | #1 noz

# LOCALIZATION NOTE (until.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.pm =

# LOCALIZATION NOTE (from.half.hour.before):
# denotes times 30 minutes before next full hour
from.half.hour.before = un hanter-eur a-raok #1

# LOCALIZATION NOTE (until.half.hour.before):
# denotes times 30 minutes before next full hour
until.half.hour.before =

# LOCALIZATION NOTE (from.half.hour.after):
# denotes times 30 minutes after last full hour
from.half.hour.after = #1 hanter

# LOCALIZATION NOTE (until.half.hour.after):
# denotes times 30 minutes after last full hour
until.half.hour.after =

# LOCALIZATION NOTE (from.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes = #1:#2 | #1e#2

# LOCALIZATION NOTE (until.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes =

# LOCALIZATION NOTE (from.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.am = #1:#2 am | #1:#2 a.m | #1:#2 mintin | #1:#2 beure

# LOCALIZATION NOTE (until.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.am =

# LOCALIZATION NOTE (from.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.pm = #1:#2 gm | #1:#2 g.m | #1:#2 noz

# LOCALIZATION NOTE (until.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.pm =

# LOCALIZATION NOTE (from.monthname.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches monthname
from.monthname.day = #1 #2 | #2 #1 | #2 #1añ | #2 #1eil | #2 #1de | #2 #1de | #1añ eus #2 | #1eil diwar #2 | #1de diwar #2 | #1añ eus #2

# LOCALIZATION NOTE (until.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
until.monthname.day =

# LOCALIZATION NOTE (from.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
from.month.day = #2/#1

# LOCALIZATION NOTE (until.month.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches numbers 1-12
until.month.day =

# LOCALIZATION NOTE (from.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
from.year.month.day = #2/#1/#3 | #3/#2/#1 | #3-#2-#1

# LOCALIZATION NOTE (until.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
until.year.month.day =

# LOCALIZATION NOTE (from.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
from.year.monthname.day = #1 #2 #3 | #1añ #2 #3 | #1eil #2 #3 | #1de #2 #3 | #1de #2 #3 | #2 #1, #3 | #3-#2-#1

# LOCALIZATION NOTE (until.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
until.year.monthname.day =

# LOCALIZATION NOTE (duration.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (duration.minutes):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.minutes = #1 munutenn | #1 vunutenn | #1 a vunutennoù

# LOCALIZATION NOTE (duration.hours):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.hours = #1 eur | #1e

# LOCALIZATION NOTE (duration.days):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.days = #1 devezh

# LOCALIZATION NOTE (month.*):
# can be a list of values, separate variants by |
month.1 = genver | gen | gen.
month.2 = c'hwevrer | c'hw | c'hw.
month.3 = meurzh | meu | meu.
month.4 = ebrel | ebr | ebr.
month.5 = mae
month.6 = even | eve | eve.
month.7 = gouere | gou | gou.
month.8 = eost | eos | eos.
month.9 = gwengolo | gwe | gwe.
month.10 = here | her
month.11 = du
month.12 = kerzu | ker | ker.

# LOCALIZATION NOTE (from.weekday.*):
# used to derive start date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (from.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
from.weekday.0 = sul
from.weekday.1 = sul
from.weekday.2 = meurzh
from.weekday.3 = merc'her
from.weekday.4 = yaou
from.weekday.5 = gwener
from.weekday.6 = sadorn

# LOCALIZATION NOTE (until.weekday.*):
# used to derive end date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (until.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
until.weekday.0 =
until.weekday.1 =
until.weekday.2 =
until.weekday.3 =
until.weekday.4 =
until.weekday.5 =
until.weekday.6 =

# LOCALIZATION NOTE (number.*):
# used within other patterns to understand dates where day of month isn't written with digits
# can be a list of values, separate variants by |
number.0 = zero
number.1 = unan | kentañ
number.2 = daou | eil
number.3 = tri | trede
number.4 = pevar
number.5 = pemp
number.6 = c'hwec'h
number.7 = seizh
number.8 = eizh
number.9 = nav
number.10 = dek
number.11 = unnek
number.12 = daouzek
number.13 = trizek
number.14 = pevarzek
number.15 = pemzek
number.16 = c'hwezek
number.17 = seitek
number.18 = triwec'h
number.19 = naontek
number.20 = ugent
number.21 = unan warn ugent | unan warn-ugent
number.22 = daou warn ugent | daou warn-ugent
number.23 = tri warn ugent | tri warn-ugent
number.24 = pevar warn ugent | pevar warn-ugent
number.25 = pemp wan ugent | pemp warn-ugent
number.26 = c'hwec'h warn ugent | c'hwec'h warn-ugent
number.27 = seizh war ugent | seizh warn-ugent
number.28 = eizh war ugent | eizh warn-ugent
number.29 = nav warn ugent | nav warn-ugent
number.30 = tregont
number.31 = unan ha tregont

# LOCALIZATION NOTE (alphabet):
# list all lower and uppercase letters if your language has an alphabet
# otherwise leave it empty
alphabet = acdefghijklmnoprstuvwyzABCDEFGHIJKLMNOPRSTUVWYZ
