# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# LOCALIZATION NOTE:
# Strings here are used to create events and tasks with start and end times
# based on email content.
# None of the strings are displayed in the user interface.
#
# You don't have to fill all from.*, until.*, *.prefix and *.suffix patterns.
# It's ok to leave some empty.
# Please consider declensions and gender if your language has them.
# Don't just translate directly. The number of variants doesn't have to be
# the same as in en-US. All of 0, 1, 2, etc is allowed in patterns except alphabet
# pattern. You can and should add language specific variants.
#
# There are two different ways to find a start time text in email:
# 1) it matches a from.* pattern and does not have end.prefix or end.suffix next to it
# 2) it matches until.* pattern and has start.prefix or start.suffix next to it
# Similar inverse logic applies to end times.
# These rules enable using prefix and suffix values with only start.* or only until.*
# patterns localized for some languages and thus not having to repeat the same
# values in both.
#
# Patterns are partially space-insensitive.
# "deadline is" pattern will find both "deadlineis" and "deadline  is"
# but "deadlineis" won't find "deadline is" or "deadline  is".
# Therefore you should include all spaces that are valid within a pattern.

# LOCALIZATION NOTE (start.prefix):
# datetimes with these in front are extracted as start times
# can be a list of values, separate variants by |
start.prefix =

# LOCALIZATION NOTE (start.suffix):
# datetimes followed by these are extracted as start times
start.suffix = ruma| k'a ri| to | - | k'a | k'a | chuqa'

# LOCALIZATION NOTE (end.prefix):
# datetimes with these in front are extracted as end times
end.prefix = ruma | k'a ri | a | - | k'a ri | k'a | chuqa'| ruma ri | ruma ri | tik'is| k'isb'äl q'ij ri| k'isb'äl q'ij:

# LOCALIZATION NOTE (end.suffix):
# datetimes followed by these are extracted as end times
# can be a list of values, separate variants by |
end.suffix =

# LOCALIZATION NOTE (no.datetime.prefix):
# datetimes with these in front won't be used
# specify full words here
no.datetime.prefix = ri wuqq'ij kan | titaq | email | e-mail | pa rulugar ri | > | ruma ri' | pa | ni

# LOCALIZATION NOTE (no.datetime.suffix):
# datetimes followed by these won't be used
no.datetime.suffix = floor | flr | : | email | e-mail | > | % | usd | dollars | $ 

# LOCALIZATION NOTE (from.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (from.today):
# must not be empty!
from.today = wakami

from.tomorrow = chwa'q
# LOCALIZATION NOTE (until.*):
# can be a list of values, separate variants by |
until.tomorrow =

# LOCALIZATION NOTE (from.ordinal.date):
# #1 = matches numbers 1-31 and number.x
# should not have "#1" as this would match any single number in email to a time
from.ordinal.date = #1st | #1nd | #1rd | #1th

# LOCALIZATION NOTE (until.ordinal.date):
# #1 = matches numbers 1-31 and number.x
until.ordinal.date =

from.noon = nik'aj q'ij
until.noon =

# LOCALIZATION NOTE (from.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should not have "#1" as this would match any single number in email to a time
from.hour = pa ri #1 | chukojol ri #1 | #1 - | #1 a

# LOCALIZATION NOTE (until.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour = - #1 | al #1 | k'a pa ri #1 | ruma #1

# LOCALIZATION NOTE (from.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.am = #1 am | #1 a.m

# LOCALIZATION NOTE (until.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.am =

# LOCALIZATION NOTE (from.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.pm = #1 pm | #1 p.m | #1 p

# LOCALIZATION NOTE (until.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.pm =

# LOCALIZATION NOTE (from.half.hour.before):
# denotes times 30 minutes before next full hour
from.half.hour.before = nik'aj ramaj antes richin #1

# LOCALIZATION NOTE (until.half.hour.before):
# denotes times 30 minutes before next full hour
until.half.hour.before =

# LOCALIZATION NOTE (from.half.hour.after):
# denotes times 30 minutes after last full hour
from.half.hour.after = q'axnäq b'a' #1

# LOCALIZATION NOTE (until.half.hour.after):
# denotes times 30 minutes after last full hour
until.half.hour.after =

# LOCALIZATION NOTE (from.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes = #1:#2 | pa ri #1#2

# LOCALIZATION NOTE (until.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes =

# LOCALIZATION NOTE (from.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.am = #1:#2 am | #1:#2 a.m

# LOCALIZATION NOTE (until.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.am =

# LOCALIZATION NOTE (from.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.pm = #1:#2 pm | #1:#2 p.m | #1:#2 p

# LOCALIZATION NOTE (until.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.pm =

# LOCALIZATION NOTE (from.monthname.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches monthname
from.monthname.day = #1 #2 | #2 #1 | #2 #1st | #2 #1nd | #2 #1rd | #2 #1th | #1st of #2 | #1nd of #2 | #1rd of #2 | #1th of #2

# LOCALIZATION NOTE (until.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
until.monthname.day =

# LOCALIZATION NOTE (from.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
from.month.day = #2/#1

# LOCALIZATION NOTE (until.month.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches numbers 1-12
until.month.day =

# LOCALIZATION NOTE (from.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
from.year.month.day = #2/#1/#3 | #3/#2/#1 | #3-#2-#1

# LOCALIZATION NOTE (until.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
until.year.month.day =

# LOCALIZATION NOTE (from.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
from.year.monthname.day = #1 #2 #3 | #1st #2 #3 | #1nd #2 #3 | #1rd #2 #3 | #1th #2 #3 | #2 #1, #3 | #3-#2-#1

# LOCALIZATION NOTE (until.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
until.year.monthname.day =

# LOCALIZATION NOTE (duration.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (duration.minutes):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.minutes = #1 taq ch'uti ramaj | #1 ch'uti ramaj| #1 taq ch'uti ramaj

# LOCALIZATION NOTE (duration.hours):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.hours = #1 ramaj | #1taq ramaj

# LOCALIZATION NOTE (duration.days):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.days = #1 taq q'ij

# LOCALIZATION NOTE (month.*):
# can be a list of values, separate variants by |
month.1 = nab'ey ik'| nab'ey | nab'ey.
month.2 = ruka' ik' | ruka'n| ruka'n.
month.3 = rox ik'| rox | rox.
month.4 = rukaj ik' | rukaj | rukaj.
month.5 = ro' ik'
month.6 = ruwaq ik' | ruwaq | ruwaq.
month.7 = ruwuq ik'| ruwuq| ruwuq.
month.8 = ruwaqxaq ik' | ruwaqxaq| ruwaqxaq.
month.9 = rub'elej ik'| rub'elej |rub'elej. | rub'elej.
month.10 = rulaj ik' | rulaj | rulaj.
month.11 = rujulaj ik' | rujulaj | rujulaj.
month.12 = rukab'laj ik' | ukab'laj | ukab'laj.

# LOCALIZATION NOTE (from.weekday.*):
# used to derive start date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (from.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
from.weekday.0 = toq'ij |taq toq'ij
from.weekday.1 = luq'ij | luq'ij
from.weekday.2 = maq'ij| taq maq'ij
from.weekday.3 = miq'ij | taq miq'ij
from.weekday.4 = juq'ij | taq juq'ij
from.weekday.5 = wiq'ij | taq wiq'ij
from.weekday.6 = saq'ij | taq saq'ij

# LOCALIZATION NOTE (until.weekday.*):
# used to derive end date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (until.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
until.weekday.0 =
until.weekday.1 =
until.weekday.2 =
until.weekday.3 =
until.weekday.4 =
until.weekday.5 =
until.weekday.6 =

# LOCALIZATION NOTE (number.*):
# used within other patterns to understand dates where day of month isn't written with digits
# can be a list of values, separate variants by |
number.0 = wa'ix
number.1 = jun| nab'ey
number.2 = ka'i' |ruka'n
number.3 = oxi' | rox
number.4 = kaji' | rukaj
number.5 = wo'o' | ro'
number.6 = waqi'| ruwaq
number.7 = wuqu' | ruwuq
number.8 = waqxaqi' | ruwaqxaq
number.9 = b'eleje' | rub'elej
number.10 = lajuj | rulaj
number.11 = julajuj | rujulaj
number.12 = kab'lajuj | rukab'laj
number.13 = oxlajuj | roxlaj
number.14 = kajlajuj | rukajlaj
number.15 = wolajuj | ruwolaj
number.16 = waqlajuj| ruwaqlaj
number.17 = wuqlajuj | ruwuqlaj
number.18 = waqxaqlajuj | ruwaqxaqlaj
number.19 = b'elejlajuj | rub'elejlaj
number.20 = juk'al | rujuk'al
number.21 = juk'al jun | rujuk'al nab'ey
number.22 = juk'al ka'i' | rujuk'al ruka'n
number.28 = juk'al waqxaqi' | rujuk'al ruwaqxaq
number.29 = juk'al b'eleje' | rujuk'al rub'elej
number.30 = juk'al lajuj | rujuk'al rulaj
number.31 = juk'al julajuj | rujuk'al rujulaj

# LOCALIZATION NOTE (alphabet):
# list all lower and uppercase letters if your language has an alphabet
# otherwise leave it empty
alphabet = abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
