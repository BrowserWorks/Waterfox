# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# LOCALIZATION NOTE:
# Strings here are used to create events and tasks with start and end times
# based on email content.
# None of the strings are displayed in the user interface.
#
# You don't have to fill all from.*, until.*, *.prefix and *.suffix patterns.
# It's ok to leave some empty.
# Please consider declensions and gender if your language has them.
# Don't just translate directly. The number of variants doesn't have to be
# the same as in en-US. All of 0, 1, 2, etc is allowed in patterns except alphabet
# pattern. You can and should add language specific variants.
#
# There are two different ways to find a start time text in email:
# 1) it matches a from.* pattern and does not have end.prefix or end.suffix next to it
# 2) it matches until.* pattern and has start.prefix or start.suffix next to it
# Similar inverse logic applies to end times.
# These rules enable using prefix and suffix values with only start.* or only until.*
# patterns localized for some languages and thus not having to repeat the same
# values in both.
#
# Patterns are partially space-insensitive.
# "deadline is" pattern will find both "deadlineis" and "deadline  is"
# but "deadlineis" won't find "deadline is" or "deadline  is".
# Therefore you should include all spaces that are valid within a pattern.

# LOCALIZATION NOTE (start.prefix):
# datetimes with these in front are extracted as start times
# can be a list of values, separate variants by |
start.prefix =

# LOCALIZATION NOTE (start.suffix):
# datetimes followed by these are extracted as start times
start.suffix = por | até | para | - | até | até | e

# LOCALIZATION NOTE (end.prefix):
# datetimes with these in front are extracted as end times
end.prefix = por | até | para | - | até | até | e | termina: | termina | termina | o prazo é | prazo:

# LOCALIZATION NOTE (end.suffix):
# datetimes followed by these are extracted as end times
# can be a list of values, separate variants by |
end.suffix =

# LOCALIZATION NOTE (no.datetime.prefix):
# datetimes with these in front won't be used
# specify full words here
no.datetime.prefix = semana passada | enviado | email | e-mail | em vez de | > | infelizmente | em | não

# LOCALIZATION NOTE (no.datetime.suffix):
# datetimes followed by these won't be used
no.datetime.suffix = floor | flr | : | email | e-mail | > | % | usd | dolars | $ | eur | euros | €

# LOCALIZATION NOTE (from.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (from.today):
# must not be empty!
from.today = hoje

from.tomorrow = amanhã
# LOCALIZATION NOTE (until.*):
# can be a list of values, separate variants by |
until.tomorrow =

# LOCALIZATION NOTE (from.ordinal.date):
# #1 = matches numbers 1-31 and number.x
# should not have "#1" as this would match any single number in email to a time
from.ordinal.date = #1.º | #1.º | #1.º | #1.º

# LOCALIZATION NOTE (until.ordinal.date):
# #1 = matches numbers 1-31 and number.x
until.ordinal.date =

from.noon = meio dia
until.noon =

# LOCALIZATION NOTE (from.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should not have "#1" as this would match any single number in email to a time
from.hour = às #1 | por volta das #1 | #1 - | #1 até

# LOCALIZATION NOTE (until.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour = - #1 | até #1 | até #1 | por #1

# LOCALIZATION NOTE (from.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.am = #1 am | #1 a.m

# LOCALIZATION NOTE (until.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.am =

# LOCALIZATION NOTE (from.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.pm = #1 pm | #1 p.m | #1 p

# LOCALIZATION NOTE (until.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.pm =

# LOCALIZATION NOTE (from.half.hour.before):
# denotes times 30 minutes before next full hour
from.half.hour.before = meia hora antes das #1

# LOCALIZATION NOTE (until.half.hour.before):
# denotes times 30 minutes before next full hour
until.half.hour.before =

# LOCALIZATION NOTE (from.half.hour.after):
# denotes times 30 minutes after last full hour
from.half.hour.after = #1 e meia

# LOCALIZATION NOTE (until.half.hour.after):
# denotes times 30 minutes after last full hour
until.half.hour.after =

# LOCALIZATION NOTE (from.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes = #1:#2 | às #1#2

# LOCALIZATION NOTE (until.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes =

# LOCALIZATION NOTE (from.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.am = #1:#2 am | #1:#2 a.m

# LOCALIZATION NOTE (until.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.am =

# LOCALIZATION NOTE (from.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.pm = #1:#2 pm | #1:#2 p.m | #1:#2 p

# LOCALIZATION NOTE (until.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.pm =

# LOCALIZATION NOTE (from.monthname.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches monthname
from.monthname.day = #1 #2 | #2 #1 | #2 #1.º | #2 #1.º | #2 #1.º | #2 #1.º | #1.º de #2 | #1.º de #2 | #1.º de #2 | #1.º de #2

# LOCALIZATION NOTE (until.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
until.monthname.day =

# LOCALIZATION NOTE (from.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
from.month.day = #1/#2

# LOCALIZATION NOTE (until.month.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches numbers 1-12
until.month.day =

# LOCALIZATION NOTE (from.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
from.year.month.day = #1-#2-#3 | #3/#2/#1 | #3-#2-#1

# LOCALIZATION NOTE (until.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
until.year.month.day =

# LOCALIZATION NOTE (from.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
from.year.monthname.day = #1 #2 #3 | #1.º #2 #3 | #1.º #2 #3 | #1.º #2 #3 | #1.º #2 #3 | #3, #2 #1 | #3-#2-#1

# LOCALIZATION NOTE (until.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
until.year.monthname.day =

# LOCALIZATION NOTE (duration.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (duration.minutes):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.minutes = #1 minutos | #1 min | #1 mins

# LOCALIZATION NOTE (duration.hours):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.hours = #1 hora| #1 horas

# LOCALIZATION NOTE (duration.days):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.days = #1 dias

# LOCALIZATION NOTE (month.*):
# can be a list of values, separate variants by |
month.1 = janeiro | jan | jan.
month.2 = fevereiro | fev | fev.
month.3 = março | mar | mar.
month.4 = abril | abr | abr.
month.5 = maio | mai | mai.
month.6 = junho | jun | jun.
month.7 = julho | jul | jul.
month.8 = agosto | ago | ago.
month.9 = setembro | set | set.
month.10 = outubro | out | out.
month.11 = novembro | nov | nov.
month.12 = dezembro | dez | dez.

# LOCALIZATION NOTE (from.weekday.*):
# used to derive start date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (from.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
from.weekday.0 = domingo | domingos
from.weekday.1 = segunda | segundas
from.weekday.2 = terça | terças
from.weekday.3 = quarta | quartas
from.weekday.4 = quinta | quintas
from.weekday.5 = sexta | sextas
from.weekday.6 = sábado | sábados

# LOCALIZATION NOTE (until.weekday.*):
# used to derive end date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (until.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
until.weekday.0 =
until.weekday.1 =
until.weekday.2 =
until.weekday.3 =
until.weekday.4 =
until.weekday.5 =
until.weekday.6 =

# LOCALIZATION NOTE (number.*):
# used within other patterns to understand dates where day of month isn't written with digits
# can be a list of values, separate variants by |
number.0 = zero
number.1 = um | primeiro
number.2 = dois | segundo
number.3 = três | terceiro
number.4 = quatro | quarto
number.5 = cinco | quinto
number.6 = seis | sexto
number.7 = sete | sétimo
number.8 = oito | oitavo
number.9 = nove | nono
number.10 = dez | décimo
number.11 = onze | décimo primeiro
number.12 = doze | décimo segundo
number.13 = treze | décimo terceiro
number.14 = quatorze | décimo quarto
number.15 = quinze| décimo quinto
number.16 = dezasseis| décimo sexto
number.17 = dezasete | décimo sétimo
number.18 = dezoito| décimo oitavo
number.19 = dezanove | décimo nono
number.20 = vinte | vigésimo
number.21 = vinte e um | vigésimo primeiro
number.22 = vinte e dois | vigésimo segundo
number.23 = vinte e três | vigésimo terceiro
number.24 = vinte e quatro| vigésimo quarto
number.25 = vinte e cinco | vigésimo quinto
number.26 = vinte e seis | vigésimo sexto
number.27 = vinte e sete | vigésimo sétimo
number.28 = vinte e oito | vigésimo oitavo
number.29 = vinte e nove| vigésimo nono
number.30 = trinta | trigésimo
number.31 = trinta e um | trigésimo primeiro

# LOCALIZATION NOTE (alphabet):
# list all lower and uppercase letters if your language has an alphabet
# otherwise leave it empty
alphabet = abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
