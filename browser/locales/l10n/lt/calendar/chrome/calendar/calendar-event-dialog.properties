# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# LOCALIZATION NOTE (dailyEveryNth):
# Edit recurrence window -> Recurrence pattern -> Daily repeat rules
# #1 - number
# e.g. "every 4 days"
dailyEveryNth=kas #1 dieną;kas #1 dienų;kas #1 dienas
repeatDetailsRuleDaily4=kiekvieną darbo dieną

# LOCALIZATION NOTE (weeklyNthOnNounclass...)
# Edit recurrence window -> Recurrence pattern -> Weekly repeat rules
# Translate these strings according to noun class/gender of weekday (%1$S)
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - weekday (one or more)
# #2 - week interval
# e.g. "every 3 weeks on Tuesday, Wednesday and Thursday
weeklyNthOnNounclass1=kas #2 savaitę, %1$S;kas #2 savaičių, %1$S;kas #2 savaites, %1$S
weeklyNthOnNounclass2=kas #2 savaitę, %1$S;kas #2 savaičių, %1$S;kas #2 savaites, %1$S

# LOCALIZATION NOTE (weeklyEveryNth):
# Edit recurrence window -> Recurrence pattern -> Weekly repeat rules
# #1 - interval
# e.g. "every 5 weeks"
weeklyEveryNth=kas #1 savaitę;kas #1 savaičių;kas #1 savaites

# LOCALIZATION NOTE ('repeatDetailsDay...' and 'repeatDetailsDay...Nounclass'):
# Week days names and week days noun classes (feminine/masculine grammatical
# gender) for languages that need different localization when weekdays nouns
# have different noun classes (genders).
# For every weekday, in 'repeatDetailsDay...Nounclass' strings write:
#   "nounclass1"     for languages with grammatical genders -> MASCULINE gender;
#                    for languages with noun classes -> a noun class;
#                    for languages without noun classes or grammatical gender.
#
#   "nounclass2"     for languages with grammatical genders -> FEMININE gender;
#                    for languages with noun classes -> a different noun class.
#
#   "nounclass3", "nounclass4" and so on for languages that need more than two
#                    noun classes for weekdays. In this case add corresponding
#                    rule string with "Nounclass..." suffix and ordinal string
#                    "repeatOrdinalxNounclass..."
# Will be used rule strings with "Nounclass..." suffix corresponding to the
# following strings if there is a weekday in the rule string.
repeatDetailsDay1=sekmadienį
repeatDetailsDay1Nounclass=nounclass1
repeatDetailsDay2=pirmadienį
repeatDetailsDay2Nounclass=nounclass1
repeatDetailsDay3=antradienį
repeatDetailsDay3Nounclass=nounclass1
repeatDetailsDay4=trečiadienį
repeatDetailsDay4Nounclass=nounclass1
repeatDetailsDay5=ketvirtadienį
repeatDetailsDay5Nounclass=nounclass1
repeatDetailsDay6=penktadienį
repeatDetailsDay6Nounclass=nounclass1
repeatDetailsDay7=šeštadienį
repeatDetailsDay7Nounclass=nounclass1

# LOCALIZATION NOTE (repeatDetailsAnd)
# Used to show a number of weekdays in a list
# i.e. "Sunday, Monday, Tuesday " + and + " Wednesday"
repeatDetailsAnd=ir

# LOCALIZATION NOTE (monthlyRuleNthOfEveryNounclass...):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# Translate these strings according to noun class/gender of weekday (%2$S)
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - list of weekdays with ordinal, article and noun class/gender
#        (ordinal and weekday of every element in the list follow the order
#         and the rule of ordinalWeekdayOrder string)
# #2 - interval
# e.g. "the first Monday and the last Friday of every 3 months"
monthlyRuleNthOfEveryNounclass1=kas #2 mėnesio %1$S;kas #2 mėnesio %1$S;kas #2 mėnesio %1$S
monthlyRuleNthOfEveryNounclass2=kas #2 mėnesio %1$S;kas #2 mėnesio %1$S;kas #2 mėnesio %1$S

# LOCALIZATION NOTE (ordinalWeekdayOrder):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# This string allows to change the order of the elements "ordinal" and
# "weekday" (or to insert a word between them) for the argument %1$S of the
# string monthlyRuleNthOfEveryNounclass...
# Without changing this string, the order is that one required from most
# languages: ordinal + weekday (e.g. "'the first' 'Monday' of every 2 months").
# %1$S - ordinal with article
# %2$S - weekday noun
# e.g. "'the first' 'Monday'"
# DONT_TRANSLATE: Make sure there are no extra words in this property, just variables.
ordinalWeekdayOrder=%1$S %2$S

# LOCALIZATION NOTE (monthlyEveryOfEveryNounclass...):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# Translate these strings according to noun class/gender of weekday (%1$S)
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - list of single weekdays and/or weekdays with ordinal, article and
#        noun class/gender when rule contains also specific day in the month
# #2 - interval
# e.g. "every Monday, Tuesday and the second Sunday of every month"
monthlyEveryOfEveryNounclass1=kas #2 mėnesio kiekvieną %1$S;kas #2 mėnesio kiekvieną %1$S;kas #2 mėnesio kiekvieną %1$S
monthlyEveryOfEveryNounclass2=kas #2 mėnesio kiekvieną %1$S;kas #2 mėnesio kiekvieną %1$S;kas #2 mėnesio kiekvieną %1$S

# LOCALIZATION NOTE (monthlyDaysOfNth_day):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# %1$S - day of month or a sequence of days of month, possibly followed by an ordinal symbol
#        (depending on the string dayOrdinalSymbol in dateFormat.properties) separated with commas;
# e.g. "days 3, 6 and 9" or "days 3rd, 6th and 9th"
monthlyDaysOfNth_day=%1$S dieną;%1$S dienomis

# LOCALIZATION NOTE (monthlyDaysOfNth):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# %1$S - it's the string monthlyDaysOfNth_day: day of month or a sequence of days
#        of month, possibly followed by an ordinal symbol, separated with commas;
# #2   - monthly interval
# e.g. "days 3, 6, 9 and 12 of every 3 months"
monthlyDaysOfNth=kas #2 mėnesio %1$S;kas #2 mėnesio %1$S;kas #2 mėnesio %1$S

# LOCALIZATION NOTE (monthlyLastDayOfNth):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# %1$S - day of month
# #2 - month interval
# e.g. "the last day of every 3 months"
monthlyLastDayOfNth=paskutinę mėnesio dieną kas #2 mėnesį;paskutinę mėnesio dieną kas #2 mėnesių;paskutinę mėnesio dieną kas #2 mėnesius

# LOCALIZATION NOTE (monthlyEveryDayOfNth):
# Edit recurrence window -> Recurrence pattern -> Monthly repeat rules
# #2 - month interval
# e.g. "every day of the month every 4 months"
monthlyEveryDayOfNth=kiekvieną mėnesio dieną kas #2 mėnesį;kiekvieną mėnesio dieną kas #2 mėnesių;kiekvieną mėnesio dieną kas #2 mėnesius

# LOCALIZATION NOTE (repeatOrdinal...Nounclass...):
# Ordinal numbers nouns for every noun class (grammatical genders) of weekdays
# considered in 'repeatDetailsDayxNounclass' strings. For languages that need
# localization according to genders or noun classes.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add 'repeatOrdinal...Nounclass' strings with suffix 3, 4 and so on for
# languages with more than two noun classes for weekdays. In this case
# must be added corresponding rule strings with 'Nounclass...' suffix and
# corresponding values "nounclass..." must be written in
# 'repeatDetailsDayxNounclass' strings.
repeatOrdinal1Nounclass1=pirmąjį
repeatOrdinal2Nounclass1=antrąjį
repeatOrdinal3Nounclass1=trečiąjį
repeatOrdinal4Nounclass1=ketvirtąjį
repeatOrdinal5Nounclass1=penktąjį
repeatOrdinal-1Nounclass1=paskutinį
repeatOrdinal1Nounclass2=pirmąją
repeatOrdinal2Nounclass2=antrąją
repeatOrdinal3Nounclass2=trečiąją
repeatOrdinal4Nounclass2=ketvirtąją
repeatOrdinal5Nounclass2=penktąją
repeatOrdinal-1Nounclass2=paskutinę

# LOCALIZATION NOTE (yearlyNthOn):
# Edit recurrence window -> Recurrence pattern -> Yearly repeat rules
# %1$S - month name
# %2$S - day of month possibly followed by an ordinal symbol (depending on the string
#           dayOrdinalSymbol in dateFormat.properties)
# #3   - yearly interval
# e.g. "every 3 years on December 14"
#      "every 2 years on December 8th"
yearlyNthOn=kas #3 metus, %1$S %2$S d.;kas #3 metų, %1$S %2$S d.;kas #3 metus, %1$S %2$S d.

# LOCALIZATION NOTE (yearlyNthOnNthOfNounclass...):
# Edit recurrence window -> Recurrence pattern -> Yearly repeat rules
# Translate these strings according to noun class/gender of weekday (%2$S)
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - ordinal with article and noun class/gender corresponding to weekday
# %2$S - weekday
# %3$S - month
# #4 - yearly interval
# e.g. "the second Monday of every March"
# e.g  "every 3 years the second Monday of March"
yearlyNthOnNthOfNounclass1=kas #4 metus, %1$S %3$S %2$S;kas #4 metų, %1$S %3$S %2$S;kas #4 metus, %1$S %3$S %2$S
yearlyNthOnNthOfNounclass2=kas #4 metus, %1$S %3$S %2$S;kas #4 metų, %1$S %3$S %2$S;kas #4 metus, %1$S %3$S %2$S

# LOCALIZATION NOTE (yearlyOnEveryNthOfNthNounclass...):
# Edit recurrence window -> Recurrence pattern -> Yearly repeat rules
# Translate these strings according to noun class/gender of weekday (%1$S)
# set in 'repeadDetailsDay...Nounclass' strings.
# Nounclass1 <-> Masculine gender; Nounclass2 <-> Feminine gender.
# Add others strings with suffix 3, 4,... for others noun classes if your
# language need them. In this case, corresponding strings must be added for
# others rule strings with 'Nounclass...' suffix and corresponding values
# "nounclass..." must be written in 'repeatDetailsDayxNounclass' strings.
# %1$S - weekday
# %2$S - month
# #3 - yearly interval
# e.g. "every Thursday of March"
# e.g  "every 3 years on every Thursday of March"
yearlyOnEveryNthOfNthNounclass1=kas #3 metus, kiekvieną %2$S %1$S;kas #3 metų, kiekvieną %2$S %1$S;kas #3 metus, kiekvieną %2$S %1$S
yearlyOnEveryNthOfNthNounclass2=kas #3 metus, kiekvieną %2$S %1$S;kas #3 metų, kiekvieną %2$S %1$S;kas #3 metus, kiekvieną %2$S %1$S

#LOCALIZATION NOTE (yearlyEveryDayOf):
# Edit recurrence window -> Recurrence pattern -> Yearly repeat rules
# This string describes part of a yearly rule which includes every day of a month.
# %1$S - month
# #2   - yearly interval
# e.g. "every day of December"
# e.g. "every 3 years every day of December"
yearlyEveryDayOf=kas #2 metus kiekvieną %1$S dieną;kas #2 metų kiekvieną %1$S dieną;kas #2 metus kiekvieną %1$S dieną

repeatDetailsMonth1=sausio
repeatDetailsMonth2=vasario
repeatDetailsMonth3=kovo
repeatDetailsMonth4=balandžio
repeatDetailsMonth5=gegužės
repeatDetailsMonth6=birželio
repeatDetailsMonth7=liepos
repeatDetailsMonth8=rugpjūčio
repeatDetailsMonth9=rugsėjo
repeatDetailsMonth10=spalio
repeatDetailsMonth11=lapkričio
repeatDetailsMonth12=gruodžio

# LOCALIZATION NOTE (repeatCount):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# %3$S - event start time (e.g. hh:mm (PM/AM))
# %4$S - event end time (e.g. hh:mm (PM/AM))
# #5 - event occurrence times: number
# e.g. with monthlyRuleNthOfEvery:
# "Occurs the first Sunday of every 3 month
#  only on 1/1/2009"
#  from 5:00 PM to 6:00 PM"
# "Occurs the first Sunday of every 3 month
#  effective 1/1/2009 for 5 times
#  from 5:00 PM to 6:00 PM"
repeatCount=Įvyksta %1$S,\ngalioja nuo %2$S, #5 kartą,\ntrunka nuo %3$S iki %4$S val.;Įvyksta %1$S,\ngalioja nuo %2$S, #5 kartų,\ntrunka nuo %3$S iki %4$S val.;Įvyksta %1$S,\ngalioja nuo %2$S, #5 kartus,\ntrunka nuo %3$S iki %4$S val.

# LOCALIZATION NOTE (repeatCountAllDay):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# #3 - event occurrence times: number
# e.g. with monthlyRuleNthOfEvery:
# "Occurs the first Sunday of every 3 month
#  only on 1/1/2009"
# "Occurs the first Sunday of every 3 month
#  effective 1/1/2009 for 5 times"
repeatCountAllDay=Įvyksta %1$S,\ngalioja nuo %2$S, #3 kartą.;Įvyksta %1$S,\ngalioja nuo %2$S, #3 kartų.;Įvyksta %1$S,\ngalioja nuo %2$S, #3 kartus.

# LOCALIZATION NOTE (repeatDetailsUntil):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# %3$S - event end date (e.g. mm/gg/yyyy)
# %4$S - event start time (e.g. hh:mm (PM/AM))
# %5$S - event end time (e.g. hh:mm (PM/AM))
# e.g. with weeklyNthOn:
# "Occurs every 2 weeks on Sunday and Friday
#  effective 1/1/2009 until 1/1/2010
#  from 5:00 PM to 6:00 PM"
repeatDetailsUntil=Įvyksta %1$S\n, galioja nuo %2$S iki %3$S,\ntrunka nuo %4$S iki %5$S val.

# LOCALIZATION NOTE (repeatDetailsUntilAllDay):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# %3$S - event end date (e.g. mm/gg/yyyy)
# e.g. with monthlyDaysOfNth and all day event:
# "Occurs day 3 of every 5 month
#  effective 1/1/2009 until 1/1/2010"
repeatDetailsUntilAllDay=Įvyksta  %1$S,\ngalioja nuo %2$S iki %3$S.

# LOCALIZATION NOTE (repeatDetailsInfinite):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# %3$S - event start time (e.g. hh:mm (PM/AM))
# %4$S - event end time (e.g. hh:mm (PM/AM))
# e.g. with monthlyDaysOfNth:
# "Occurs day 3 of every 5 month
#  effective 1/1/2009
#  from 5:00 PM to 6:00 PM"
repeatDetailsInfinite=Įvyksta %1$S,\ngalioja nuo %2$S,\ntrunka nuo %3$S iki %4$S val.

# LOCALIZATION NOTE (repeatDetailsInfiniteAllDay):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# %1%$ - A rule string (see above). This is the first line of the link
# %2%$ - event start date (e.g. mm/gg/yyyy)
# e.g. with monthlyDaysOfNth and all day event:
# "Occurs day 3 of every 5 month
#  effective 1/1/2009"
repeatDetailsInfiniteAllDay=Įvyksta %1$S,\ngalioja nuo %2$S.

# LOCALIZATION NOTE (monthlyLastDay):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# A monthly rule with one or more days of the month (monthlyDaysOfNth) and the
# string "the last day" of the month.
# e.g.: "Occurs day 15, 20, 25 and the last day of every 3 months"
monthlyLastDay=paskutinę dieną

# LOCALIZATION NOTE (ruleTooComplex):
# This string is shown in the repeat details area if our code can't handle the
# complexity of the recurrence rule yet.
ruleTooComplex=Išsamiau…

# LOCALIZATION NOTE (ruleTooComplexSummary):
# This string is shown in the event summary dialog if our code can't handle the
# complexity of the recurrence rule yet.
ruleTooComplexSummary=Kartojimosi ciklas nežinomas

# differences between the dialog for an Event or a Task
newEvent=Naujas įvykis
newTask=Naujas darbas
itemMenuLabelEvent=Įvykis
itemMenuAccesskeyEvent2=F
itemMenuLabelTask=Darbas
itemMenuAccesskeyTask2=F

emailSubjectReply=Re: %1$S

# Link Location Dialog
specifyLinkLocation=Nurodykite saito adresą
enterLinkLocation=Nurodykite tinklalapio ar dokumento adresą.

summaryDueTaskLabel=Terminas:

# Attach File Dialog
attachViaFilelink=failą per „%1$S“
selectAFile=Parinkite failą(-us), kurį(-iuos) norite prisegti
removeCalendarsTitle=Pašalinti priedus

# LOCALIZATION NOTE (removeAttachmentsText): Semi-colon list of plural forms for
# prompting attachment removal.
# See http://developer.mozilla.org/en/Localization_and_Plurals
removeAttachmentsText=Ar pašalinti #1 priedą?;Ar pašalinti #1 priedų?;Ar pašalinti #1 priedus?

# Recurrence Dialog Widget Order
# LOCALIZATION NOTE: You can change the order of below params
# Edit recurrence window -> Recurrence pattern -> Repeat monthly
# %1$S - ordinal with article, %2$S - weekday
# e.g. "the First Saturday"
# DONT_TRANSLATE: Make sure there are no extra words in this property, just variables.
monthlyOrder=%1$S %2$S

# Edit recurrence window -> Recurrence pattern -> Repeat yearly
# %1$S - day of month, %2$S - of, %3$S - month
# e.g. "6 [of] September"
# If you don't need %2$S in your locale - please put this on the third place.
# DONT_TRANSLATE: Make sure there are no extra words in this property, just variables.
yearlyOrder=%1$S %3$S %2$S

# Edit recurrence window -> Recurrence pattern -> Repeat yearly
# %1$S - ordinal with article, %2$S - weekday, %3$S  - of, %4$S - month
# e.g. "the First Saturday of September"
# If you don't need %3$S in your locale - please put this on the third place.
# DONT_TRANSLATE: Make sure there are no extra words in this property, just variables.
yearlyOrder2=%1$S %2$S %3$S %4$S

# LOCALIZATION NOTE (pluralForWeekdays):
# This string allows to set the use of weekdays nouns in plural form for
# languages that need them in sentences like "every Monday" or "every Sunday
# of March" etc.
# Rule strings involved by this setting are:
# - weeklyNthOn   (only the first part) e.g. "every Sunday"
# - monthlyEveryOfEvery
#     e.g. "every Monday of every month;every Monday every 2 months"
# - yearlyOnEveryNthOfNth
#     e.g. "every Friday of March;every 2 years on every Friday of March"
# In your local write:
#  "true"    if sentences like those above need weekday in plural form;
#  "false"   if sentences like those above don't need weekday in plural form;
pluralForWeekdays=false

# LOCALIZATION NOTE (repeatDetailsDayxxxPlural):
# Edit recurrence window -> Recurrence details link on Event/Task dialog window
# Weekdays in plural form used inside sentences like "every Monday" or
# "every Sunday of May" etc. for languages that need them.
# These plurals will be used inside the following rule strings only if string
# 'pluralForWeekdays' (see above) is set to "true":
# - weeklyNthOn   (only the first part) e.g. "every Sunday"
# - monthlyEveryOfEvery
#     e.g. "every Monday of every month;every Monday every 2 months"
# - yearlyOnEveryNthOfNth
#     e.g. "every Friday of March;every 2 years on every Friday of March"
repeatDetailsDay1Plural=sekmadienį
repeatDetailsDay2Plural=pirmadienį
repeatDetailsDay3Plural=antradienį
repeatDetailsDay4Plural=trečiadienį
repeatDetailsDay5Plural=ketvirtadienį
repeatDetailsDay6Plural=penktadienį
repeatDetailsDay7Plural=šeštadienį

# LOCALIZATION NOTE (eventRecurrenceForeverLabel):
# Edit/New Event dialog -> datepicker that sets the until date.
# For recurring rules that repeat forever, this labels appears in the
# datepicker, below the minimonth, as an option for the until date.
eventRecurrenceForeverLabel=Neterminuotai

# LOCALIZATION NOTE (eventRecurrenceMonthlyLastDayLabel):
# Edit dialog recurrence -> Monthly Recurrence pattern -> Monthly daypicker
# The label on the monthly daypicker's last button that allows to select
# the last day of the month inside a BYMONTHDAY rule.
eventRecurrenceMonthlyLastDayLabel=Paskutinė diena

# LOCALIZATION NOTE (counterSummaryAccepted) - this is only visible when opening the dialog from the
# email summary view after receiving a counter message
# %1$S - the name or email address of the replying attendee
counterSummaryAccepted=%1$S priėmė kvietimą, bet pateikė alternatyvų pasiūlymą:

# LOCALIZATION NOTE (counterSummaryDeclined) - this is only visible when opening the dialog from the
# email summary view after receiving a counter message
# %1$S - the name or email address of the replying attendee
counterSummaryDeclined=%1$S atmetė kvietimą, bet pateikė alternatyvų pasiūlymą:

# LOCALIZATION NOTE (counterSummaryDelegated) - this is only visible when opening the dialog from the
# email summary view after receiving a counter message
# %1$S - the name or email address of the replying attendee
counterSummaryDelegated=%1$S delegavo kvietimą kitam asmeniui, bet pateikė alternatyvų pasiūlymą:

# LOCALIZATION NOTE (counterSummaryNeedsAction) - this is only visible when opening the dialog from the
# email summary view after receiving a counter message
# %1$S - the name or email address of the replying attendee
counterSummaryNeedsAction=%1$S dar nenusprendė, ar dalyvaus, ir pateikė alternatyvų pasiūlymą:

# LOCALIZATION NOTE (counterSummaryTentative) - this is only visible when opening the dialog from the
# email summary view after receiving a counter message
# %1$S - the name or email address of the replying attendee
counterSummaryTentative=%1$S preliminariai priėmė kvietimą ir pateikė alternatyvų pasiūlymą:

# LOCALIZATION NOTE (counterOnPreviousVersionNotification) - this is only visible when opening the
# dialog from the email summary view after receiving a counter message
counterOnPreviousVersionNotification=Tai yra alternatyvus pasiūlymas ankstesnei šio įvykio versijai.

# LOCALIZATION NOTE (counterOnCounterDisallowedNotification) - this is only visible when opening the
# dialog from the email summary view after receiving a counter message
counterOnCounterDisallowedNotification=Siųsdami kvietimą, jūs neleidote teikti alternatyvių pasiūlymų.

# LOCALIZATION NOTE (eventAccepted) - this will be displayed as notification
# in the summary dialog if the user has accepted the event invitation
eventAccepted=Jūs priėmėte šį kvietimą

# LOCALIZATION NOTE (eventTentative) - this will be displayed as notification
# in the summary dialog if the user has accepted the event invitation tentatively
eventTentative=Preliminariai priėmėte šį kvietimą

# LOCALIZATION NOTE (eventDeclined) - this will be displayed as notification
# in the summary dialog if the user has declined the event invitation
eventDeclined=Jūs atmetėte šį kvietimą

# LOCALIZATION NOTE (eventDelegated) - this will be displayed as notification
# in the summary dialog if the user has delegated his/her participation to one
# or more other participants (without attending / working on it his/herself)
eventDelegated=Jūs perleidote šį kvietimą

# LOCALIZATION NOTE (eventNeedsAction) - this will be displayed as notification
# in the summary dialog if the user hasn't yet responded to an invitation
eventNeedsAction=Dar neatsakėte į šį kvietimą

# LOCALIZATION NOTE (taskAccepted) - this will be displayed as notification
# in the summary dialog if the user has accepted the assigned task
taskAccepted=Jūs sutikote dirbti su šia užduotimi

# LOCALIZATION NOTE (taskTentative) - this will be displayed as notification
# in the summary dialog if the user has accepted tentatively the assigned task
taskTentative=Preliminariai sutikote dirbti su šia užduotimi

# LOCALIZATION NOTE (taskDeclined) - this will be displayed as notification
# in the summary dialog if the user has declined the assigned task
taskDeclined=Jūs atsisakėte dirbti su šia užduotimi

# LOCALIZATION NOTE (taskDelegated) - this will be displayed as notification
# in the summary dialog if the user has delegated his/her assignment to one or
# more others (without attending / working on it his/herself)
taskDelegated=Jūs pavedėte atlikti šią užduotį

# LOCALIZATION NOTE (taskNeedsAction) - this will be displayed as notification
# in the summary dialog if the user hasn't yet responded to the task assignment
taskNeedsAction=Jūs dar neatsakėte į šią užduoties užklausą

# LOCALIZATION NOTE (taskInProgress) - this will be displayed as notification
# in the summary dialog if the user is working on an assigned task
taskInProgress=Jūs pradėjote dirbti su šia paskirta užduotimi

# LOCALIZATION NOTE (taskCompleted) - this will be displayed as notification
# in the summary dialog if the user has completed the work on this assigned task
taskCompleted=Atlikote šią paskirtą užduotį

# LOCALIZATION NOTE (sendandcloseButtonLabel) - this is a runtime replacement for
# event.toolbar.saveandclose.label in the event dialog/tab toolbar if attendees
# will be notified on saving & closing
sendandcloseButtonLabel=Siųsti ir uždaryti

# LOCALIZATION NOTE (sendandcloseButtonTooltip) - this is a runtime replacement for
# event.toolbar.saveandclose.tooltip in the event dialog/tab toolbar if attendees
# will be notified on saving & closing
sendandcloseButtonTooltip=Pranešti dalyviams ir uždaryti

# LOCALIZATION NOTE (saveandsendButtonLabel) - this is a runtime replacement for
# event.toolbar.save.label2 in the event dialog/tab toolbar if attendees
# will be notified on saving
saveandsendButtonLabel=Išsaugoti ir siųsti

# LOCALIZATION NOTE (saveandsendButtonTooltip) - this is a runtime replacement
# for event.toolbar.save.tooltip2 in the event dialog/tab toolbar if attendees
# will be notified on saving
saveandsendButtonTooltip=Išsaugoti ir pranešti dalyviams

# LOCALIZATION NOTE (saveandsendMenuLabel) - this is a runtime replacement for
# event.menu.item.save.label in the event dialog/tab toolbar if attendees
# will be notified on saving
saveandsendMenuLabel=Išsaugoti ir siųsti

# LOCALIZATION NOTE (sendandcloseMenuLabel) - this is a runtime replacement for
# event.menu.item.saveandclose.label in the event dialog/tab toolbar if attendees
# will be notified on saving
sendandcloseMenuLabel=Siųsti ir uždaryti

# LOCALIZATION NOTE (attendeesTabLabel) - this is a runtime replacement for
# event.attendees.label defined in calendar-event-dialog.dtd and used in the
# event dialog/tab as attendee tab label if an event has at least one attendee
# %1$S - the number of attendee (1-n)
attendeesTabLabel=Dalyviai (%1$S):

# LOCALIZATION NOTE (attachmentsTabLabel) - this is a runtime replacement for
# event.attachments.label defined in calendar-event-dialog.dtd and used in the
# event dialog/tab as attendee tab label if an event has at least one attachment
# %1$S - the number of attachments (1-n)
attachmentsTabLabel=Priedai (%1$S):
