# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# LOCALIZATION NOTE:
# Strings here are used to create events and tasks with start and end times
# based on email content.
# None of the strings are displayed in the user interface.
#
# You don't have to fill all from.*, until.*, *.prefix and *.suffix patterns.
# It's ok to leave some empty.
# Please consider declensions and gender if your language has them.
# Don't just translate directly. The number of variants doesn't have to be
# the same as in en-US. All of 0, 1, 2, etc is allowed in patterns except alphabet
# pattern. You can and should add language specific variants.
#
# There are two different ways to find a start time text in email:
# 1) it matches a from.* pattern and does not have end.prefix or end.suffix next to it
# 2) it matches until.* pattern and has start.prefix or start.suffix next to it
# Similar inverse logic applies to end times.
# These rules enable using prefix and suffix values with only start.* or only until.*
# patterns localized for some languages and thus not having to repeat the same
# values in both.
#
# Patterns are partially space-insensitive.
# "deadline is" pattern will find both "deadlineis" and "deadline  is"
# but "deadlineis" won't find "deadline is" or "deadline  is".
# Therefore you should include all spaces that are valid within a pattern.

# LOCALIZATION NOTE (start.prefix):
# datetimes with these in front are extracted as start times
# can be a list of values, separate variants by |
start.prefix =

# LOCALIZATION NOTE (start.suffix):
# datetimes followed by these are extracted as start times
start.suffix = di | arma | ar | - | akked

# LOCALIZATION NOTE (end.prefix):
# datetimes with these in front are extracted as end times
end.prefix = di | arama | ar | - | arama | arama | akked| tagara: | tagara| ad ifak| tagara di | tagara:

# LOCALIZATION NOTE (end.suffix):
# datetimes followed by these are extracted as end times
# can be a list of values, separate variants by |
end.suffix =

# LOCALIZATION NOTE (no.datetime.prefix):
# datetimes with these in front won't be used
# specify full words here
no.datetime.prefix = dduṛt yezrin | yettwazen | azen| imayl | deg umḍiq n | > | acukan | di | ala

# LOCALIZATION NOTE (no.datetime.suffix):
# datetimes followed by these won't be used
no.datetime.suffix = floor | flr | : | azen| imayl | > | % | usd | dollars | $

# LOCALIZATION NOTE (from.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (from.today):
# must not be empty!
from.today = ass-a

from.tomorrow = azekka
# LOCALIZATION NOTE (until.*):
# can be a list of values, separate variants by |
until.tomorrow =

# LOCALIZATION NOTE (from.ordinal.date):
# #1 = matches numbers 1-31 and number.x
# should not have "#1" as this would match any single number in email to a time
from.ordinal.date = #1st | #1nd | #1rd | #1th

# LOCALIZATION NOTE (until.ordinal.date):
# #1 = matches numbers 1-31 and number.x
until.ordinal.date =

from.noon = deg uzal
until.noon =

# LOCALIZATION NOTE (from.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should not have "#1" as this would match any single number in email to a time
from.hour = di #1 | ahat #1 | #1 - | #1 ar

# LOCALIZATION NOTE (until.hour):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour = - #1 | ar #1 | arama #1 | di #1

# LOCALIZATION NOTE (from.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.am = #1 am | #1 a.m

# LOCALIZATION NOTE (until.hour.am):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.am =

# LOCALIZATION NOTE (from.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
from.hour.pm = #1 pm | #1 p.m | #1 p

# LOCALIZATION NOTE (until.hour.pm):
# #1 = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.pm =

# LOCALIZATION NOTE (from.half.hour.before):
# denotes times 30 minutes before next full hour
from.half.hour.before = azgen n usrag send #1

# LOCALIZATION NOTE (until.half.hour.before):
# denotes times 30 minutes before next full hour
until.half.hour.before =

# LOCALIZATION NOTE (from.half.hour.after):
# denotes times 30 minutes after last full hour
from.half.hour.after = #1 d uzgen

# LOCALIZATION NOTE (until.half.hour.after):
# denotes times 30 minutes after last full hour
until.half.hour.after =

# LOCALIZATION NOTE (from.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes = #1:#2 | ar #1#2

# LOCALIZATION NOTE (until.hour.minutes):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes =

# LOCALIZATION NOTE (from.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.am = #1:#2 am | #1:#2 a.m

# LOCALIZATION NOTE (until.hour.minutes.am):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.am =

# LOCALIZATION NOTE (from.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
from.hour.minutes.pm = #1:#2 pm | #1:#2 p.m | #1:#2 p

# LOCALIZATION NOTE (until.hour.minutes.pm):
# #1 = matches numbers 0-23
# #2 = matches numbers 0-59
until.hour.minutes.pm =

# LOCALIZATION NOTE (from.monthname.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches monthname
from.monthname.day = #1 #2 | #2 #1 | #2 #1st | #2 #1nd | #2 #1rd | #2 #1th | #1st n #2 | #1nd n #2 | #1rd n #2 | #1th n #2

# LOCALIZATION NOTE (until.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
until.monthname.day =

# LOCALIZATION NOTE (from.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
from.month.day = #2/#1

# LOCALIZATION NOTE (until.month.day):
# #1 = matches numbers 1-31 and number.x
# #2 = matches numbers 1-12
until.month.day =

# LOCALIZATION NOTE (from.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
from.year.month.day = #2/#1/#3 | #3/#2/#1 | #3-#2-#1

# LOCALIZATION NOTE (until.year.month.day):
# #1 = matches numbers 1-31
# #2 = matches numbers 1-12
# #3 = matches 2/4 numbers
until.year.month.day =

# LOCALIZATION NOTE (from.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
from.year.monthname.day = #1 #2 #3 | #1st #2 #3 | #1nd #2 #3 | #1rd #2 #3 | #1th #2 #3 | #2 #1, #3 | #3-#2-#1

# LOCALIZATION NOTE (until.year.monthname.day):
# #1 = matches numbers 1-31
# #2 = matches monthname
# #3 = matches 2/4 numbers
until.year.monthname.day =

# LOCALIZATION NOTE (duration.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (duration.minutes):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.minutes = #1 n tesdatin | #1 tasd | #1 tisd

# LOCALIZATION NOTE (duration.hours):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.hours = #1 asrag | #1 isragen

# LOCALIZATION NOTE (duration.days):
# #1 = matches 1/2 numbers and number.0 - and number.31
duration.days = #1 ussan

# LOCALIZATION NOTE (month.*):
# can be a list of values, separate variants by |
month.1 = yannayer | yen | yen.
month.2 = fuṛaṛ | fuṛ | fuṛ.
month.3 = meɣres | meɣ | meɣ.
month.4 = yebrir | yeb | yeb.
month.5 = maggu | mag | mag.
month.6 = yunyu | yun | yun.
month.7 = ylyu | yul | yul.
month.8 = ɣuct | ɣuc | ɣuc.
month.9 = ctamber | cta | cta.
month.10 = tuber | tub | tub.
month.11 = wambeṛ| num | num.
month.12 = dujember | duj | duj.

# LOCALIZATION NOTE (from.weekday.*):
# used to derive start date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (from.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
from.weekday.0 = acer | ussan n acer
from.weekday.1 = arim | ussan n arim
from.weekday.2 = aram | ussan n aram
from.weekday.3 = ahad | ussan n ahad
from.weekday.4 = amhad | ussan n amhad
from.weekday.5 = sem |  ussan n sem
from.weekday.6 = sed |  ussan n sed

# LOCALIZATION NOTE (until.weekday.*):
# used to derive end date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (until.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
until.weekday.0 =
until.weekday.1 =
until.weekday.2 =
until.weekday.3 =
until.weekday.4 =
until.weekday.5 =
until.weekday.6 =

# LOCALIZATION NOTE (number.*):
# used within other patterns to understand dates where day of month isn't written with digits
# can be a list of values, separate variants by |
number.0 = warun
number.1 = yiwen | amezwaru
number.2 = sin | wis sin
number.3 = kraḍ | wis kraḍ
number.4 = kuẓ | wis kuẓ
number.5 = semmus | wsi semmus
number.6 = seddis | wis seddis
number.7 = sa | wis sa
number.8 = ṭam | wis ṭam
number.9 = tẓa | wis tẓa
number.10 = mraw | wis mraw
number.11 = mraw yiwen | wis mraw yiwen
number.12 = mraw sin | wis mraw sin
number.13 = mraw kraḍ | wis mraw yiwkraḍ
number.14 = mraw kuẓ | wis mraw kuẓ
number.15 = mraw semmus | wis mraw semmus
number.16 = mraw seddis | wis mraw seddis
number.17 = mraw sa | wis mraw sa
number.18 = mraw ṭam | wis mraw ṭam
number.19 = mraw tẓa | wis mraw tẓa
number.20 = snat tmerwin | wis snat tmerwin
number.21 = snat tmerwin yiwen | wis snat tmerwin yiwen
number.22 = snat tmerwin sin | wis snat tmerwin sin
number.23 = snat tmerwin kraḍ | wis snat tmerwin kraḍ
number.24 = snat tmerwin sin kuẓ | wis snat tmerwin kuẓ
number.25 = snat tmerwin semmus | wis snat tmerwin semmus
number.26 = snat tmerwin sḍis | wis snat tmerwin sdis
number.27 = snat tmerwin sa | wis snat tmerwin sa
number.28 = snat tmerwin ṭam | wis snat tmerwin ṭam
number.29 = snat tmerwin tẓa | wis snat tmerwin tẓa
number.30 = kraḍ mraw | wis kraḍ mraw
number.31 = kraḍ tmerwin yiwen | wis snat tmerwin yiwen

# LOCALIZATION NOTE (alphabet):
# list all lower and uppercase letters if your language has an alphabet
# otherwise leave it empty
alphabet = abcčdḍefgǧhḥijklmnopqrṛsṣtṭuvwxyzẓɣɛABCČDḌEFGǦHḤIJKLMNOPQRṚSṢTṬUVWXYZẒƔƐ
