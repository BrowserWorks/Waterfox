# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# LOCALIZATION NOTE:
# Strings here are used to create events and tasks with start and end times
# based on email content.
# None of the strings are displayed in the user interface.
#
# You don't have to fill all from.*, until.*, *.prefix and *.suffix patterns.
# It's ok to leave some empty.
# Please consider declensions and gender if your language has them.
# Don't just translate directly. The number of variants doesn't have to be
# the same as in en-US. All of 0, 1, 2, etc is allowed in patterns except alphabet.
# patterns. You can and should add language specific variants.
#
# There are two different ways to find a start time text in email:
# 1) it matches a from.* pattern and does not have end.prefix or end.suffix next to it
# 2) it matches until.* pattern and has start.prefix or start.suffix next to it
# Similar inverse logic applies to end times.
# These rules enable using prefix and suffix values with only start.* or only until.*
# patterns localized for some languages and thus not having to repeat the same
# values in both.
#
# Patterns are partially space-insensitive.
# "deadline is" pattern will find both "deadlineis" and "deadline  is"
# but "deadlineis" won't find "deadline is" or "deadline  is".
# Therefore you should include all spaces that are valid within a pattern.

# LOCALIZATION NOTE (start.prefix):
# datetimes with these in front are extracted as start times
# can be a list of values, separate variants by |
start.prefix =

# LOCALIZATION NOTE (start.suffix):
# datetimes followed by these are extracted as start times
start.suffix = by | until | to | - | till | til | and

# LOCALIZATION NOTE (end.prefix):
# datetimes followed by these are extracted as end times
end.prefix = by | until | to | - | till | til | and | due: | due | ends | deadline is | deadline:

# LOCALIZATION NOTE (end.suffix):
# datetimes followed by these are extracted as end times
# can be a list of values, separate variants by |
end.suffix =

# LOCALIZATION NOTE (no.datetime.prefix):
# datetimes with these in front won't be used
# specify full words here
no.datetime.prefix = last week | sent | email | e-mail | instead of | > | unfortunately | in | not

# LOCALIZATION NOTE (no.datetime.suffix):
# datetimes follwed by these won't be used
no.datetime.suffix = floor | flr | : | email | e-mail | > | % | gbp | pounds

# LOCALIZATION NOTE (from.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (from.today):
# must not be empty!
from.today = today

from.tomorrow = tomorrow
# LOCALIZATION NOTE (until.*):
# can be a list of values, separate variants by |
until.tomorrow =

# LOCALIZATION NOTE (ordinal.date):
# %1$S = matches numbers 1-31 and number.x
# should not have "%1$S" as this would match any single number in email to a time
from.ordinal.date = %1$Sst | %1$Snd | %1$Srd | %1$Sth

# LOCALIZATION NOTE (until.ordinal.date):
# %1$S = matches numbers 1-31 and number.x
until.ordinal.date =

from.noon = noon
until.noon =

# LOCALIZATION NOTE (hour.only):
# %1$S = matches numbers 0-23 and number.0-number.23
# should not have "%1$S" as this would match any single number in email to a time
from.hour = at %1$S | around %1$S | %1$S - | %1$S to

# LOCALIZATION NOTE (until.hour):
# %1$S = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour = - %1$S | to %1$S | until %1$S | by %1$S

# LOCALIZATION NOTE (hour.only.am):
# %1$S = matches numbers 0-23 and number.0-number.23
from.hour.am = %1$S am | %1$S a.m

# LOCALIZATION NOTE (until.hour.am):
# %1$S = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.am =

# LOCALIZATION NOTE (hour.only.pm):
# %1$S = matches numbers 0-23 and number.0-number.23
from.hour.pm = %1$S pm | %1$S p.m | %1$S p

# LOCALIZATION NOTE (until.hour.pm):
# %1$S = matches numbers 0-23 and number.0-number.23
# should also list how to find end of a timeframe
until.hour.pm =

# LOCALIZATION NOTE (from.half.hour.before):
# denotes times 30 minutes before next full hour
from.half.hour.before = half an hour before %1$S

# LOCALIZATION NOTE (until.half.hour.before):
# denotes times 30 minutes before next full hour
until.half.hour.before =

# LOCALIZATION NOTE (from.half.hour.after):
# denotes times 30 minutes after last full hour
from.half.hour.after = half past %1$S

# LOCALIZATION NOTE (until.half.hour.after):
# denotes times 30 minutes after last full hour
until.half.hour.after =

# LOCALIZATION NOTE (hour.minutes):
# %1$S = matches numbers 0-23
# %2$S = matches numbers 0-59
from.hour.minutes = %1$S:%2$S | at %1$S%2$S

# LOCALIZATION NOTE (until.hour.minutes):
# %1$S = matches numbers 0-23
# %2$S = matches numbers 0-59
until.hour.minutes =

# LOCALIZATION NOTE (hour.minutes.am):
# %1$S = matches numbers 0-23
# %2$S = matches numbers 0-59
from.hour.minutes.am = %1$S:%2$S am | %1$S:%2$S a.m

# LOCALIZATION NOTE (until.hour.minutes.am):
# %1$S = matches numbers 0-23
# %2$S = matches numbers 0-59
until.hour.minutes.am =

# LOCALIZATION NOTE (hour.minutes.pm):
# %1$S = matches numbers 0-23
# %2$S = matches numbers 0-59
from.hour.minutes.pm = %1$S:%2$S pm | %1$S:%2$S p.m | %1$S:%2$S p

# LOCALIZATION NOTE (until.hour.minutes.pm):
# %1$S = matches numbers 0-23
# %2$S = matches numbers 0-59
until.hour.minutes.pm =

# LOCALIZATION NOTE (monthname.day):
# %1$S = matches numbers 1-31 and number.x
# %2$S = matches monthname
from.monthname.day = %1$S %2$S | %2$S %1$S | %2$S %1$Sst | %2$S %1$Snd | %2$S %1$Srd | %2$S %1$Sth | %1$Sst of %2$S | %1$Snd of %2$S | %1$Srd of %2$S | %1$Sth of %2$S

# LOCALIZATION NOTE (until.monthname.day):
# %1$S = matches numbers 1-31
# %2$S = matches monthname
until.monthname.day =

# LOCALIZATION NOTE (month.day):
# %1$S = matches numbers 1-31
# %2$S = matches numbers 1-12
from.month.day = %1$S/%2$S

# LOCALIZATION NOTE (until.month.day):
# %1$S = matches numbers 1-31 and number.x
# %2$S = matches numbers 1-12
until.month.day =

# LOCALIZATION NOTE (year.month.day):
# %1$S = matches numbers 1-31
# %2$S = matches numbers 1-12
# %3$S = matches 2/4 numbers
from.year.month.day = %1$S/%2$S/%3$S | %1$S-%2$S-%3$S

# LOCALIZATION NOTE (until.year.month.day):
# %1$S = matches numbers 1-31
# %2$S = matches numbers 1-12
# %3$S = matches 2/4 numbers
until.year.month.day =

# LOCALIZATION NOTE (year.monthname.day):
# %1$S = matches numbers 1-31
# %2$S = matches monthname
# %3$S = matches 2/4 numbers
from.year.monthname.day = %1$S %2$S %3$S | %1$Sst %2$S %3$S | %1$Snd %2$S %3$S | %1$Srd %2$S %3$S | %1$Sth %2$S %3$S | %1$S %2$S, %3$S | %2$S %1$S, %3$S | %1$S-%2$S-%3$S

# LOCALIZATION NOTE (until.year.monthname.day):
# %1$S = matches numbers 1-31
# %2$S = matches monthname
# %3$S = matches 2/4 numbers
until.year.monthname.day =

# LOCALIZATION NOTE (duration.*):
# can be a list of values, separate variants by |

# LOCALIZATION NOTE (duration.minutes):
# %1$S = matches 1/2 numbers and number.0 - and number.31
duration.minutes = %1$S minute | %1$S minutes | %1$S min | %1$S mins

# LOCALIZATION NOTE (duration.hours):
# %1$S = matches 1/2 numbers and number.0 - and number.31
duration.hours = %1$S hour | %1$S hours

# LOCALIZATION NOTE (duration.days):
# %1$S = matches 1/2 numbers and number.0 - and number.31
duration.days = %1$S day | %1$S days

# LOCALIZATION NOTE (month.*):
# can be a list of values, separate variants by |
month.1 = january | jan | jan.
month.2 = february | feb | feb.
month.3 = march | mar | mar.
month.4 = april | apr | apr.
month.5 = may
month.6 = june | jun | jun.
month.7 = july | jul | jul.
month.8 = august | aug | aug.
month.9 = september | sep | sep. | sept.
month.10 = october | oct | oct.
month.11 = november | nov | nov.
month.12 = december | dec | dec.

# LOCALIZATION NOTE (weekday.*):
# used to derive start date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
from.weekday.0 = sunday | sundays | sun
from.weekday.1 = monday | mondays | mon
from.weekday.2 = tuesday | tuesdays | tues | tue
from.weekday.3 = wednesday | wednesdays | weds | wed
from.weekday.4 = thursday | thursdays | thurs | thur | thu
from.weekday.5 = friday | fridays | fri
from.weekday.6 = saturday | saturdays | sat

# LOCALIZATION NOTE (until.weekday.*):
# used to derive end date based on weekdays mentioned
# can be a list of values, separate variants by |
# LOCALIZATION NOTE (until.weekday.0):
# Regardless of what the first day of the week is in your country, 0 is Sunday here.
until.weekday.0 =
until.weekday.1 =
until.weekday.2 =
until.weekday.3 =
until.weekday.4 =
until.weekday.5 =
until.weekday.6 =

# LOCALIZATION NOTE (number.*):
# used within other patterns to understand dates where day of month isn't written with digits
# can be a list of values, separate variants by |
number.0 = zero
number.1 = one | first
number.2 = two | second
number.3 = three | third
number.4 = four | fourth
number.5 = five | fifth
number.6 = six | sixth
number.7 = seven | seventh
number.8 = eight | eighth
number.9 = nine | ninth
number.10 = ten | tenth
number.11 = eleven | eleventh
number.12 = twelve | twelfth
number.13 = thirteen | thirteenth
number.14 = fourteen | fourteenth
number.15 = fifteen | fifteenth
number.16 = sixteen | sixteenth
number.17 = seventeen | seventeenth
number.18 = eighteen | eighteenth
number.19 = nineteen | nineteenth
number.20 = twenty | twentieth
number.21 = twenty one | twenty first
number.22 = twenty two | twenty second
number.23 = twenty three | twenty third
number.24 = twenty four | twenty fourth
number.25 = twenty five | twenty fifth
number.26 = twenty six | twenty sixth
number.27 = twenty seven | twenty seventh
number.28 = twenty eight | twenty eighth
number.29 = twenty nine | twenty ninth
number.30 = thirty | thirtieth
number.31 = thirty one | thirty first

# LOCALIZATION NOTE (alphabet):
# list all lower and uppercase letters if your language has an alphabet
# otherwise leave it empty
alphabet = abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
