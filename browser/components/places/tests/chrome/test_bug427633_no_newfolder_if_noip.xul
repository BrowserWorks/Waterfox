<?xml version="1.0"?>

<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                 type="text/css"?>

<?xml-stylesheet href="chrome://browser/skin/places/editBookmarkOverlay.css"?>
<?xml-stylesheet href="chrome://browser/content/places/places.css"?>
<?xml-stylesheet href="chrome://browser/skin/places/places.css"?>

<?xul-overlay href="chrome://browser/content/places/placesOverlay.xul"?>
<?xul-overlay href="chrome://browser/content/places/editBookmarkOverlay.xul"?>

<!DOCTYPE window [
  <!ENTITY % editBookmarkOverlayDTD SYSTEM "chrome://browser/locale/places/editBookmarkOverlay.dtd">
  %editBookmarkOverlayDTD;
]>

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        title="Bug 427633 - Disable creating a New Folder in the bookmarks dialogs if insertionPoint is invalid"
        onload="runTest();">

  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
  <script type="application/javascript"
          src="chrome://browser/content/places/editBookmarkOverlay.js"/>

  <body xmlns="http://www.w3.org/1999/xhtml" />

  <vbox id="editBookmarkPanelContent"/>

  <script type="application/javascript">
  <![CDATA[

     /**
      * Bug 427633 - Disable creating a New Folder in the bookmarks dialogs if
      * insertionPoint is invalid.
      */

    function runTest() {
      SimpleTest.waitForExplicitFinish();

      (async function() {
        // Add a bookmark.
        let bm = await PlacesUtils.bookmarks.insert({
          parentGuid: PlacesUtils.bookmarks.toolbarGuid,
          url: "http://www.example.com/",
          index: PlacesUtils.bookmarks.DEFAULT_INDEX,
          type: PlacesUtils.bookmarks.TYPE_BOOKMARK,
          title: "mozilla"
        });

        // Init panel.
        ok(gEditItemOverlay, "gEditItemOverlay is in context");
        let node = await PlacesUIUtils.promiseNodeLikeFromFetchInfo(bm);
        gEditItemOverlay.initPanel({ node });
        ok(gEditItemOverlay.initialized, "gEditItemOverlay is initialized");

        let tree = gEditItemOverlay._element("folderTree");
        await openFolderTree(tree);

        tree.view.selection.clearSelection();
        ok(document.getElementById("editBMPanel_newFolderButton").disabled,
           "New folder button is disabled if there's no selection");

        // Cleanup.
        await PlacesUtils.bookmarks.remove(bm.guid);
      })().then(() => SimpleTest.finish());
    }

    function openFolderTree(tree) {
      return new Promise(resolve => {
        tree.addEventListener("DOMAttrModified", function onAttrModified(event) {
          if (event.attrName == "place") {
            tree.removeEventListener("DOMAttrModified", onAttrModified);
            resolve();
          }
        });

        // Open the folder tree.
        document.getElementById("editBMPanel_foldersExpander").doCommand();
      });
    }
  ]]>
  </script>

</window>
