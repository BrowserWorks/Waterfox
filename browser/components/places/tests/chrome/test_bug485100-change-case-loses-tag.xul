<?xml version="1.0"?>

<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                 type="text/css"?>

<?xml-stylesheet href="chrome://browser/skin/places/editBookmarkOverlay.css"?>
<?xml-stylesheet href="chrome://browser/content/places/places.css"?>
<?xml-stylesheet href="chrome://browser/skin/places/places.css"?>

<?xul-overlay href="chrome://browser/content/places/placesOverlay.xul"?>
<?xul-overlay href="chrome://browser/content/places/editBookmarkOverlay.xul"?>

<!DOCTYPE window [
  <!ENTITY % editBookmarkOverlayDTD SYSTEM "chrome://browser/locale/places/editBookmarkOverlay.dtd">
  %editBookmarkOverlayDTD;
]>

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        title="485100: Exchanging a letter of a tag name with its big/small equivalent removes tag from bookmark"
        onload="runTest();">

  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
  <script type="application/javascript"
          src="chrome://browser/content/places/editBookmarkOverlay.js"/>
  <script type="application/javascript" src="head.js" />

  <body xmlns="http://www.w3.org/1999/xhtml" />

  <vbox id="editBookmarkPanelContent"/>

  <script type="application/javascript">
  <![CDATA[
    function runTest() {
      SimpleTest.waitForExplicitFinish();
      (async function() {
        let testTag = "foo";
        let testTagUpper = "Foo";
        let testURI = Services.io.newURI("http://www.example.com/");

        // Add a bookmark.
        let bm = await PlacesUtils.bookmarks.insert({
          parentGuid: PlacesUtils.bookmarks.toolbarGuid,
          index: PlacesUtils.bookmarks.DEFAULT_INDEX,
          type: PlacesUtils.bookmarks.TYPE_BOOKMARK,
          title: "mozilla",
          url: testURI
        });

        // Init panel
        ok(gEditItemOverlay, "gEditItemOverlay is in context");
        let node = await PlacesUIUtils.promiseNodeLikeFromFetchInfo(bm);
        gEditItemOverlay.initPanel({ node });

        // add a tag
        document.getElementById("editBMPanel_tagsField").value = testTag;
        let promiseNotification = PlacesTestUtils.waitForNotification(
          "onItemChanged", (id, property) => property == "tags");
        gEditItemOverlay.onTagsFieldChange();
        await promiseNotification;

        // test that the tag has been added in the backend
        is(PlacesUtils.tagging.getTagsForURI(testURI)[0], testTag, "tags match");

        // change the tag
        document.getElementById("editBMPanel_tagsField").value = testTagUpper;
        // The old sync API doesn't notify a tags change, and fixing it would be
        // quite complex, so we just wait for a title change until tags are
        // refactored.
        promiseNotification = PlacesTestUtils.waitForNotification(
          "onItemChanged", (id, property) => property == "title");
        gEditItemOverlay.onTagsFieldChange();
        await promiseNotification;

        // test that the tag has been added in the backend
        is(PlacesUtils.tagging.getTagsForURI(testURI)[0], testTagUpper, "tags match");

        // Cleanup.
        PlacesUtils.tagging.untagURI(testURI, [testTag]);
        await PlacesUtils.bookmarks.remove(bm.guid);
      })().then(() => SimpleTest.finish());
    }
  ]]>
  </script>

</window>
