
// table_init.wast:5
let $1 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x86\x80\x80\x80\x00\x05\x00\x00\x00\x00\x00\x07\x9f\x80\x80\x80\x00\x05\x03\x65\x66\x30\x00\x00\x03\x65\x66\x31\x00\x01\x03\x65\x66\x32\x00\x02\x03\x65\x66\x33\x00\x03\x03\x65\x66\x34\x00\x04\x0a\xae\x80\x80\x80\x00\x05\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b");

// table_init.wast:12
register("a", $1)

// table_init.wast:14
let $2 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xcb\x80\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x07\x41\x00\x41\x04\xfc\x0c\x01\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b");

// table_init.wast:39
run(() => call($2, "test", []));

// table_init.wast:40
assert_trap(() => call($2, "check", [0]));

// table_init.wast:41
assert_trap(() => call($2, "check", [1]));

// table_init.wast:42
assert_return(() => call($2, "check", [2]), 3);

// table_init.wast:43
assert_return(() => call($2, "check", [3]), 1);

// table_init.wast:44
assert_return(() => call($2, "check", [4]), 4);

// table_init.wast:45
assert_return(() => call($2, "check", [5]), 1);

// table_init.wast:46
assert_trap(() => call($2, "check", [6]));

// table_init.wast:47
assert_return(() => call($2, "check", [7]), 2);

// table_init.wast:48
assert_return(() => call($2, "check", [8]), 7);

// table_init.wast:49
assert_return(() => call($2, "check", [9]), 1);

// table_init.wast:50
assert_return(() => call($2, "check", [10]), 8);

// table_init.wast:51
assert_trap(() => call($2, "check", [11]));

// table_init.wast:52
assert_return(() => call($2, "check", [12]), 7);

// table_init.wast:53
assert_return(() => call($2, "check", [13]), 5);

// table_init.wast:54
assert_return(() => call($2, "check", [14]), 2);

// table_init.wast:55
assert_return(() => call($2, "check", [15]), 3);

// table_init.wast:56
assert_return(() => call($2, "check", [16]), 6);

// table_init.wast:57
assert_trap(() => call($2, "check", [17]));

// table_init.wast:58
assert_trap(() => call($2, "check", [18]));

// table_init.wast:59
assert_trap(() => call($2, "check", [19]));

// table_init.wast:60
assert_trap(() => call($2, "check", [20]));

// table_init.wast:61
assert_trap(() => call($2, "check", [21]));

// table_init.wast:62
assert_trap(() => call($2, "check", [22]));

// table_init.wast:63
assert_trap(() => call($2, "check", [23]));

// table_init.wast:64
assert_trap(() => call($2, "check", [24]));

// table_init.wast:65
assert_trap(() => call($2, "check", [25]));

// table_init.wast:66
assert_trap(() => call($2, "check", [26]));

// table_init.wast:67
assert_trap(() => call($2, "check", [27]));

// table_init.wast:68
assert_trap(() => call($2, "check", [28]));

// table_init.wast:69
assert_trap(() => call($2, "check", [29]));

// table_init.wast:71
let $3 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xcb\x80\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0f\x41\x01\x41\x03\xfc\x0c\x03\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b");

// table_init.wast:96
run(() => call($3, "test", []));

// table_init.wast:97
assert_trap(() => call($3, "check", [0]));

// table_init.wast:98
assert_trap(() => call($3, "check", [1]));

// table_init.wast:99
assert_return(() => call($3, "check", [2]), 3);

// table_init.wast:100
assert_return(() => call($3, "check", [3]), 1);

// table_init.wast:101
assert_return(() => call($3, "check", [4]), 4);

// table_init.wast:102
assert_return(() => call($3, "check", [5]), 1);

// table_init.wast:103
assert_trap(() => call($3, "check", [6]));

// table_init.wast:104
assert_trap(() => call($3, "check", [7]));

// table_init.wast:105
assert_trap(() => call($3, "check", [8]));

// table_init.wast:106
assert_trap(() => call($3, "check", [9]));

// table_init.wast:107
assert_trap(() => call($3, "check", [10]));

// table_init.wast:108
assert_trap(() => call($3, "check", [11]));

// table_init.wast:109
assert_return(() => call($3, "check", [12]), 7);

// table_init.wast:110
assert_return(() => call($3, "check", [13]), 5);

// table_init.wast:111
assert_return(() => call($3, "check", [14]), 2);

// table_init.wast:112
assert_return(() => call($3, "check", [15]), 9);

// table_init.wast:113
assert_return(() => call($3, "check", [16]), 2);

// table_init.wast:114
assert_return(() => call($3, "check", [17]), 7);

// table_init.wast:115
assert_trap(() => call($3, "check", [18]));

// table_init.wast:116
assert_trap(() => call($3, "check", [19]));

// table_init.wast:117
assert_trap(() => call($3, "check", [20]));

// table_init.wast:118
assert_trap(() => call($3, "check", [21]));

// table_init.wast:119
assert_trap(() => call($3, "check", [22]));

// table_init.wast:120
assert_trap(() => call($3, "check", [23]));

// table_init.wast:121
assert_trap(() => call($3, "check", [24]));

// table_init.wast:122
assert_trap(() => call($3, "check", [25]));

// table_init.wast:123
assert_trap(() => call($3, "check", [26]));

// table_init.wast:124
assert_trap(() => call($3, "check", [27]));

// table_init.wast:125
assert_trap(() => call($3, "check", [28]));

// table_init.wast:126
assert_trap(() => call($3, "check", [29]));

// table_init.wast:128
let $4 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\x8d\x81\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\xce\x80\x80\x80\x00\x00\x41\x07\x41\x00\x41\x04\xfc\x0c\x01\x00\xfc\x0d\x01\x41\x0f\x41\x01\x41\x03\xfc\x0c\x03\x00\xfc\x0d\x03\x41\x14\x41\x0f\x41\x05\xfc\x0e\x00\x00\x41\x15\x41\x1d\x41\x01\xfc\x0e\x00\x00\x41\x18\x41\x0a\x41\x01\xfc\x0e\x00\x00\x41\x0d\x41\x0b\x41\x04\xfc\x0e\x00\x00\x41\x13\x41\x14\x41\x05\xfc\x0e\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b");

// table_init.wast:161
run(() => call($4, "test", []));

// table_init.wast:162
assert_trap(() => call($4, "check", [0]));

// table_init.wast:163
assert_trap(() => call($4, "check", [1]));

// table_init.wast:164
assert_return(() => call($4, "check", [2]), 3);

// table_init.wast:165
assert_return(() => call($4, "check", [3]), 1);

// table_init.wast:166
assert_return(() => call($4, "check", [4]), 4);

// table_init.wast:167
assert_return(() => call($4, "check", [5]), 1);

// table_init.wast:168
assert_trap(() => call($4, "check", [6]));

// table_init.wast:169
assert_return(() => call($4, "check", [7]), 2);

// table_init.wast:170
assert_return(() => call($4, "check", [8]), 7);

// table_init.wast:171
assert_return(() => call($4, "check", [9]), 1);

// table_init.wast:172
assert_return(() => call($4, "check", [10]), 8);

// table_init.wast:173
assert_trap(() => call($4, "check", [11]));

// table_init.wast:174
assert_return(() => call($4, "check", [12]), 7);

// table_init.wast:175
assert_trap(() => call($4, "check", [13]));

// table_init.wast:176
assert_return(() => call($4, "check", [14]), 7);

// table_init.wast:177
assert_return(() => call($4, "check", [15]), 5);

// table_init.wast:178
assert_return(() => call($4, "check", [16]), 2);

// table_init.wast:179
assert_return(() => call($4, "check", [17]), 7);

// table_init.wast:180
assert_trap(() => call($4, "check", [18]));

// table_init.wast:181
assert_return(() => call($4, "check", [19]), 9);

// table_init.wast:182
assert_trap(() => call($4, "check", [20]));

// table_init.wast:183
assert_return(() => call($4, "check", [21]), 7);

// table_init.wast:184
assert_trap(() => call($4, "check", [22]));

// table_init.wast:185
assert_return(() => call($4, "check", [23]), 8);

// table_init.wast:186
assert_return(() => call($4, "check", [24]), 8);

// table_init.wast:187
assert_trap(() => call($4, "check", [25]));

// table_init.wast:188
assert_trap(() => call($4, "check", [26]));

// table_init.wast:189
assert_trap(() => call($4, "check", [27]));

// table_init.wast:190
assert_trap(() => call($4, "check", [28]));

// table_init.wast:191
assert_trap(() => call($4, "check", [29]));

// table_init.wast:192
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfc\x0d\x00\x0b");

// table_init.wast:198
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:204
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x01\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x85\x80\x80\x80\x00\x01\x01\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x02\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x85\x80\x80\x80\x00\x00\xfc\x0d\x04\x0b");

// table_init.wast:212
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x01\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x85\x80\x80\x80\x00\x01\x01\x00\x01\x00\x0a\x9b\x80\x80\x80\x00\x02\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x01\x41\x01\xfc\x0c\x04\x00\x0b");

// table_init.wast:221
let $5 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xe5\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x85\x80\x80\x80\x00\x00\xfc\x0d\x02\x0b");

// table_init.wast:242
run(() => call($5, "test", []));

// table_init.wast:244
let $6 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x01\x41\x01\xfc\x0c\x02\x00\x0b");

// table_init.wast:265
assert_trap(() => call($6, "test", []));

// table_init.wast:267
let $7 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xf6\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x96\x80\x80\x80\x00\x00\x41\x0c\x41\x01\x41\x01\xfc\x0c\x01\x00\x41\x15\x41\x01\x41\x01\xfc\x0c\x01\x00\x0b");

// table_init.wast:288
run(() => call($7, "test", []));

// table_init.wast:290
let $8 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xe8\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x88\x80\x80\x80\x00\x00\xfc\x0d\x01\xfc\x0d\x01\x0b");

// table_init.wast:311
run(() => call($8, "test", []));

// table_init.wast:313
let $9 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xef\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8f\x80\x80\x80\x00\x00\xfc\x0d\x01\x41\x0c\x41\x01\x41\x01\xfc\x0c\x01\x00\x0b");

// table_init.wast:334
assert_trap(() => call($9, "test", []));

// table_init.wast:336
let $10 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x00\x41\x05\xfc\x0c\x01\x00\x0b");

// table_init.wast:357
assert_trap(() => call($10, "test", []));

// table_init.wast:359
let $11 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x02\x41\x03\xfc\x0c\x01\x00\x0b");

// table_init.wast:380
assert_trap(() => call($11, "test", []));

// table_init.wast:382
let $12 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1c\x41\x01\x41\x03\xfc\x0c\x01\x00\x0b");

// table_init.wast:403
assert_trap(() => call($12, "test", []));

// table_init.wast:405
let $13 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x04\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:426
run(() => call($13, "test", []));

// table_init.wast:428
let $14 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x05\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:449
assert_trap(() => call($14, "test", []));

// table_init.wast:451
let $15 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1e\x41\x02\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:472
run(() => call($15, "test", []));

// table_init.wast:474
let $16 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1f\x41\x02\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:495
assert_trap(() => call($16, "test", []));

// table_init.wast:497
let $17 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1e\x41\x04\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:518
run(() => call($17, "test", []));

// table_init.wast:520
let $18 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x1e\x1e\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1f\x41\x05\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:541
assert_trap(() => call($18, "test", []));

// table_init.wast:543
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x41\x01\x41\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:552
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x41\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:561
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x01\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:570
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x41\x01\x43\x00\x00\x80\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:579
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x41\x01\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:588
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x41\x01\x43\x00\x00\x80\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:597
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x41\x01\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:606
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x42\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:615
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x41\x01\x42\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:624
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x42\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:633
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x01\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:642
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:651
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:660
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:669
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:678
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x41\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:687
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x41\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:696
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x41\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:705
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:714
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:723
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa2\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x95\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:732
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:741
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa6\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x99\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:750
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x42\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:759
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x42\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:768
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x42\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:777
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:786
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:795
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa6\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x99\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:804
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:813
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xaa\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9d\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:822
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x42\x01\x41\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:831
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x42\x01\x41\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:840
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x42\x01\x41\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:849
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x42\x01\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:858
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x42\x01\x43\x00\x00\x80\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:867
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x42\x01\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:876
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x42\x01\x43\x00\x00\x80\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:885
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x42\x01\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:894
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x42\x01\x42\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:903
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x42\x01\x42\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:912
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x42\x01\x42\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:921
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x42\x01\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:930
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:939
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:948
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:957
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:966
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:975
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:984
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:993
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1002
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1011
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa6\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x99\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1020
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1029
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xaa\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9d\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1038
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1047
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1056
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1065
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1074
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1083
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xaa\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9d\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1092
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1101
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xae\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\xa1\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1110
let $19 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x20\x40\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1138
assert_trap(() => call($19, "run", [24, 16]));

// table_init.wast:1139
assert_trap(() => call($19, "test", [0]));

// table_init.wast:1140
assert_trap(() => call($19, "test", [1]));

// table_init.wast:1141
assert_trap(() => call($19, "test", [2]));

// table_init.wast:1142
assert_trap(() => call($19, "test", [3]));

// table_init.wast:1143
assert_trap(() => call($19, "test", [4]));

// table_init.wast:1144
assert_trap(() => call($19, "test", [5]));

// table_init.wast:1145
assert_trap(() => call($19, "test", [6]));

// table_init.wast:1146
assert_trap(() => call($19, "test", [7]));

// table_init.wast:1147
assert_trap(() => call($19, "test", [8]));

// table_init.wast:1148
assert_trap(() => call($19, "test", [9]));

// table_init.wast:1149
assert_trap(() => call($19, "test", [10]));

// table_init.wast:1150
assert_trap(() => call($19, "test", [11]));

// table_init.wast:1151
assert_trap(() => call($19, "test", [12]));

// table_init.wast:1152
assert_trap(() => call($19, "test", [13]));

// table_init.wast:1153
assert_trap(() => call($19, "test", [14]));

// table_init.wast:1154
assert_trap(() => call($19, "test", [15]));

// table_init.wast:1155
assert_trap(() => call($19, "test", [16]));

// table_init.wast:1156
assert_trap(() => call($19, "test", [17]));

// table_init.wast:1157
assert_trap(() => call($19, "test", [18]));

// table_init.wast:1158
assert_trap(() => call($19, "test", [19]));

// table_init.wast:1159
assert_trap(() => call($19, "test", [20]));

// table_init.wast:1160
assert_trap(() => call($19, "test", [21]));

// table_init.wast:1161
assert_trap(() => call($19, "test", [22]));

// table_init.wast:1162
assert_trap(() => call($19, "test", [23]));

// table_init.wast:1163
assert_trap(() => call($19, "test", [24]));

// table_init.wast:1164
assert_trap(() => call($19, "test", [25]));

// table_init.wast:1165
assert_trap(() => call($19, "test", [26]));

// table_init.wast:1166
assert_trap(() => call($19, "test", [27]));

// table_init.wast:1167
assert_trap(() => call($19, "test", [28]));

// table_init.wast:1168
assert_trap(() => call($19, "test", [29]));

// table_init.wast:1169
assert_trap(() => call($19, "test", [30]));

// table_init.wast:1170
assert_trap(() => call($19, "test", [31]));

// table_init.wast:1172
let $20 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x20\x40\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1200
assert_trap(() => call($20, "run", [25, 16]));

// table_init.wast:1201
assert_trap(() => call($20, "test", [0]));

// table_init.wast:1202
assert_trap(() => call($20, "test", [1]));

// table_init.wast:1203
assert_trap(() => call($20, "test", [2]));

// table_init.wast:1204
assert_trap(() => call($20, "test", [3]));

// table_init.wast:1205
assert_trap(() => call($20, "test", [4]));

// table_init.wast:1206
assert_trap(() => call($20, "test", [5]));

// table_init.wast:1207
assert_trap(() => call($20, "test", [6]));

// table_init.wast:1208
assert_trap(() => call($20, "test", [7]));

// table_init.wast:1209
assert_trap(() => call($20, "test", [8]));

// table_init.wast:1210
assert_trap(() => call($20, "test", [9]));

// table_init.wast:1211
assert_trap(() => call($20, "test", [10]));

// table_init.wast:1212
assert_trap(() => call($20, "test", [11]));

// table_init.wast:1213
assert_trap(() => call($20, "test", [12]));

// table_init.wast:1214
assert_trap(() => call($20, "test", [13]));

// table_init.wast:1215
assert_trap(() => call($20, "test", [14]));

// table_init.wast:1216
assert_trap(() => call($20, "test", [15]));

// table_init.wast:1217
assert_trap(() => call($20, "test", [16]));

// table_init.wast:1218
assert_trap(() => call($20, "test", [17]));

// table_init.wast:1219
assert_trap(() => call($20, "test", [18]));

// table_init.wast:1220
assert_trap(() => call($20, "test", [19]));

// table_init.wast:1221
assert_trap(() => call($20, "test", [20]));

// table_init.wast:1222
assert_trap(() => call($20, "test", [21]));

// table_init.wast:1223
assert_trap(() => call($20, "test", [22]));

// table_init.wast:1224
assert_trap(() => call($20, "test", [23]));

// table_init.wast:1225
assert_trap(() => call($20, "test", [24]));

// table_init.wast:1226
assert_trap(() => call($20, "test", [25]));

// table_init.wast:1227
assert_trap(() => call($20, "test", [26]));

// table_init.wast:1228
assert_trap(() => call($20, "test", [27]));

// table_init.wast:1229
assert_trap(() => call($20, "test", [28]));

// table_init.wast:1230
assert_trap(() => call($20, "test", [29]));

// table_init.wast:1231
assert_trap(() => call($20, "test", [30]));

// table_init.wast:1232
assert_trap(() => call($20, "test", [31]));

// table_init.wast:1234
let $21 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x87\x80\x80\x80\x00\x01\x70\x01\xa0\x01\xc0\x02\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1262
assert_trap(() => call($21, "run", [96, 32]));

// table_init.wast:1263
assert_trap(() => call($21, "test", [0]));

// table_init.wast:1264
assert_trap(() => call($21, "test", [1]));

// table_init.wast:1265
assert_trap(() => call($21, "test", [2]));

// table_init.wast:1266
assert_trap(() => call($21, "test", [3]));

// table_init.wast:1267
assert_trap(() => call($21, "test", [4]));

// table_init.wast:1268
assert_trap(() => call($21, "test", [5]));

// table_init.wast:1269
assert_trap(() => call($21, "test", [6]));

// table_init.wast:1270
assert_trap(() => call($21, "test", [7]));

// table_init.wast:1271
assert_trap(() => call($21, "test", [8]));

// table_init.wast:1272
assert_trap(() => call($21, "test", [9]));

// table_init.wast:1273
assert_trap(() => call($21, "test", [10]));

// table_init.wast:1274
assert_trap(() => call($21, "test", [11]));

// table_init.wast:1275
assert_trap(() => call($21, "test", [12]));

// table_init.wast:1276
assert_trap(() => call($21, "test", [13]));

// table_init.wast:1277
assert_trap(() => call($21, "test", [14]));

// table_init.wast:1278
assert_trap(() => call($21, "test", [15]));

// table_init.wast:1279
assert_trap(() => call($21, "test", [16]));

// table_init.wast:1280
assert_trap(() => call($21, "test", [17]));

// table_init.wast:1281
assert_trap(() => call($21, "test", [18]));

// table_init.wast:1282
assert_trap(() => call($21, "test", [19]));

// table_init.wast:1283
assert_trap(() => call($21, "test", [20]));

// table_init.wast:1284
assert_trap(() => call($21, "test", [21]));

// table_init.wast:1285
assert_trap(() => call($21, "test", [22]));

// table_init.wast:1286
assert_trap(() => call($21, "test", [23]));

// table_init.wast:1287
assert_trap(() => call($21, "test", [24]));

// table_init.wast:1288
assert_trap(() => call($21, "test", [25]));

// table_init.wast:1289
assert_trap(() => call($21, "test", [26]));

// table_init.wast:1290
assert_trap(() => call($21, "test", [27]));

// table_init.wast:1291
assert_trap(() => call($21, "test", [28]));

// table_init.wast:1292
assert_trap(() => call($21, "test", [29]));

// table_init.wast:1293
assert_trap(() => call($21, "test", [30]));

// table_init.wast:1294
assert_trap(() => call($21, "test", [31]));

// table_init.wast:1295
assert_trap(() => call($21, "test", [32]));

// table_init.wast:1296
assert_trap(() => call($21, "test", [33]));

// table_init.wast:1297
assert_trap(() => call($21, "test", [34]));

// table_init.wast:1298
assert_trap(() => call($21, "test", [35]));

// table_init.wast:1299
assert_trap(() => call($21, "test", [36]));

// table_init.wast:1300
assert_trap(() => call($21, "test", [37]));

// table_init.wast:1301
assert_trap(() => call($21, "test", [38]));

// table_init.wast:1302
assert_trap(() => call($21, "test", [39]));

// table_init.wast:1303
assert_trap(() => call($21, "test", [40]));

// table_init.wast:1304
assert_trap(() => call($21, "test", [41]));

// table_init.wast:1305
assert_trap(() => call($21, "test", [42]));

// table_init.wast:1306
assert_trap(() => call($21, "test", [43]));

// table_init.wast:1307
assert_trap(() => call($21, "test", [44]));

// table_init.wast:1308
assert_trap(() => call($21, "test", [45]));

// table_init.wast:1309
assert_trap(() => call($21, "test", [46]));

// table_init.wast:1310
assert_trap(() => call($21, "test", [47]));

// table_init.wast:1311
assert_trap(() => call($21, "test", [48]));

// table_init.wast:1312
assert_trap(() => call($21, "test", [49]));

// table_init.wast:1313
assert_trap(() => call($21, "test", [50]));

// table_init.wast:1314
assert_trap(() => call($21, "test", [51]));

// table_init.wast:1315
assert_trap(() => call($21, "test", [52]));

// table_init.wast:1316
assert_trap(() => call($21, "test", [53]));

// table_init.wast:1317
assert_trap(() => call($21, "test", [54]));

// table_init.wast:1318
assert_trap(() => call($21, "test", [55]));

// table_init.wast:1319
assert_trap(() => call($21, "test", [56]));

// table_init.wast:1320
assert_trap(() => call($21, "test", [57]));

// table_init.wast:1321
assert_trap(() => call($21, "test", [58]));

// table_init.wast:1322
assert_trap(() => call($21, "test", [59]));

// table_init.wast:1323
assert_trap(() => call($21, "test", [60]));

// table_init.wast:1324
assert_trap(() => call($21, "test", [61]));

// table_init.wast:1325
assert_trap(() => call($21, "test", [62]));

// table_init.wast:1326
assert_trap(() => call($21, "test", [63]));

// table_init.wast:1327
assert_trap(() => call($21, "test", [64]));

// table_init.wast:1328
assert_trap(() => call($21, "test", [65]));

// table_init.wast:1329
assert_trap(() => call($21, "test", [66]));

// table_init.wast:1330
assert_trap(() => call($21, "test", [67]));

// table_init.wast:1331
assert_trap(() => call($21, "test", [68]));

// table_init.wast:1332
assert_trap(() => call($21, "test", [69]));

// table_init.wast:1333
assert_trap(() => call($21, "test", [70]));

// table_init.wast:1334
assert_trap(() => call($21, "test", [71]));

// table_init.wast:1335
assert_trap(() => call($21, "test", [72]));

// table_init.wast:1336
assert_trap(() => call($21, "test", [73]));

// table_init.wast:1337
assert_trap(() => call($21, "test", [74]));

// table_init.wast:1338
assert_trap(() => call($21, "test", [75]));

// table_init.wast:1339
assert_trap(() => call($21, "test", [76]));

// table_init.wast:1340
assert_trap(() => call($21, "test", [77]));

// table_init.wast:1341
assert_trap(() => call($21, "test", [78]));

// table_init.wast:1342
assert_trap(() => call($21, "test", [79]));

// table_init.wast:1343
assert_trap(() => call($21, "test", [80]));

// table_init.wast:1344
assert_trap(() => call($21, "test", [81]));

// table_init.wast:1345
assert_trap(() => call($21, "test", [82]));

// table_init.wast:1346
assert_trap(() => call($21, "test", [83]));

// table_init.wast:1347
assert_trap(() => call($21, "test", [84]));

// table_init.wast:1348
assert_trap(() => call($21, "test", [85]));

// table_init.wast:1349
assert_trap(() => call($21, "test", [86]));

// table_init.wast:1350
assert_trap(() => call($21, "test", [87]));

// table_init.wast:1351
assert_trap(() => call($21, "test", [88]));

// table_init.wast:1352
assert_trap(() => call($21, "test", [89]));

// table_init.wast:1353
assert_trap(() => call($21, "test", [90]));

// table_init.wast:1354
assert_trap(() => call($21, "test", [91]));

// table_init.wast:1355
assert_trap(() => call($21, "test", [92]));

// table_init.wast:1356
assert_trap(() => call($21, "test", [93]));

// table_init.wast:1357
assert_trap(() => call($21, "test", [94]));

// table_init.wast:1358
assert_trap(() => call($21, "test", [95]));

// table_init.wast:1359
assert_trap(() => call($21, "test", [96]));

// table_init.wast:1360
assert_trap(() => call($21, "test", [97]));

// table_init.wast:1361
assert_trap(() => call($21, "test", [98]));

// table_init.wast:1362
assert_trap(() => call($21, "test", [99]));

// table_init.wast:1363
assert_trap(() => call($21, "test", [100]));

// table_init.wast:1364
assert_trap(() => call($21, "test", [101]));

// table_init.wast:1365
assert_trap(() => call($21, "test", [102]));

// table_init.wast:1366
assert_trap(() => call($21, "test", [103]));

// table_init.wast:1367
assert_trap(() => call($21, "test", [104]));

// table_init.wast:1368
assert_trap(() => call($21, "test", [105]));

// table_init.wast:1369
assert_trap(() => call($21, "test", [106]));

// table_init.wast:1370
assert_trap(() => call($21, "test", [107]));

// table_init.wast:1371
assert_trap(() => call($21, "test", [108]));

// table_init.wast:1372
assert_trap(() => call($21, "test", [109]));

// table_init.wast:1373
assert_trap(() => call($21, "test", [110]));

// table_init.wast:1374
assert_trap(() => call($21, "test", [111]));

// table_init.wast:1375
assert_trap(() => call($21, "test", [112]));

// table_init.wast:1376
assert_trap(() => call($21, "test", [113]));

// table_init.wast:1377
assert_trap(() => call($21, "test", [114]));

// table_init.wast:1378
assert_trap(() => call($21, "test", [115]));

// table_init.wast:1379
assert_trap(() => call($21, "test", [116]));

// table_init.wast:1380
assert_trap(() => call($21, "test", [117]));

// table_init.wast:1381
assert_trap(() => call($21, "test", [118]));

// table_init.wast:1382
assert_trap(() => call($21, "test", [119]));

// table_init.wast:1383
assert_trap(() => call($21, "test", [120]));

// table_init.wast:1384
assert_trap(() => call($21, "test", [121]));

// table_init.wast:1385
assert_trap(() => call($21, "test", [122]));

// table_init.wast:1386
assert_trap(() => call($21, "test", [123]));

// table_init.wast:1387
assert_trap(() => call($21, "test", [124]));

// table_init.wast:1388
assert_trap(() => call($21, "test", [125]));

// table_init.wast:1389
assert_trap(() => call($21, "test", [126]));

// table_init.wast:1390
assert_trap(() => call($21, "test", [127]));

// table_init.wast:1391
assert_trap(() => call($21, "test", [128]));

// table_init.wast:1392
assert_trap(() => call($21, "test", [129]));

// table_init.wast:1393
assert_trap(() => call($21, "test", [130]));

// table_init.wast:1394
assert_trap(() => call($21, "test", [131]));

// table_init.wast:1395
assert_trap(() => call($21, "test", [132]));

// table_init.wast:1396
assert_trap(() => call($21, "test", [133]));

// table_init.wast:1397
assert_trap(() => call($21, "test", [134]));

// table_init.wast:1398
assert_trap(() => call($21, "test", [135]));

// table_init.wast:1399
assert_trap(() => call($21, "test", [136]));

// table_init.wast:1400
assert_trap(() => call($21, "test", [137]));

// table_init.wast:1401
assert_trap(() => call($21, "test", [138]));

// table_init.wast:1402
assert_trap(() => call($21, "test", [139]));

// table_init.wast:1403
assert_trap(() => call($21, "test", [140]));

// table_init.wast:1404
assert_trap(() => call($21, "test", [141]));

// table_init.wast:1405
assert_trap(() => call($21, "test", [142]));

// table_init.wast:1406
assert_trap(() => call($21, "test", [143]));

// table_init.wast:1407
assert_trap(() => call($21, "test", [144]));

// table_init.wast:1408
assert_trap(() => call($21, "test", [145]));

// table_init.wast:1409
assert_trap(() => call($21, "test", [146]));

// table_init.wast:1410
assert_trap(() => call($21, "test", [147]));

// table_init.wast:1411
assert_trap(() => call($21, "test", [148]));

// table_init.wast:1412
assert_trap(() => call($21, "test", [149]));

// table_init.wast:1413
assert_trap(() => call($21, "test", [150]));

// table_init.wast:1414
assert_trap(() => call($21, "test", [151]));

// table_init.wast:1415
assert_trap(() => call($21, "test", [152]));

// table_init.wast:1416
assert_trap(() => call($21, "test", [153]));

// table_init.wast:1417
assert_trap(() => call($21, "test", [154]));

// table_init.wast:1418
assert_trap(() => call($21, "test", [155]));

// table_init.wast:1419
assert_trap(() => call($21, "test", [156]));

// table_init.wast:1420
assert_trap(() => call($21, "test", [157]));

// table_init.wast:1421
assert_trap(() => call($21, "test", [158]));

// table_init.wast:1422
assert_trap(() => call($21, "test", [159]));

// table_init.wast:1424
let $22 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x87\x80\x80\x80\x00\x01\x70\x01\xa0\x01\xc0\x02\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1452
assert_trap(() => call($22, "run", [97, 31]));

// table_init.wast:1453
assert_trap(() => call($22, "test", [0]));

// table_init.wast:1454
assert_trap(() => call($22, "test", [1]));

// table_init.wast:1455
assert_trap(() => call($22, "test", [2]));

// table_init.wast:1456
assert_trap(() => call($22, "test", [3]));

// table_init.wast:1457
assert_trap(() => call($22, "test", [4]));

// table_init.wast:1458
assert_trap(() => call($22, "test", [5]));

// table_init.wast:1459
assert_trap(() => call($22, "test", [6]));

// table_init.wast:1460
assert_trap(() => call($22, "test", [7]));

// table_init.wast:1461
assert_trap(() => call($22, "test", [8]));

// table_init.wast:1462
assert_trap(() => call($22, "test", [9]));

// table_init.wast:1463
assert_trap(() => call($22, "test", [10]));

// table_init.wast:1464
assert_trap(() => call($22, "test", [11]));

// table_init.wast:1465
assert_trap(() => call($22, "test", [12]));

// table_init.wast:1466
assert_trap(() => call($22, "test", [13]));

// table_init.wast:1467
assert_trap(() => call($22, "test", [14]));

// table_init.wast:1468
assert_trap(() => call($22, "test", [15]));

// table_init.wast:1469
assert_trap(() => call($22, "test", [16]));

// table_init.wast:1470
assert_trap(() => call($22, "test", [17]));

// table_init.wast:1471
assert_trap(() => call($22, "test", [18]));

// table_init.wast:1472
assert_trap(() => call($22, "test", [19]));

// table_init.wast:1473
assert_trap(() => call($22, "test", [20]));

// table_init.wast:1474
assert_trap(() => call($22, "test", [21]));

// table_init.wast:1475
assert_trap(() => call($22, "test", [22]));

// table_init.wast:1476
assert_trap(() => call($22, "test", [23]));

// table_init.wast:1477
assert_trap(() => call($22, "test", [24]));

// table_init.wast:1478
assert_trap(() => call($22, "test", [25]));

// table_init.wast:1479
assert_trap(() => call($22, "test", [26]));

// table_init.wast:1480
assert_trap(() => call($22, "test", [27]));

// table_init.wast:1481
assert_trap(() => call($22, "test", [28]));

// table_init.wast:1482
assert_trap(() => call($22, "test", [29]));

// table_init.wast:1483
assert_trap(() => call($22, "test", [30]));

// table_init.wast:1484
assert_trap(() => call($22, "test", [31]));

// table_init.wast:1485
assert_trap(() => call($22, "test", [32]));

// table_init.wast:1486
assert_trap(() => call($22, "test", [33]));

// table_init.wast:1487
assert_trap(() => call($22, "test", [34]));

// table_init.wast:1488
assert_trap(() => call($22, "test", [35]));

// table_init.wast:1489
assert_trap(() => call($22, "test", [36]));

// table_init.wast:1490
assert_trap(() => call($22, "test", [37]));

// table_init.wast:1491
assert_trap(() => call($22, "test", [38]));

// table_init.wast:1492
assert_trap(() => call($22, "test", [39]));

// table_init.wast:1493
assert_trap(() => call($22, "test", [40]));

// table_init.wast:1494
assert_trap(() => call($22, "test", [41]));

// table_init.wast:1495
assert_trap(() => call($22, "test", [42]));

// table_init.wast:1496
assert_trap(() => call($22, "test", [43]));

// table_init.wast:1497
assert_trap(() => call($22, "test", [44]));

// table_init.wast:1498
assert_trap(() => call($22, "test", [45]));

// table_init.wast:1499
assert_trap(() => call($22, "test", [46]));

// table_init.wast:1500
assert_trap(() => call($22, "test", [47]));

// table_init.wast:1501
assert_trap(() => call($22, "test", [48]));

// table_init.wast:1502
assert_trap(() => call($22, "test", [49]));

// table_init.wast:1503
assert_trap(() => call($22, "test", [50]));

// table_init.wast:1504
assert_trap(() => call($22, "test", [51]));

// table_init.wast:1505
assert_trap(() => call($22, "test", [52]));

// table_init.wast:1506
assert_trap(() => call($22, "test", [53]));

// table_init.wast:1507
assert_trap(() => call($22, "test", [54]));

// table_init.wast:1508
assert_trap(() => call($22, "test", [55]));

// table_init.wast:1509
assert_trap(() => call($22, "test", [56]));

// table_init.wast:1510
assert_trap(() => call($22, "test", [57]));

// table_init.wast:1511
assert_trap(() => call($22, "test", [58]));

// table_init.wast:1512
assert_trap(() => call($22, "test", [59]));

// table_init.wast:1513
assert_trap(() => call($22, "test", [60]));

// table_init.wast:1514
assert_trap(() => call($22, "test", [61]));

// table_init.wast:1515
assert_trap(() => call($22, "test", [62]));

// table_init.wast:1516
assert_trap(() => call($22, "test", [63]));

// table_init.wast:1517
assert_trap(() => call($22, "test", [64]));

// table_init.wast:1518
assert_trap(() => call($22, "test", [65]));

// table_init.wast:1519
assert_trap(() => call($22, "test", [66]));

// table_init.wast:1520
assert_trap(() => call($22, "test", [67]));

// table_init.wast:1521
assert_trap(() => call($22, "test", [68]));

// table_init.wast:1522
assert_trap(() => call($22, "test", [69]));

// table_init.wast:1523
assert_trap(() => call($22, "test", [70]));

// table_init.wast:1524
assert_trap(() => call($22, "test", [71]));

// table_init.wast:1525
assert_trap(() => call($22, "test", [72]));

// table_init.wast:1526
assert_trap(() => call($22, "test", [73]));

// table_init.wast:1527
assert_trap(() => call($22, "test", [74]));

// table_init.wast:1528
assert_trap(() => call($22, "test", [75]));

// table_init.wast:1529
assert_trap(() => call($22, "test", [76]));

// table_init.wast:1530
assert_trap(() => call($22, "test", [77]));

// table_init.wast:1531
assert_trap(() => call($22, "test", [78]));

// table_init.wast:1532
assert_trap(() => call($22, "test", [79]));

// table_init.wast:1533
assert_trap(() => call($22, "test", [80]));

// table_init.wast:1534
assert_trap(() => call($22, "test", [81]));

// table_init.wast:1535
assert_trap(() => call($22, "test", [82]));

// table_init.wast:1536
assert_trap(() => call($22, "test", [83]));

// table_init.wast:1537
assert_trap(() => call($22, "test", [84]));

// table_init.wast:1538
assert_trap(() => call($22, "test", [85]));

// table_init.wast:1539
assert_trap(() => call($22, "test", [86]));

// table_init.wast:1540
assert_trap(() => call($22, "test", [87]));

// table_init.wast:1541
assert_trap(() => call($22, "test", [88]));

// table_init.wast:1542
assert_trap(() => call($22, "test", [89]));

// table_init.wast:1543
assert_trap(() => call($22, "test", [90]));

// table_init.wast:1544
assert_trap(() => call($22, "test", [91]));

// table_init.wast:1545
assert_trap(() => call($22, "test", [92]));

// table_init.wast:1546
assert_trap(() => call($22, "test", [93]));

// table_init.wast:1547
assert_trap(() => call($22, "test", [94]));

// table_init.wast:1548
assert_trap(() => call($22, "test", [95]));

// table_init.wast:1549
assert_trap(() => call($22, "test", [96]));

// table_init.wast:1550
assert_trap(() => call($22, "test", [97]));

// table_init.wast:1551
assert_trap(() => call($22, "test", [98]));

// table_init.wast:1552
assert_trap(() => call($22, "test", [99]));

// table_init.wast:1553
assert_trap(() => call($22, "test", [100]));

// table_init.wast:1554
assert_trap(() => call($22, "test", [101]));

// table_init.wast:1555
assert_trap(() => call($22, "test", [102]));

// table_init.wast:1556
assert_trap(() => call($22, "test", [103]));

// table_init.wast:1557
assert_trap(() => call($22, "test", [104]));

// table_init.wast:1558
assert_trap(() => call($22, "test", [105]));

// table_init.wast:1559
assert_trap(() => call($22, "test", [106]));

// table_init.wast:1560
assert_trap(() => call($22, "test", [107]));

// table_init.wast:1561
assert_trap(() => call($22, "test", [108]));

// table_init.wast:1562
assert_trap(() => call($22, "test", [109]));

// table_init.wast:1563
assert_trap(() => call($22, "test", [110]));

// table_init.wast:1564
assert_trap(() => call($22, "test", [111]));

// table_init.wast:1565
assert_trap(() => call($22, "test", [112]));

// table_init.wast:1566
assert_trap(() => call($22, "test", [113]));

// table_init.wast:1567
assert_trap(() => call($22, "test", [114]));

// table_init.wast:1568
assert_trap(() => call($22, "test", [115]));

// table_init.wast:1569
assert_trap(() => call($22, "test", [116]));

// table_init.wast:1570
assert_trap(() => call($22, "test", [117]));

// table_init.wast:1571
assert_trap(() => call($22, "test", [118]));

// table_init.wast:1572
assert_trap(() => call($22, "test", [119]));

// table_init.wast:1573
assert_trap(() => call($22, "test", [120]));

// table_init.wast:1574
assert_trap(() => call($22, "test", [121]));

// table_init.wast:1575
assert_trap(() => call($22, "test", [122]));

// table_init.wast:1576
assert_trap(() => call($22, "test", [123]));

// table_init.wast:1577
assert_trap(() => call($22, "test", [124]));

// table_init.wast:1578
assert_trap(() => call($22, "test", [125]));

// table_init.wast:1579
assert_trap(() => call($22, "test", [126]));

// table_init.wast:1580
assert_trap(() => call($22, "test", [127]));

// table_init.wast:1581
assert_trap(() => call($22, "test", [128]));

// table_init.wast:1582
assert_trap(() => call($22, "test", [129]));

// table_init.wast:1583
assert_trap(() => call($22, "test", [130]));

// table_init.wast:1584
assert_trap(() => call($22, "test", [131]));

// table_init.wast:1585
assert_trap(() => call($22, "test", [132]));

// table_init.wast:1586
assert_trap(() => call($22, "test", [133]));

// table_init.wast:1587
assert_trap(() => call($22, "test", [134]));

// table_init.wast:1588
assert_trap(() => call($22, "test", [135]));

// table_init.wast:1589
assert_trap(() => call($22, "test", [136]));

// table_init.wast:1590
assert_trap(() => call($22, "test", [137]));

// table_init.wast:1591
assert_trap(() => call($22, "test", [138]));

// table_init.wast:1592
assert_trap(() => call($22, "test", [139]));

// table_init.wast:1593
assert_trap(() => call($22, "test", [140]));

// table_init.wast:1594
assert_trap(() => call($22, "test", [141]));

// table_init.wast:1595
assert_trap(() => call($22, "test", [142]));

// table_init.wast:1596
assert_trap(() => call($22, "test", [143]));

// table_init.wast:1597
assert_trap(() => call($22, "test", [144]));

// table_init.wast:1598
assert_trap(() => call($22, "test", [145]));

// table_init.wast:1599
assert_trap(() => call($22, "test", [146]));

// table_init.wast:1600
assert_trap(() => call($22, "test", [147]));

// table_init.wast:1601
assert_trap(() => call($22, "test", [148]));

// table_init.wast:1602
assert_trap(() => call($22, "test", [149]));

// table_init.wast:1603
assert_trap(() => call($22, "test", [150]));

// table_init.wast:1604
assert_trap(() => call($22, "test", [151]));

// table_init.wast:1605
assert_trap(() => call($22, "test", [152]));

// table_init.wast:1606
assert_trap(() => call($22, "test", [153]));

// table_init.wast:1607
assert_trap(() => call($22, "test", [154]));

// table_init.wast:1608
assert_trap(() => call($22, "test", [155]));

// table_init.wast:1609
assert_trap(() => call($22, "test", [156]));

// table_init.wast:1610
assert_trap(() => call($22, "test", [157]));

// table_init.wast:1611
assert_trap(() => call($22, "test", [158]));

// table_init.wast:1612
assert_trap(() => call($22, "test", [159]));

// table_init.wast:1614
let $23 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x40\x40\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1642
assert_trap(() => call($23, "run", [48, -16]));

// table_init.wast:1643
assert_trap(() => call($23, "test", [0]));

// table_init.wast:1644
assert_trap(() => call($23, "test", [1]));

// table_init.wast:1645
assert_trap(() => call($23, "test", [2]));

// table_init.wast:1646
assert_trap(() => call($23, "test", [3]));

// table_init.wast:1647
assert_trap(() => call($23, "test", [4]));

// table_init.wast:1648
assert_trap(() => call($23, "test", [5]));

// table_init.wast:1649
assert_trap(() => call($23, "test", [6]));

// table_init.wast:1650
assert_trap(() => call($23, "test", [7]));

// table_init.wast:1651
assert_trap(() => call($23, "test", [8]));

// table_init.wast:1652
assert_trap(() => call($23, "test", [9]));

// table_init.wast:1653
assert_trap(() => call($23, "test", [10]));

// table_init.wast:1654
assert_trap(() => call($23, "test", [11]));

// table_init.wast:1655
assert_trap(() => call($23, "test", [12]));

// table_init.wast:1656
assert_trap(() => call($23, "test", [13]));

// table_init.wast:1657
assert_trap(() => call($23, "test", [14]));

// table_init.wast:1658
assert_trap(() => call($23, "test", [15]));

// table_init.wast:1659
assert_trap(() => call($23, "test", [16]));

// table_init.wast:1660
assert_trap(() => call($23, "test", [17]));

// table_init.wast:1661
assert_trap(() => call($23, "test", [18]));

// table_init.wast:1662
assert_trap(() => call($23, "test", [19]));

// table_init.wast:1663
assert_trap(() => call($23, "test", [20]));

// table_init.wast:1664
assert_trap(() => call($23, "test", [21]));

// table_init.wast:1665
assert_trap(() => call($23, "test", [22]));

// table_init.wast:1666
assert_trap(() => call($23, "test", [23]));

// table_init.wast:1667
assert_trap(() => call($23, "test", [24]));

// table_init.wast:1668
assert_trap(() => call($23, "test", [25]));

// table_init.wast:1669
assert_trap(() => call($23, "test", [26]));

// table_init.wast:1670
assert_trap(() => call($23, "test", [27]));

// table_init.wast:1671
assert_trap(() => call($23, "test", [28]));

// table_init.wast:1672
assert_trap(() => call($23, "test", [29]));

// table_init.wast:1673
assert_trap(() => call($23, "test", [30]));

// table_init.wast:1674
assert_trap(() => call($23, "test", [31]));

// table_init.wast:1675
assert_trap(() => call($23, "test", [32]));

// table_init.wast:1676
assert_trap(() => call($23, "test", [33]));

// table_init.wast:1677
assert_trap(() => call($23, "test", [34]));

// table_init.wast:1678
assert_trap(() => call($23, "test", [35]));

// table_init.wast:1679
assert_trap(() => call($23, "test", [36]));

// table_init.wast:1680
assert_trap(() => call($23, "test", [37]));

// table_init.wast:1681
assert_trap(() => call($23, "test", [38]));

// table_init.wast:1682
assert_trap(() => call($23, "test", [39]));

// table_init.wast:1683
assert_trap(() => call($23, "test", [40]));

// table_init.wast:1684
assert_trap(() => call($23, "test", [41]));

// table_init.wast:1685
assert_trap(() => call($23, "test", [42]));

// table_init.wast:1686
assert_trap(() => call($23, "test", [43]));

// table_init.wast:1687
assert_trap(() => call($23, "test", [44]));

// table_init.wast:1688
assert_trap(() => call($23, "test", [45]));

// table_init.wast:1689
assert_trap(() => call($23, "test", [46]));

// table_init.wast:1690
assert_trap(() => call($23, "test", [47]));

// table_init.wast:1691
assert_trap(() => call($23, "test", [48]));

// table_init.wast:1692
assert_trap(() => call($23, "test", [49]));

// table_init.wast:1693
assert_trap(() => call($23, "test", [50]));

// table_init.wast:1694
assert_trap(() => call($23, "test", [51]));

// table_init.wast:1695
assert_trap(() => call($23, "test", [52]));

// table_init.wast:1696
assert_trap(() => call($23, "test", [53]));

// table_init.wast:1697
assert_trap(() => call($23, "test", [54]));

// table_init.wast:1698
assert_trap(() => call($23, "test", [55]));

// table_init.wast:1699
assert_trap(() => call($23, "test", [56]));

// table_init.wast:1700
assert_trap(() => call($23, "test", [57]));

// table_init.wast:1701
assert_trap(() => call($23, "test", [58]));

// table_init.wast:1702
assert_trap(() => call($23, "test", [59]));

// table_init.wast:1703
assert_trap(() => call($23, "test", [60]));

// table_init.wast:1704
assert_trap(() => call($23, "test", [61]));

// table_init.wast:1705
assert_trap(() => call($23, "test", [62]));

// table_init.wast:1706
assert_trap(() => call($23, "test", [63]));

// table_init.wast:1708
let $24 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x10\x10\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x08\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1736
assert_trap(() => call($24, "run", [0, -4]));

// table_init.wast:1737
assert_trap(() => call($24, "test", [0]));

// table_init.wast:1738
assert_trap(() => call($24, "test", [1]));

// table_init.wast:1739
assert_trap(() => call($24, "test", [2]));

// table_init.wast:1740
assert_trap(() => call($24, "test", [3]));

// table_init.wast:1741
assert_trap(() => call($24, "test", [4]));

// table_init.wast:1742
assert_trap(() => call($24, "test", [5]));

// table_init.wast:1743
assert_trap(() => call($24, "test", [6]));

// table_init.wast:1744
assert_trap(() => call($24, "test", [7]));

// table_init.wast:1745
assert_trap(() => call($24, "test", [8]));

// table_init.wast:1746
assert_trap(() => call($24, "test", [9]));

// table_init.wast:1747
assert_trap(() => call($24, "test", [10]));

// table_init.wast:1748
assert_trap(() => call($24, "test", [11]));

// table_init.wast:1749
assert_trap(() => call($24, "test", [12]));

// table_init.wast:1750
assert_trap(() => call($24, "test", [13]));

// table_init.wast:1751
assert_trap(() => call($24, "test", [14]));

// table_init.wast:1752
assert_trap(() => call($24, "test", [15]));

// table_init.wast:1754
let $25 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x01\x09\xc4\x81\x80\x80\x00\x41\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x41\x00\x41\x00\x41\x00\xfc\x0c\x40\x00\x0b");
